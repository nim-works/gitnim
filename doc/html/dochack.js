/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI704643086 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301390 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217741.base = NTI33555176;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555176;
var NNI956301396 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI956301390, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI956301396.node = NNI956301396;
var NNI704643086 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI704643086.node = NNI704643086;

function mnewString(len_33556826) {
        return new Array(len_33556826);
  

  
}

function toJSStr(s_33556737) {
  var result_33556738 = null;

    var res_33556772 = newSeq_33556755((s_33556737).length);
    var i_33556773 = 0;
    var j_33556774 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556773 < (s_33556737).length)) break Label2;
          var c_33556775 = s_33556737[i_33556773];
          if ((c_33556775 < 128)) {
          res_33556772[j_33556774] = String.fromCharCode(c_33556775);
          i_33556773 += 1;
          }
          else {
            var helper_33556788 = newSeq_33556755(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556789 = c_33556775.toString(16);
                  if ((((code_33556789) == null ? 0 : (code_33556789).length) == 1)) {
                  helper_33556788.push("%0");;
                  }
                  else {
                  helper_33556788.push("%");;
                  }
                  
                  helper_33556788.push(code_33556789);;
                  i_33556773 += 1;
                  if ((((s_33556737).length <= i_33556773) || (s_33556737[i_33556773] < 128))) {
                  break Label3;
                  }
                  
                  c_33556775 = s_33556737[i_33556773];
                }
            };
++excHandler;
            try {
            res_33556772[j_33556774] = decodeURIComponent(helper_33556788.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556772[j_33556774] = helper_33556788.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556774 += 1;
        }
    };
    if (res_33556772.length < j_33556774) { for (var i = res_33556772.length ; i < j_33556774 ; ++i) res_33556772.push(null); }
               else { res_33556772.length = j_33556774; };
    result_33556738 = res_33556772.join("");

  return result_33556738;

}

function raiseException(e_33556597, ename_33556598) {
    e_33556597.name = ename_33556598;
    if ((excHandler == 0)) {
    unhandledException(e_33556597);
    }
    
    throw e_33556597;

  
}

function addInt(a_33556873, b_33556874) {
        var result = a_33556873 + b_33556874;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557122, a_33557123, b_33557124) {
  var result_33557125 = 0;

  BeforeRet: {
    if (((a_33557123 <= i_33557122) && (i_33557122 <= b_33557124))) {
    result_33557125 = i_33557122;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557125;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557073, src_33557074, ti_33557075) {
  var result_33557084 = null;

    switch (ti_33557075.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557064(ti_33557075))) {
      result_33557084 = src_33557074;
      }
      else {
        result_33557084 = [src_33557074[0], src_33557074[1]];
      }
      
      break;
    case 19:
            if (dest_33557073 === null || dest_33557073 === undefined) {
        dest_33557073 = {};
      }
      else {
        for (var key in dest_33557073) { delete dest_33557073[key]; }
      }
      for (var key in src_33557074) { dest_33557073[key] = src_33557074[key]; }
      result_33557084 = dest_33557073;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557075.base == null))) {
      result_33557084 = nimCopy(dest_33557073, src_33557074, ti_33557075.base);
      }
      else {
      if ((ti_33557075.kind == 17)) {
      result_33557084 = (dest_33557073 === null || dest_33557073 === undefined) ? {m_type: ti_33557075} : dest_33557073;
      }
      else {
        result_33557084 = (dest_33557073 === null || dest_33557073 === undefined) ? {} : dest_33557073;
      }
      }
      nimCopyAux(result_33557084, src_33557074, ti_33557075.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557074)) { 
        if(dest_33557073 === null || dest_33557073 === undefined || dest_33557073.length != src_33557074.length) {
          dest_33557073 = new src_33557074.constructor(src_33557074);
        } else {
          dest_33557073.set(src_33557074, 0);
        }
        result_33557084 = dest_33557073;
      } else {
        if (src_33557074 === null) {
          result_33557084 = null;
        }
        else {
          if (dest_33557073 === null || dest_33557073 === undefined || dest_33557073.length != src_33557074.length) {
            dest_33557073 = new Array(src_33557074.length);
          }
          result_33557084 = dest_33557073;
          for (var i = 0; i < src_33557074.length; ++i) {
            result_33557084[i] = nimCopy(result_33557084[i], src_33557074[i], ti_33557075.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557074 === null) {
        result_33557084 = null;
      }
      else {
        if (dest_33557073 === null || dest_33557073 === undefined || dest_33557073.length != src_33557074.length) {
          dest_33557073 = new Array(src_33557074.length);
        }
        result_33557084 = dest_33557073;
        for (var i = 0; i < src_33557074.length; ++i) {
          result_33557084[i] = nimCopy(result_33557084[i], src_33557074[i], ti_33557075.base);
        }
      }
    
      break;
    case 28:
            if (src_33557074 !== null) {
        result_33557084 = src_33557074.slice(0);
      }
    
      break;
    default: 
      result_33557084 = src_33557074;
      break;
    }

  return result_33557084;

}

function chckIndx(i_33557117, a_33557118, b_33557119) {
  var result_33557120 = 0;

  BeforeRet: {
    if (((a_33557118 <= i_33557117) && (i_33557117 <= b_33557119))) {
    result_33557120 = i_33557117;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557117, a_33557118, b_33557119);
    }
    
  };

  return result_33557120;

}

function makeNimstrLit(c_33556731) {
      var result = [];
  for (var i = 0; i < c_33556731.length; ++i) {
    result[i] = c_33556731.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33556877, b_33556878) {
        var result = a_33556877 - b_33556878;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556734) {
      var ln = c_33556734.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556734.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556734.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_33556881, b_33556882) {
        var result = a_33556881 * b_33556882;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);
var ConstSet9 = setConstr([65, 90], [97, 122]);

function nimMax(a_33556931, b_33556932) {
    var Temporary1;

  var result_33556933 = 0;

  BeforeRet: {
    if ((b_33556932 <= a_33556931)) {
    Temporary1 = a_33556931;
    }
    else {
    Temporary1 = b_33556932;
    }
    
    result_33556933 = Temporary1;
    break BeforeRet;
  };

  return result_33556933;

}

function nimMin(a_33556927, b_33556928) {
    var Temporary1;

  var result_33556929 = 0;

  BeforeRet: {
    if ((a_33556927 <= b_33556928)) {
    Temporary1 = a_33556927;
    }
    else {
    Temporary1 = b_33556928;
    }
    
    result_33556929 = Temporary1;
    break BeforeRet;
  };

  return result_33556929;

}

function addChar(x_33557188, c_33557189) {
    x_33557188.push(c_33557189);

  
}
var objectID_1191182500 = [0];

function setTheme(theme_553648134) {
    document.documentElement.setAttribute("data-theme", theme_553648134);
    window.localStorage.setItem("theme", theme_553648134);

  
}
var Temporary1;
var t_553648153 = window.localStorage.getItem("theme");
if ((t_553648153 == null)) {
Temporary1 = "auto";
}
else {
Temporary1 = t_553648153;
}

setTheme(Temporary1);

function add_33556385(x_33556386, x_33556386_Idx, y_33556387) {
          if (x_33556386[x_33556386_Idx] === null) { x_33556386[x_33556386_Idx] = []; }
      var off = x_33556386[x_33556386_Idx].length;
      x_33556386[x_33556386_Idx].length += y_33556387.length;
      for (var i = 0; i < y_33556387.length; ++i) {
        x_33556386[x_33556386_Idx][off+i] = y_33556387.charCodeAt(i);
      }
    

  
}

function newSeq_33556755(len_33556757) {
  var result_33556758 = [];

    result_33556758 = new Array(len_33556757); for (var i = 0 ; i < len_33556757 ; ++i) { result_33556758[i] = null; }
  return result_33556758;

}

function unhandledException(e_33556593) {
    var buf_33556594 = [[]];
    if (!(((e_33556593.message).length == 0))) {
    buf_33556594[0].push.apply(buf_33556594[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556594[0].push.apply(buf_33556594[0], e_33556593.message);;
    }
    else {
    buf_33556594[0].push.apply(buf_33556594[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556594[0].push.apply(buf_33556594[0], [32,91]);;
    add_33556385(buf_33556594, 0, e_33556593.name);
    buf_33556594[0].push.apply(buf_33556594[0], [93,10]);;
    var cbuf_33556595 = toJSStr(buf_33556594[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556595);
  }
  else {
    throw cbuf_33556595;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556871) {
        if (a_33556871 > 2147483647 || a_33556871 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_285212850(result_285212852, result_285212852_Idx, x_285212853, start_285212854, n_285212855) {
    var Temporary1;

    var old_285212856 = (result_285212852[result_285212852_Idx]).length;
    if (result_285212852[result_285212852_Idx].length < (Temporary1 = chckRange(addInt(old_285212856, n_285212855), 0, 2147483647), Temporary1)) { for (var i = result_285212852[result_285212852_Idx].length; i < Temporary1; ++i) result_285212852[result_285212852_Idx].push(0); }
         else {result_285212852[result_285212852_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_285212870 = 0;
      var i_553648227 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_553648227 < n_285212855)) break Label4;
            iHEX60gensym4_285212870 = i_553648227;
            result_285212852[result_285212852_Idx][chckIndx(addInt(old_285212856, iHEX60gensym4_285212870), 0, (result_285212852[result_285212852_Idx]).length - 1)] = x_285212853.charCodeAt(chckIndx(addInt(start_285212854, iHEX60gensym4_285212870), 0, (x_285212853).length - 1));
            i_553648227 = addInt(i_553648227, 1);
          }
      };
    };

  
}

function addChars_285212846(result_285212848, result_285212848_Idx, x_285212849) {
    addChars_285212850(result_285212848, result_285212848_Idx, x_285212849, 0, ((x_285212849) == null ? 0 : (x_285212849).length));

  
}

function addInt_285212871(result_285212872, result_285212872_Idx, x_285212873) {
    addChars_285212846(result_285212872, result_285212872_Idx, ((x_285212873) + ""));

  
}

function addInt_285212892(result_285212893, result_285212893_Idx, x_285212894) {
    addInt_285212871(result_285212893, result_285212893_Idx, x_285212894);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_285212892(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function isFatPointer_33557064(ti_33557065) {
  var result_33557066 = false;

  BeforeRet: {
    result_33557066 = !((ConstSet1[ti_33557065.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557066;

}

function nimCopyAux(dest_33557077, src_33557078, n_33557079) {
    switch (n_33557079.kind) {
    case 0:
      break;
    case 1:
            dest_33557077[n_33557079.offset] = nimCopy(dest_33557077[n_33557079.offset], src_33557078[n_33557079.offset], n_33557079.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557079.sons.length; i++) {
      nimCopyAux(dest_33557077, src_33557078, n_33557079.sons[i]);
    }
    
      break;
    case 3:
            dest_33557077[n_33557079.offset] = nimCopy(dest_33557077[n_33557079.offset], src_33557078[n_33557079.offset], n_33557079.typ);
      for (var i = 0; i < n_33557079.sons.length; ++i) {
        nimCopyAux(dest_33557077, src_33557078, n_33557079.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556684, a_33556685, b_33556686) {
    var Temporary1;

    if ((b_33556686 < a_33556685)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556684) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556685) || [],[32,46,46,32] || [],HEX24_369098760(b_33556686) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function raiseAssert_251658262(msg_251658263) {
    raiseException({message: nimCopy(null, msg_251658263, NTI33554449), parent: null, m_type: NTI134217745, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function failedAssertImpl_251658292(msg_251658293) {
    raiseAssert_251658262(msg_251658293);

  
}

function onDOMLoaded(e_553648155) {
            
function HEX3Aanonymous_553648179(event_553648180) {
                event_553648180.target.parentNode.style.display = "none";
                event_553648180.target.parentNode.nextSibling.style.display = "inline";

              
            }

    document.getElementById("theme-select").value = window.localStorage.getItem("theme");
    Label1: {
      var pragmaDots_553648178 = null;
      var colontmp__553648218 = [];
      colontmp__553648218 = document.getElementsByClassName("pragmadots");
      var i_553648220 = 0;
      var L_553648221 = (colontmp__553648218).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648220 < L_553648221)) break Label3;
            pragmaDots_553648178 = colontmp__553648218[chckIndx(i_553648220, 0, (colontmp__553648218).length - 1)];
            pragmaDots_553648178.onclick = HEX3Aanonymous_553648179;
            i_553648220 = addInt(i_553648220, 1);
            if (!(((colontmp__553648218).length == L_553648221))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}
var alternative_553648717 = [null];

function isWhitespace_553648463(x_553648464) {
  var result_553648465 = false;

    result_553648465 = (((x_553648464.nodeName == "#text") && !/\S/.test(x_553648464.textContent)) || (x_553648464.nodeName == "#comment"));

  return result_553648465;

}

function toToc_553648466(x_553648467, father_553648468) {
                var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
      var Temporary15;

    if ((x_553648467.nodeName == "UL")) {
    var f_553648476 = {heading: null, kids: [], sortId: (father_553648468.kids).length, doSort: false};
    var i_553648477 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_553648477 < x_553648467.childNodes.length)) break Label2;
          var nxt_553648478 = addInt(i_553648477, 1);
          Label3: {
              Label4: while (true) {
                if (!(nxt_553648478 < x_553648467.childNodes.length)) Temporary5 = false; else {                  Temporary5 = isWhitespace_553648463(x_553648467.childNodes[nxt_553648478]);                }              if (!Temporary5) break Label4;
                nxt_553648478 = addInt(nxt_553648478, 1);
              }
          };
            if (!(nxt_553648478 < x_553648467.childNodes.length)) Temporary8 = false; else {              Temporary8 = (x_553648467.childNodes[i_553648477].nodeName == "LI");            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = (x_553648467.childNodes[i_553648477].childNodes.length == 1);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = (x_553648467.childNodes[nxt_553648478].nodeName == "UL");            }          if (Temporary6) {
          var e_553648491 = {heading: x_553648467.childNodes[i_553648477].childNodes[0], kids: [], sortId: (f_553648476.kids).length, doSort: false};
          var it_553648492 = x_553648467.childNodes[nxt_553648478];
          Label9: {
            var j_553648497 = 0;
            var colontmp__553648755 = 0;
            colontmp__553648755 = it_553648492.childNodes.length;
            var i_553648756 = 0;
            Label10: {
                Label11: while (true) {
                if (!(i_553648756 < colontmp__553648755)) break Label11;
                  j_553648497 = i_553648756;
                  toToc_553648466(it_553648492.childNodes[j_553648497], e_553648491);
                  i_553648756 = addInt(i_553648756, 1);
                }
            };
          };
          f_553648476.kids.push(e_553648491);;
          i_553648477 = addInt(nxt_553648478, 1);
          }
          else {
            toToc_553648466(x_553648467.childNodes[i_553648477], f_553648476);
            i_553648477 = addInt(i_553648477, 1);
          }
          
        }
    };
    father_553648468.kids.push(f_553648476);;
    }
    else {
    if (isWhitespace_553648463(x_553648467)) {
    }
    else {
    if ((x_553648467.nodeName == "LI")) {
    var idx_553648515 = [];
    Label12: {
      var i_553648520 = 0;
      var colontmp__553648759 = 0;
      colontmp__553648759 = x_553648467.childNodes.length;
      var i_553648760 = 0;
      Label13: {
          Label14: while (true) {
          if (!(i_553648760 < colontmp__553648759)) break Label14;
            i_553648520 = i_553648760;
            if (!(isWhitespace_553648463(x_553648467.childNodes[i_553648520]))) {
            idx_553648515.push(i_553648520);;
            }
            
            i_553648760 = addInt(i_553648760, 1);
          }
      };
    };
      if (!((idx_553648515).length == 2)) Temporary15 = false; else {        Temporary15 = (x_553648467.childNodes[idx_553648515[chckIndx(1, 0, (idx_553648515).length - 1)]].nodeName == "UL");      }    if (Temporary15) {
    var e_553648536 = {heading: x_553648467.childNodes[idx_553648515[chckIndx(0, 0, (idx_553648515).length - 1)]], kids: [], sortId: (father_553648468.kids).length, doSort: false};
    var it_553648537 = x_553648467.childNodes[idx_553648515[chckIndx(1, 0, (idx_553648515).length - 1)]];
    Label16: {
      var j_553648542 = 0;
      var colontmp__553648763 = 0;
      colontmp__553648763 = it_553648537.childNodes.length;
      var i_553648764 = 0;
      Label17: {
          Label18: while (true) {
          if (!(i_553648764 < colontmp__553648763)) break Label18;
            j_553648542 = i_553648764;
            toToc_553648466(it_553648537.childNodes[j_553648542], e_553648536);
            i_553648764 = addInt(i_553648764, 1);
          }
      };
    };
    father_553648468.kids.push(e_553648536);;
    }
    else {
      Label19: {
        var i_553648551 = 0;
        var colontmp__553648767 = 0;
        colontmp__553648767 = x_553648467.childNodes.length;
        var i_553648768 = 0;
        Label20: {
            Label21: while (true) {
            if (!(i_553648768 < colontmp__553648767)) break Label21;
              i_553648551 = i_553648768;
              toToc_553648466(x_553648467.childNodes[i_553648551], father_553648468);
              i_553648768 = addInt(i_553648768, 1);
            }
        };
      };
    }
    
    }
    else {
    father_553648468.kids.push({heading: x_553648467, kids: [], sortId: (father_553648468.kids).length, doSort: false});;
    }
    }}

  
}

function extractItems_553648300(x_553648301, heading_553648302, items_553648303, items_553648303_Idx) {
  BeforeRet: {
    if ((x_553648301 == null)) {
    break BeforeRet;
    }
    
    if ((!((x_553648301.heading == null)) && (x_553648301.heading.textContent == heading_553648302))) {
    Label1: {
      var i_553648320 = 0;
      var colontmp__553648771 = 0;
      colontmp__553648771 = (x_553648301.kids).length;
      var i_553648772 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648772 < colontmp__553648771)) break Label3;
            i_553648320 = i_553648772;
            items_553648303[items_553648303_Idx].push(x_553648301.kids[chckIndx(i_553648320, 0, (x_553648301.kids).length - 1)].heading);;
            i_553648772 = addInt(i_553648772, 1);
          }
      };
    };
    }
    else {
      Label4: {
        var k_553648346 = null;
        var i_553648776 = 0;
        var L_553648777 = (x_553648301.kids).length;
        Label5: {
            Label6: while (true) {
            if (!(i_553648776 < L_553648777)) break Label6;
              k_553648346 = x_553648301.kids[chckIndx(i_553648776, 0, (x_553648301.kids).length - 1)];
              extractItems_553648300(k_553648346, heading_553648302, items_553648303, items_553648303_Idx);
              i_553648776 = addInt(i_553648776, 1);
              if (!(((x_553648301.kids).length == L_553648777))) {
              failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  
}

function tree_553648231(tag_553648232, kids_553648233) {
  var result_553648234 = null;

    result_553648234 = document.createElement(tag_553648232);
    Label1: {
      var k_553648248 = null;
      var i_553648789 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648789 < (kids_553648233).length)) break Label3;
            k_553648248 = kids_553648233[chckIndx(i_553648789, 0, (kids_553648233).length - 1)];
            result_553648234.appendChild(k_553648248);
            i_553648789 = addInt(i_553648789, 1);
          }
      };
    };

  return result_553648234;

}

function text_553648256(s_553648257) {
  var result_553648258 = null;

    result_553648258 = document.createTextNode(s_553648257);

  return result_553648258;

}

function uncovered_553648617(x_553648618) {
    var Temporary1;

  var result_553648619 = null;

  BeforeRet: {
    if ((((x_553648618.kids).length == 0) && !((x_553648618.heading == null)))) {
    if (!(x_553648618.heading.hasOwnProperty('__karaxMarker__'))) {
    Temporary1 = x_553648618;
    }
    else {
    Temporary1 = null;
    }
    
    result_553648619 = Temporary1;
    break BeforeRet;
    }
    
    result_553648619 = {heading: x_553648618.heading, kids: [], sortId: x_553648618.sortId, doSort: x_553648618.doSort};
    Label2: {
      var k_553648634 = null;
      var i_553648796 = 0;
      var L_553648797 = (x_553648618.kids).length;
      Label3: {
          Label4: while (true) {
          if (!(i_553648796 < L_553648797)) break Label4;
            k_553648634 = x_553648618.kids[chckIndx(i_553648796, 0, (x_553648618.kids).length - 1)];
            var y_553648635 = uncovered_553648617(k_553648634);
            if (!((y_553648635 == null))) {
            result_553648619.kids.push(y_553648635);;
            }
            
            i_553648796 = addInt(i_553648796, 1);
            if (!(((x_553648618.kids).length == L_553648797))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((result_553648619.kids).length == 0)) {
    result_553648619 = null;
    }
    
  };

  return result_553648619;

}

function mergeTocs_553648647(orig_553648648, news_553648649) {
  var result_553648650 = null;

    result_553648650 = uncovered_553648617(orig_553648648);
    if ((result_553648650 == null)) {
    result_553648650 = news_553648649;
    }
    else {
      Label1: {
        var i_553648662 = 0;
        var colontmp__553648792 = 0;
        colontmp__553648792 = (news_553648649.kids).length;
        var i_553648793 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_553648793 < colontmp__553648792)) break Label3;
              i_553648662 = i_553648793;
              result_553648650.kids.push(news_553648649.kids[chckIndx(i_553648662, 0, (news_553648649.kids).length - 1)]);;
              i_553648793 = addInt(i_553648793, 1);
            }
        };
      };
    }
    

  return result_553648650;

}

function buildToc_553648667(orig_553648668, types_553648669, procs_553648670) {
  var result_553648671 = null;

    var newStuff_553648676 = {heading: null, kids: [], doSort: true, sortId: 0};
    Label1: {
      var t_553648680 = null;
      var i_553648784 = 0;
      var L_553648785 = (types_553648669).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648784 < L_553648785)) break Label3;
            t_553648680 = types_553648669[chckIndx(i_553648784, 0, (types_553648669).length - 1)];
            var c_553648685 = {heading: t_553648680.cloneNode(true), kids: [], doSort: true, sortId: 0};
            t_553648680.__karaxMarker__ = true;
            Label4: {
              var p_553648689 = null;
              var i_553648781 = 0;
              var L_553648782 = (procs_553648670).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_553648781 < L_553648782)) break Label6;
                    p_553648689 = procs_553648670[chckIndx(i_553648781, 0, (procs_553648670).length - 1)];
                    if (!(p_553648689.hasOwnProperty('__karaxMarker__'))) {
                    var xx_553648690 = p_553648689.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_553648690).length == 1) && (xx_553648690[chckIndx(0, 0, (xx_553648690).length - 1)].textContent == t_553648680.textContent))) {
                    var q_553648695 = tree_553648231("A", [text_553648256(p_553648689.title)]);
                    q_553648695.setAttribute("href", p_553648689.getAttribute("href"));
                    c_553648685.kids.push({heading: q_553648695, kids: [], sortId: 0, doSort: false});;
                    p_553648689.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    i_553648781 = addInt(i_553648781, 1);
                    if (!(((procs_553648670).length == L_553648782))) {
                    failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            newStuff_553648676.kids.push(c_553648685);;
            i_553648784 = addInt(i_553648784, 1);
            if (!(((types_553648669).length == L_553648785))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_553648671 = mergeTocs_553648647(orig_553648668, newStuff_553648676);

  return result_553648671;

}

function add_553648249(parent_553648250, kid_553648251) {
    if (((parent_553648250.nodeName == "TR") && ((kid_553648251.nodeName == "TD") || (kid_553648251.nodeName == "TH")))) {
    var k_553648252 = document.createElement("TD");
    k_553648252.appendChild(kid_553648251);
    parent_553648250.appendChild(k_553648252);
    }
    else {
    parent_553648250.appendChild(kid_553648251);
    }
    

  
}

function setClass_553648253(e_553648254, value_553648255) {
    e_553648254.setAttribute("class", value_553648255);

  
}

function toHtml_553648365(x_553648366, isRoot_553648367) {
    
function HEX3Aanonymous_553648385(a_553648386, b_553648387) {
      var result_553648388 = 0;

      BeforeRet: {
        if ((!((a_553648386.heading == null)) && !((b_553648387.heading == null)))) {
        var x_553648397 = a_553648386.heading.textContent;
        var y_553648398 = b_553648387.heading.textContent;
        if ((x_553648397 < y_553648398)) {
        result_553648388 = -1;
        break BeforeRet;
        }
        
        if ((y_553648398 < x_553648397)) {
        result_553648388 = 1;
        break BeforeRet;
        }
        
        result_553648388 = 0;
        break BeforeRet;
        }
        else {
          result_553648388 = subInt(a_553648386.sortId, b_553648387.sortId);
          break BeforeRet;
        }
        
      };

      return result_553648388;

    }

  var result_553648368 = null;

  BeforeRet: {
    if ((x_553648366 == null)) {
    result_553648368 = null;
    break BeforeRet;
    }
    
    if (((x_553648366.kids).length == 0)) {
    if ((x_553648366.heading == null)) {
    result_553648368 = null;
    break BeforeRet;
    }
    
    result_553648368 = x_553648366.heading.cloneNode(true);
    break BeforeRet;
    }
    
    result_553648368 = tree_553648231("DIV", []);
    if ((!((x_553648366.heading == null)) && !(x_553648366.heading.hasOwnProperty('__karaxMarker__')))) {
    add_553648249(result_553648368, x_553648366.heading.cloneNode(true));
    }
    
    var ul_553648384 = tree_553648231("UL", []);
    if (isRoot_553648367) {
    setClass_553648253(ul_553648384, "simple simple-toc");
    }
    else {
    setClass_553648253(ul_553648384, "simple");
    }
    
    if (x_553648366.doSort) {
    x_553648366.kids.sort(HEX3Aanonymous_553648385);
    }
    
    Label1: {
      var k_553648410 = null;
      var i_553648800 = 0;
      var L_553648801 = (x_553648366.kids).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648800 < L_553648801)) break Label3;
            k_553648410 = x_553648366.kids[chckIndx(i_553648800, 0, (x_553648366.kids).length - 1)];
            var y_553648411 = toHtml_553648365(k_553648410, false);
            if (!((y_553648411 == null))) {
            add_553648249(ul_553648384, tree_553648231("LI", [y_553648411]));
            }
            
            i_553648800 = addInt(i_553648800, 1);
            if (!(((x_553648366.kids).length == L_553648801))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((ul_553648384.childNodes.length == 0))) {
    add_553648249(result_553648368, ul_553648384);
    }
    
    if ((result_553648368.childNodes.length == 0)) {
    result_553648368 = null;
    }
    
  };

  return result_553648368;

}

function replaceById_553648259(id_553648260, newTree_553648261) {
    var x_553648262 = document.getElementById(id_553648260);
    x_553648262.parentNode.replaceChild(newTree_553648261, x_553648262);
    newTree_553648261.id = id_553648260;

  
}

function togglevis_553648718(d_553648719) {
    if ((d_553648719.style.display == "none")) {
    d_553648719.style.display = "inline";
    }
    else {
      d_553648719.style.display = "none";
    }
    

  
}

function groupBy(value_553648721) {
    var toc_553648722 = document.getElementById("toc-list");
    if ((alternative_553648717[0] == null)) {
    var tt_553648730 = {heading: null, kids: [], sortId: 0, doSort: false};
    toToc_553648466(toc_553648722, tt_553648730);
    tt_553648730 = tt_553648730.kids[chckIndx(0, 0, (tt_553648730.kids).length - 1)];
    var types_553648735 = [[]];
    var procs_553648740 = [[]];
    extractItems_553648300(tt_553648730, "Types", types_553648735, 0);
    extractItems_553648300(tt_553648730, "Procs", procs_553648740, 0);
    extractItems_553648300(tt_553648730, "Converters", procs_553648740, 0);
    extractItems_553648300(tt_553648730, "Methods", procs_553648740, 0);
    extractItems_553648300(tt_553648730, "Templates", procs_553648740, 0);
    extractItems_553648300(tt_553648730, "Macros", procs_553648740, 0);
    extractItems_553648300(tt_553648730, "Iterators", procs_553648740, 0);
    var ntoc_553648741 = buildToc_553648667(tt_553648730, types_553648735[0], procs_553648740[0]);
    var x_553648742 = toHtml_553648365(ntoc_553648741, true);
    alternative_553648717[0] = tree_553648231("DIV", [x_553648742]);
    }
    
    if ((value_553648721 == "type")) {
    replaceById_553648259("tocRoot", alternative_553648717[0]);
    }
    else {
    replaceById_553648259("tocRoot", tree_553648231("DIV", []));
    }
    
    togglevis_553648718(document.getElementById("toc-list"));

  
}
var db_553648803 = [[]];
var contents_553648804 = [[]];
var oldtoc_553649061 = [null];
var timer_553649062 = [null];
var loadIndexFut_553649064 = [null];

function HEX5BHEX5D_721421591(s_721421594, x_721421595) {
  var result_721421596 = [];

    var a_721421598 = x_721421595.a;
    var L_721421600 = addInt(subInt(subInt((s_721421594).length, x_721421595.b), a_721421598), 1);
    result_721421596 = nimCopy(null, mnewString(chckRange(L_721421600, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_721421605 = 0;
      var i_553649136 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553649136 < L_721421600)) break Label3;
            i_721421605 = i_553649136;
            result_721421596[chckIndx(i_721421605, 0, (result_721421596).length - 1)] = s_721421594[chckIndx(addInt(i_721421605, a_721421598), 0, (s_721421594).length - 1)];
            i_553649136 = addInt(i_553649136, 1);
          }
      };
    };

  return result_721421596;

}

function HEX2EHEX2E_956301408(a_956301411, b_956301412) {
  var result_956301415 = ({a: 0, b: 0});

    result_956301415 = nimCopy(result_956301415, {a: a_956301411, b: b_956301412}, NTI956301396);

  return result_956301415;

}
async function loadIndex_553648938() {
  var result_553648940 = null;

  BeforeRet: {
    var indexURL_553648946 = document.getElementById("indexLink").getAttribute("href");
    var rootURL_553648972 = HEX5BHEX5D_721421591(cstrToNimstr(indexURL_553648946), HEX2EHEX2E_956301408(0, 14));
    var resp_553648984 = (await (await fetch(indexURL_553648946)).text());
    var indexElem_553648985 = document.createElement("div");
    indexElem_553648985.innerHTML = resp_553648984;
    Label1: {
      var href_553649007 = null;
      var colontmp__553649130 = [];
      colontmp__553649130 = indexElem_553648985.getElementsByClassName("reference");
      var i_553649132 = 0;
      var L_553649133 = (colontmp__553649130).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553649132 < L_553649133)) break Label3;
            href_553649007 = colontmp__553649130[chckIndx(i_553649132, 0, (colontmp__553649130).length - 1)];
            href_553649007.setAttribute("href", toJSStr((rootURL_553648972 || []).concat(cstrToNimstr(href_553649007.getAttribute("href")) || [])));
            db_553648803[0].push(href_553649007);;
            contents_553648804[0].push(href_553649007.getAttribute("data-doc-search-tag"));;
            i_553649132 = addInt(i_553649132, 1);
            if (!(((colontmp__553649130).length == L_553649133))) {
            failedAssertImpl_251658292(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_553648940 = undefined;
    break BeforeRet;
  };

  return result_553648940;

}

function then_553649090(future_553649093, onSuccess_553649094, onReject_553649095) {
  var result_553649096 = null;

  BeforeRet: {
    var ret_553649106 = null;
    ret_553649106 = future_553649093.then(onSuccess_553649094, onReject_553649095)
    result_553649096 = ret_553649106;
    break BeforeRet;
  };

  return result_553649096;

}

function nsuToLowerAsciiChar(c_721420372) {
  var result_721420373 = 0;

    if ((ConstSet2[c_721420372] != undefined)) {
    result_721420373 = (c_721420372 ^ 32);
    }
    else {
      result_721420373 = c_721420372;
    }
    

  return result_721420373;

}

function fuzzyMatch_704643088(pattern_704643089, str_704643090) {
              var Temporary4;
              var Temporary5;
                var Temporary6;
      var Temporary7;
        var Temporary8;

  var result_704643093 = {Field0: 0, Field1: false};

    var scoreState_704643094 = -100;
    var headerMatched_704643095 = false;
    var unmatchedLeadingCharCount_704643096 = 0;
    var consecutiveMatchCount_704643097 = 0;
    var strIndex_704643098 = 0;
    var patIndex_704643099 = 0;
    var score_704643100 = 0;
    Label1: {
        Label2: while (true) {
        if (!((strIndex_704643098 < ((str_704643090) == null ? 0 : (str_704643090).length)) && (patIndex_704643099 < ((pattern_704643089) == null ? 0 : (pattern_704643089).length)))) break Label2;
          Label3: {
            var patternChar_704643103 = nsuToLowerAsciiChar(pattern_704643089.charCodeAt(chckIndx(patIndex_704643099, 0, (pattern_704643089).length - 1)));
            var strChar_704643104 = nsuToLowerAsciiChar(str_704643090.charCodeAt(chckIndx(strIndex_704643098, 0, (str_704643090).length - 1)));
            if ((ConstSet3[patternChar_704643103] != undefined)) {
            patIndex_704643099 = addInt(patIndex_704643099, 1);
            break Label3;
            }
            
            if ((ConstSet4[strChar_704643104] != undefined)) {
            strIndex_704643098 = addInt(strIndex_704643098, 1);
            break Label3;
            }
            
            if ((!(headerMatched_704643095) && (strChar_704643104 == 58))) {
            headerMatched_704643095 = true;
            scoreState_704643094 = -100;
            score_704643100 = ((Math.floor((0.5 * score_704643100))) | 0);
            patIndex_704643099 = 0;
            strIndex_704643098 = addInt(strIndex_704643098, 1);
            break Label3;
            }
            
            if ((strChar_704643104 == patternChar_704643103)) {
            switch (scoreState_704643094) {
            case -100:
            case 20:
              scoreState_704643094 = 10;
              break;
            case 0:
              scoreState_704643094 = 5;
              score_704643100 = addInt(score_704643100, scoreState_704643094);
              break;
            case 10:
            case 5:
              consecutiveMatchCount_704643097 = addInt(consecutiveMatchCount_704643097, 1);
              scoreState_704643094 = 5;
              score_704643100 = addInt(score_704643100, mulInt(5, consecutiveMatchCount_704643097));
              if ((scoreState_704643094 == 10)) {
              score_704643100 = addInt(score_704643100, 10);
              }
              
              var onBoundary_704643156 = (patIndex_704643099 == ((pattern_704643089) == null ? -1 : (pattern_704643089).length - 1));
              if ((!(onBoundary_704643156) && (strIndex_704643098 < ((str_704643090) == null ? -1 : (str_704643090).length - 1)))) {
              var nextPatternChar_704643157 = nsuToLowerAsciiChar(pattern_704643089.charCodeAt(chckIndx(addInt(patIndex_704643099, 1), 0, (pattern_704643089).length - 1)));
              var nextStrChar_704643158 = nsuToLowerAsciiChar(str_704643090.charCodeAt(chckIndx(addInt(strIndex_704643098, 1), 0, (str_704643090).length - 1)));
              if (!!((ConstSet5[nextStrChar_704643158] != undefined))) Temporary4 = false; else {                Temporary4 = !((nextStrChar_704643158 == nextPatternChar_704643157));              }              onBoundary_704643156 = Temporary4;
              }
              
              if (onBoundary_704643156) {
              scoreState_704643094 = 20;
              score_704643100 = addInt(score_704643100, scoreState_704643094);
              }
              
              break;
            case -1:
            case -3:
              if (!((ConstSet6[str_704643090.charCodeAt(chckIndx(subInt(strIndex_704643098, 1), 0, (str_704643090).length - 1))] != undefined))) Temporary5 = true; else {                if (!(ConstSet7[str_704643090.charCodeAt(chckIndx(subInt(strIndex_704643098, 1), 0, (str_704643090).length - 1))] != undefined)) Temporary6 = false; else {                  Temporary6 = (ConstSet8[str_704643090.charCodeAt(chckIndx(strIndex_704643098, 0, (str_704643090).length - 1))] != undefined);                }                Temporary5 = Temporary6;              }              var isLeadingChar_704643182 = Temporary5;
              if (isLeadingChar_704643182) {
              scoreState_704643094 = 10;
              }
              else {
                scoreState_704643094 = 0;
                score_704643100 = addInt(score_704643100, scoreState_704643094);
              }
              
              break;
            }
            patIndex_704643099 = addInt(patIndex_704643099, 1);
            }
            else {
              switch (scoreState_704643094) {
              case -100:
                scoreState_704643094 = -3;
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                break;
              case 5:
                scoreState_704643094 = -1;
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                consecutiveMatchCount_704643097 = 0;
                break;
              case -3:
                if ((unmatchedLeadingCharCount_704643096 < 3)) {
                scoreState_704643094 = -3;
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                }
                
                unmatchedLeadingCharCount_704643096 = addInt(unmatchedLeadingCharCount_704643096, 1);
                break;
              default: 
                scoreState_704643094 = -1;
                score_704643100 = addInt(score_704643100, scoreState_704643094);
                break;
              }
            }
            
            strIndex_704643098 = addInt(strIndex_704643098, 1);
          };
        }
    };
      if (!(patIndex_704643099 == ((pattern_704643089) == null ? 0 : (pattern_704643089).length))) Temporary7 = false; else {        if ((strIndex_704643098 == ((str_704643090) == null ? 0 : (str_704643090).length))) Temporary8 = true; else {          Temporary8 = !((ConstSet9[str_704643090.charCodeAt(chckIndx(strIndex_704643098, 0, (str_704643090).length - 1))] != undefined));        }        Temporary7 = Temporary8;      }    if (Temporary7) {
    score_704643100 = addInt(score_704643100, 10);
    }
    
    var colontmp__553649150 = nimMax(0, score_704643100);
    var colontmp__553649151 = (0 < score_704643100);
    result_704643093 = nimCopy(result_704643093, {Field0: colontmp__553649150, Field1: colontmp__553649151}, NTI704643086);

  return result_704643093;

}

function escapeCString_553648805(x_553648806, x_553648806_Idx) {
    var s_553648807 = [];
    Label1: {
      var c_553648808 = 0;
      var iHEX60gensym6_553649154 = 0;
      var nHEX60gensym6_553649155 = ((x_553648806[x_553648806_Idx]) == null ? 0 : (x_553648806[x_553648806_Idx]).length);
      Label2: {
          Label3: while (true) {
          if (!(iHEX60gensym6_553649154 < nHEX60gensym6_553649155)) break Label3;
            c_553648808 = x_553648806[x_553648806_Idx].charCodeAt(chckIndx(iHEX60gensym6_553649154, 0, (x_553648806[x_553648806_Idx]).length - 1));
            switch (c_553648808) {
            case 60:
              s_553648807.push.apply(s_553648807, [38,108,116,59]);;
              break;
            case 62:
              s_553648807.push.apply(s_553648807, [38,103,116,59]);;
              break;
            default: 
              addChar(s_553648807, c_553648808);;
              break;
            }
            iHEX60gensym6_553649154 = addInt(iHEX60gensym6_553649154, 1);
          }
      };
    };
    x_553648806[x_553648806_Idx] = toJSStr(s_553648807);

  
}

function dosearch_553648809(value_553648810) {
    
function HEX3Aanonymous_553648836(a_553648841, b_553648842) {
      var result_553648847 = 0;

        result_553648847 = subInt(b_553648842["Field1"], a_553648841["Field1"]);

      return result_553648847;

    }

  var result_553648811 = null;

  BeforeRet: {
    if (((db_553648803[0]).length == 0)) {
    break BeforeRet;
    }
    
    var ul_553648815 = tree_553648231("UL", []);
    result_553648811 = tree_553648231("DIV", []);
    setClass_553648253(result_553648811, "search_results");
    var matches_553648820 = [];
    Label1: {
      var i_553648828 = 0;
      var colontmp__553649140 = 0;
      colontmp__553649140 = (db_553648803[0]).length;
      var i_553649141 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553649141 < colontmp__553649140)) break Label3;
            i_553648828 = i_553649141;
            Label4: {
              var c_553648829 = contents_553648804[0][chckIndx(i_553648828, 0, (contents_553648804[0]).length - 1)];
              if (((c_553648829 == "Examples") || (c_553648829 == "PEG construction"))) {
              break Label4;
              }
              
              var colontmp__553649147 = fuzzyMatch_704643088(value_553648810, c_553648829);
              var score_553648830 = colontmp__553649147["Field0"];
              var matched_553648831 = colontmp__553649147["Field1"];
              if (matched_553648831) {
              matches_553648820.push({Field0: db_553648803[0][chckIndx(i_553648828, 0, (db_553648803[0]).length - 1)], Field1: score_553648830});;
              }
              
            };
            i_553649141 = addInt(i_553649141, 1);
          }
      };
    };
    matches_553648820.sort(HEX3Aanonymous_553648836);
    Label5: {
      var i_553648864 = 0;
      var colontmp__553649144 = 0;
      colontmp__553649144 = nimMin((matches_553648820).length, 29);
      var i_553649145 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_553649145 < colontmp__553649144)) break Label7;
            i_553648864 = i_553649145;
            matches_553648820[chckIndx(i_553648864, 0, (matches_553648820).length - 1)]["Field0"].innerHTML = matches_553648820[chckIndx(i_553648864, 0, (matches_553648820).length - 1)]["Field0"].getAttribute("data-doc-search-tag");
            escapeCString_553648805(matches_553648820[chckIndx(i_553648864, 0, (matches_553648820).length - 1)]["Field0"], "innerHTML");
            add_553648249(ul_553648815, tree_553648231("LI", [matches_553648820[chckIndx(i_553648864, 0, (matches_553648820).length - 1)]["Field0"]]));
            i_553649145 = addInt(i_553649145, 1);
          }
      };
    };
    if ((ul_553648815.childNodes.length == 0)) {
    add_553648249(result_553648811, tree_553648231("B", [text_553648256("no search results")]));
    }
    else {
      add_553648249(result_553648811, tree_553648231("B", [text_553648256("search results")]));
      add_553648249(result_553648811, ul_553648815);
    }
    
  };

  return result_553648811;

}

function search() {
    
function wrapper_553649075() {
        var elem_553649076 = document.getElementById("searchInput");
        var value_553649077 = elem_553649076.value;
        if (!((((value_553649077) == null ? 0 : (value_553649077).length) == 0))) {
        if ((oldtoc_553649061[0] == null)) {
        oldtoc_553649061[0] = document.getElementById("tocRoot");
        }
        
        var results_553649081 = dosearch_553648809(value_553649077);
        replaceById_553648259("tocRoot", results_553649081);
        }
        else {
        if (!((oldtoc_553649061[0] == null))) {
        replaceById_553648259("tocRoot", oldtoc_553649061[0]);
        }
        }

      
    }

    if ((loadIndexFut_553649064[0] == null)) {
    loadIndexFut_553649064[0] = loadIndex_553648938();
    var _ = then_553649090(loadIndexFut_553649064[0], wrapper_553649075, null);
    }
    
    if (!((timer_553649062[0] == null))) {
    clearTimeout(timer_553649062[0]);
    }
    
    timer_553649062[0] = setTimeout(wrapper_553649075, 400);

  
}

function copyToClipboard() {
    
    function updatePreTags() {

      const allPreTags = document.querySelectorAll("pre")
    
      allPreTags.forEach((e) => {
      
          const div = document.createElement("div")
          div.classList.add("copyToClipBoard")
    
          const preTag = document.createElement("pre")
          preTag.innerHTML = e.innerHTML
    
          const button = document.createElement("button")
          button.value = e.textContent.replace('...', '') 
          button.classList.add("copyToClipBoardBtn")
          button.style.cursor = "pointer"
    
          div.appendChild(preTag)
          div.appendChild(button)
    
          e.outerHTML = div.outerHTML
      
      })
    }


    function copyTextToClipboard(e) {
        const clipBoardContent = e.target.value
        navigator.clipboard.writeText(clipBoardContent).then(function() {
            e.target.style.setProperty("--clipboard-image", "var(--clipboard-image-selected)")
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    window.addEventListener("click", (e) => {
        if (e.target.classList.contains("copyToClipBoardBtn")) {
            copyTextToClipboard(e)
          }
    })

    window.addEventListener("mouseover", (e) => {
        if (e.target.nodeName === "PRE") {
            e.target.nextElementSibling.style.setProperty("--clipboard-image", "var(--clipboard-image-normal)")
        }
    })
    
    window.addEventListener("DOMContentLoaded", updatePreTags)

    

  
}
copyToClipboard();
window.addEventListener("DOMContentLoaded", onDOMLoaded, false);
