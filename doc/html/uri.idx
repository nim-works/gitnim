Basic usage	uri.html#basic-usage	 Basic usage	
Combine URIs	uri.html#basic-usage-combine-uris	  Combine URIs	
Access URI item	uri.html#basic-usage-access-uri-item	  Access URI item	
Data URI Base64	uri.html#basic-usage-data-uri-base64	  Data URI Base64	
Url	uri.html#Url	uri: Url	
Uri	uri.html#Uri	uri: Uri	
UriParseError	uri.html#UriParseError	uri: UriParseError	
uriParseError	uri.html#uriParseError,string	uri: uriParseError(msg: string)	
encodeUrl	uri.html#encodeUrl,string	uri: encodeUrl(s: string; usePlus = true): string	
decodeUrl	uri.html#decodeUrl,string	uri: decodeUrl(s: string; decodePlus = true): string	
encodeQuery	uri.html#encodeQuery,openArray[]	uri: encodeQuery(query: openArray[(string, string)]; usePlus = true; omitEq = true): string	
decodeQuery	uri.html#decodeQuery.i,string	uri: decodeQuery(data: string): tuple[key, value: string]	
initUri	uri.html#initUri	uri: initUri(isIpv6 = false): Uri	
parseUri	uri.html#parseUri,string,Uri	uri: parseUri(uri: string; result: var Uri)	
parseUri	uri.html#parseUri,string	uri: parseUri(uri: string): Uri	
combine	uri.html#combine,Uri,Uri	uri: combine(base: Uri; reference: Uri): Uri	
combine	uri.html#combine,varargs[Uri]	uri: combine(uris: varargs[Uri]): Uri	
isAbsolute	uri.html#isAbsolute,Uri	uri: isAbsolute(uri: Uri): bool	
`/`	uri.html#/,Uri,string	uri: `/`(x: Uri; path: string): Uri	
`?`	uri.html#?,Uri,openArray[]	uri: `?`(u: Uri; query: openArray[(string, string)]): Uri	
`$`	uri.html#$,Uri	uri: `$`(u: Uri): string	
getDataUri	uri.html#getDataUri,string,string,string	uri: getDataUri(data, mime: string; encoding = &quot;utf-8&quot;): string	
