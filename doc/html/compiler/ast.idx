nimTitle	ast	ast.html	module compiler/ast		0
nim	ccNimCall	ast.html#ccNimCall	TCallingConvention.ccNimCall		22
nim	ccStdCall	ast.html#ccStdCall	TCallingConvention.ccStdCall		22
nim	ccCDecl	ast.html#ccCDecl	TCallingConvention.ccCDecl		22
nim	ccSafeCall	ast.html#ccSafeCall	TCallingConvention.ccSafeCall		22
nim	ccSysCall	ast.html#ccSysCall	TCallingConvention.ccSysCall		22
nim	ccInline	ast.html#ccInline	TCallingConvention.ccInline		22
nim	ccNoInline	ast.html#ccNoInline	TCallingConvention.ccNoInline		22
nim	ccFastCall	ast.html#ccFastCall	TCallingConvention.ccFastCall		22
nim	ccThisCall	ast.html#ccThisCall	TCallingConvention.ccThisCall		22
nim	ccClosure	ast.html#ccClosure	TCallingConvention.ccClosure		22
nim	ccNoConvention	ast.html#ccNoConvention	TCallingConvention.ccNoConvention		22
nim	TCallingConvention	ast.html#TCallingConvention	enum TCallingConvention		22
nim	nkNone	ast.html#nkNone	TNodeKind.nkNone		36
nim	nkEmpty	ast.html#nkEmpty	TNodeKind.nkEmpty		36
nim	nkIdent	ast.html#nkIdent	TNodeKind.nkIdent		36
nim	nkSym	ast.html#nkSym	TNodeKind.nkSym		36
nim	nkType	ast.html#nkType	TNodeKind.nkType		36
nim	nkCharLit	ast.html#nkCharLit	TNodeKind.nkCharLit		36
nim	nkIntLit	ast.html#nkIntLit	TNodeKind.nkIntLit		36
nim	nkInt8Lit	ast.html#nkInt8Lit	TNodeKind.nkInt8Lit		36
nim	nkInt16Lit	ast.html#nkInt16Lit	TNodeKind.nkInt16Lit		36
nim	nkInt32Lit	ast.html#nkInt32Lit	TNodeKind.nkInt32Lit		36
nim	nkInt64Lit	ast.html#nkInt64Lit	TNodeKind.nkInt64Lit		36
nim	nkUIntLit	ast.html#nkUIntLit	TNodeKind.nkUIntLit		36
nim	nkUInt8Lit	ast.html#nkUInt8Lit	TNodeKind.nkUInt8Lit		36
nim	nkUInt16Lit	ast.html#nkUInt16Lit	TNodeKind.nkUInt16Lit		36
nim	nkUInt32Lit	ast.html#nkUInt32Lit	TNodeKind.nkUInt32Lit		36
nim	nkUInt64Lit	ast.html#nkUInt64Lit	TNodeKind.nkUInt64Lit		36
nim	nkFloatLit	ast.html#nkFloatLit	TNodeKind.nkFloatLit		36
nim	nkFloat32Lit	ast.html#nkFloat32Lit	TNodeKind.nkFloat32Lit		36
nim	nkFloat64Lit	ast.html#nkFloat64Lit	TNodeKind.nkFloat64Lit		36
nim	nkFloat128Lit	ast.html#nkFloat128Lit	TNodeKind.nkFloat128Lit		36
nim	nkStrLit	ast.html#nkStrLit	TNodeKind.nkStrLit		36
nim	nkRStrLit	ast.html#nkRStrLit	TNodeKind.nkRStrLit		36
nim	nkTripleStrLit	ast.html#nkTripleStrLit	TNodeKind.nkTripleStrLit		36
nim	nkNilLit	ast.html#nkNilLit	TNodeKind.nkNilLit		36
nim	nkComesFrom	ast.html#nkComesFrom	TNodeKind.nkComesFrom		36
nim	nkDotCall	ast.html#nkDotCall	TNodeKind.nkDotCall		36
nim	nkCommand	ast.html#nkCommand	TNodeKind.nkCommand		36
nim	nkCall	ast.html#nkCall	TNodeKind.nkCall		36
nim	nkCallStrLit	ast.html#nkCallStrLit	TNodeKind.nkCallStrLit		36
nim	nkInfix	ast.html#nkInfix	TNodeKind.nkInfix		36
nim	nkPrefix	ast.html#nkPrefix	TNodeKind.nkPrefix		36
nim	nkPostfix	ast.html#nkPostfix	TNodeKind.nkPostfix		36
nim	nkHiddenCallConv	ast.html#nkHiddenCallConv	TNodeKind.nkHiddenCallConv		36
nim	nkExprEqExpr	ast.html#nkExprEqExpr	TNodeKind.nkExprEqExpr		36
nim	nkExprColonExpr	ast.html#nkExprColonExpr	TNodeKind.nkExprColonExpr		36
nim	nkIdentDefs	ast.html#nkIdentDefs	TNodeKind.nkIdentDefs		36
nim	nkVarTuple	ast.html#nkVarTuple	TNodeKind.nkVarTuple		36
nim	nkPar	ast.html#nkPar	TNodeKind.nkPar		36
nim	nkObjConstr	ast.html#nkObjConstr	TNodeKind.nkObjConstr		36
nim	nkCurly	ast.html#nkCurly	TNodeKind.nkCurly		36
nim	nkCurlyExpr	ast.html#nkCurlyExpr	TNodeKind.nkCurlyExpr		36
nim	nkBracket	ast.html#nkBracket	TNodeKind.nkBracket		36
nim	nkBracketExpr	ast.html#nkBracketExpr	TNodeKind.nkBracketExpr		36
nim	nkPragmaExpr	ast.html#nkPragmaExpr	TNodeKind.nkPragmaExpr		36
nim	nkRange	ast.html#nkRange	TNodeKind.nkRange		36
nim	nkDotExpr	ast.html#nkDotExpr	TNodeKind.nkDotExpr		36
nim	nkCheckedFieldExpr	ast.html#nkCheckedFieldExpr	TNodeKind.nkCheckedFieldExpr		36
nim	nkDerefExpr	ast.html#nkDerefExpr	TNodeKind.nkDerefExpr		36
nim	nkIfExpr	ast.html#nkIfExpr	TNodeKind.nkIfExpr		36
nim	nkElifExpr	ast.html#nkElifExpr	TNodeKind.nkElifExpr		36
nim	nkElseExpr	ast.html#nkElseExpr	TNodeKind.nkElseExpr		36
nim	nkLambda	ast.html#nkLambda	TNodeKind.nkLambda		36
nim	nkDo	ast.html#nkDo	TNodeKind.nkDo		36
nim	nkAccQuoted	ast.html#nkAccQuoted	TNodeKind.nkAccQuoted		36
nim	nkTableConstr	ast.html#nkTableConstr	TNodeKind.nkTableConstr		36
nim	nkBind	ast.html#nkBind	TNodeKind.nkBind		36
nim	nkClosedSymChoice	ast.html#nkClosedSymChoice	TNodeKind.nkClosedSymChoice		36
nim	nkOpenSymChoice	ast.html#nkOpenSymChoice	TNodeKind.nkOpenSymChoice		36
nim	nkHiddenStdConv	ast.html#nkHiddenStdConv	TNodeKind.nkHiddenStdConv		36
nim	nkHiddenSubConv	ast.html#nkHiddenSubConv	TNodeKind.nkHiddenSubConv		36
nim	nkConv	ast.html#nkConv	TNodeKind.nkConv		36
nim	nkCast	ast.html#nkCast	TNodeKind.nkCast		36
nim	nkStaticExpr	ast.html#nkStaticExpr	TNodeKind.nkStaticExpr		36
nim	nkAddr	ast.html#nkAddr	TNodeKind.nkAddr		36
nim	nkHiddenAddr	ast.html#nkHiddenAddr	TNodeKind.nkHiddenAddr		36
nim	nkHiddenDeref	ast.html#nkHiddenDeref	TNodeKind.nkHiddenDeref		36
nim	nkObjDownConv	ast.html#nkObjDownConv	TNodeKind.nkObjDownConv		36
nim	nkObjUpConv	ast.html#nkObjUpConv	TNodeKind.nkObjUpConv		36
nim	nkChckRangeF	ast.html#nkChckRangeF	TNodeKind.nkChckRangeF		36
nim	nkChckRange64	ast.html#nkChckRange64	TNodeKind.nkChckRange64		36
nim	nkChckRange	ast.html#nkChckRange	TNodeKind.nkChckRange		36
nim	nkStringToCString	ast.html#nkStringToCString	TNodeKind.nkStringToCString		36
nim	nkCStringToString	ast.html#nkCStringToString	TNodeKind.nkCStringToString		36
nim	nkAsgn	ast.html#nkAsgn	TNodeKind.nkAsgn		36
nim	nkFastAsgn	ast.html#nkFastAsgn	TNodeKind.nkFastAsgn		36
nim	nkGenericParams	ast.html#nkGenericParams	TNodeKind.nkGenericParams		36
nim	nkFormalParams	ast.html#nkFormalParams	TNodeKind.nkFormalParams		36
nim	nkOfInherit	ast.html#nkOfInherit	TNodeKind.nkOfInherit		36
nim	nkImportAs	ast.html#nkImportAs	TNodeKind.nkImportAs		36
nim	nkProcDef	ast.html#nkProcDef	TNodeKind.nkProcDef		36
nim	nkMethodDef	ast.html#nkMethodDef	TNodeKind.nkMethodDef		36
nim	nkConverterDef	ast.html#nkConverterDef	TNodeKind.nkConverterDef		36
nim	nkMacroDef	ast.html#nkMacroDef	TNodeKind.nkMacroDef		36
nim	nkTemplateDef	ast.html#nkTemplateDef	TNodeKind.nkTemplateDef		36
nim	nkIteratorDef	ast.html#nkIteratorDef	TNodeKind.nkIteratorDef		36
nim	nkOfBranch	ast.html#nkOfBranch	TNodeKind.nkOfBranch		36
nim	nkElifBranch	ast.html#nkElifBranch	TNodeKind.nkElifBranch		36
nim	nkExceptBranch	ast.html#nkExceptBranch	TNodeKind.nkExceptBranch		36
nim	nkElse	ast.html#nkElse	TNodeKind.nkElse		36
nim	nkAsmStmt	ast.html#nkAsmStmt	TNodeKind.nkAsmStmt		36
nim	nkPragma	ast.html#nkPragma	TNodeKind.nkPragma		36
nim	nkPragmaBlock	ast.html#nkPragmaBlock	TNodeKind.nkPragmaBlock		36
nim	nkIfStmt	ast.html#nkIfStmt	TNodeKind.nkIfStmt		36
nim	nkWhenStmt	ast.html#nkWhenStmt	TNodeKind.nkWhenStmt		36
nim	nkForStmt	ast.html#nkForStmt	TNodeKind.nkForStmt		36
nim	nkParForStmt	ast.html#nkParForStmt	TNodeKind.nkParForStmt		36
nim	nkWhileStmt	ast.html#nkWhileStmt	TNodeKind.nkWhileStmt		36
nim	nkCaseStmt	ast.html#nkCaseStmt	TNodeKind.nkCaseStmt		36
nim	nkTypeSection	ast.html#nkTypeSection	TNodeKind.nkTypeSection		36
nim	nkVarSection	ast.html#nkVarSection	TNodeKind.nkVarSection		36
nim	nkLetSection	ast.html#nkLetSection	TNodeKind.nkLetSection		36
nim	nkConstSection	ast.html#nkConstSection	TNodeKind.nkConstSection		36
nim	nkConstDef	ast.html#nkConstDef	TNodeKind.nkConstDef		36
nim	nkTypeDef	ast.html#nkTypeDef	TNodeKind.nkTypeDef		36
nim	nkYieldStmt	ast.html#nkYieldStmt	TNodeKind.nkYieldStmt		36
nim	nkDefer	ast.html#nkDefer	TNodeKind.nkDefer		36
nim	nkTryStmt	ast.html#nkTryStmt	TNodeKind.nkTryStmt		36
nim	nkFinally	ast.html#nkFinally	TNodeKind.nkFinally		36
nim	nkRaiseStmt	ast.html#nkRaiseStmt	TNodeKind.nkRaiseStmt		36
nim	nkReturnStmt	ast.html#nkReturnStmt	TNodeKind.nkReturnStmt		36
nim	nkBreakStmt	ast.html#nkBreakStmt	TNodeKind.nkBreakStmt		36
nim	nkContinueStmt	ast.html#nkContinueStmt	TNodeKind.nkContinueStmt		36
nim	nkBlockStmt	ast.html#nkBlockStmt	TNodeKind.nkBlockStmt		36
nim	nkStaticStmt	ast.html#nkStaticStmt	TNodeKind.nkStaticStmt		36
nim	nkDiscardStmt	ast.html#nkDiscardStmt	TNodeKind.nkDiscardStmt		36
nim	nkStmtList	ast.html#nkStmtList	TNodeKind.nkStmtList		36
nim	nkImportStmt	ast.html#nkImportStmt	TNodeKind.nkImportStmt		36
nim	nkImportExceptStmt	ast.html#nkImportExceptStmt	TNodeKind.nkImportExceptStmt		36
nim	nkExportStmt	ast.html#nkExportStmt	TNodeKind.nkExportStmt		36
nim	nkExportExceptStmt	ast.html#nkExportExceptStmt	TNodeKind.nkExportExceptStmt		36
nim	nkFromStmt	ast.html#nkFromStmt	TNodeKind.nkFromStmt		36
nim	nkIncludeStmt	ast.html#nkIncludeStmt	TNodeKind.nkIncludeStmt		36
nim	nkBindStmt	ast.html#nkBindStmt	TNodeKind.nkBindStmt		36
nim	nkMixinStmt	ast.html#nkMixinStmt	TNodeKind.nkMixinStmt		36
nim	nkUsingStmt	ast.html#nkUsingStmt	TNodeKind.nkUsingStmt		36
nim	nkCommentStmt	ast.html#nkCommentStmt	TNodeKind.nkCommentStmt		36
nim	nkStmtListExpr	ast.html#nkStmtListExpr	TNodeKind.nkStmtListExpr		36
nim	nkBlockExpr	ast.html#nkBlockExpr	TNodeKind.nkBlockExpr		36
nim	nkStmtListType	ast.html#nkStmtListType	TNodeKind.nkStmtListType		36
nim	nkBlockType	ast.html#nkBlockType	TNodeKind.nkBlockType		36
nim	nkWith	ast.html#nkWith	TNodeKind.nkWith		36
nim	nkWithout	ast.html#nkWithout	TNodeKind.nkWithout		36
nim	nkTypeOfExpr	ast.html#nkTypeOfExpr	TNodeKind.nkTypeOfExpr		36
nim	nkObjectTy	ast.html#nkObjectTy	TNodeKind.nkObjectTy		36
nim	nkTupleTy	ast.html#nkTupleTy	TNodeKind.nkTupleTy		36
nim	nkTupleClassTy	ast.html#nkTupleClassTy	TNodeKind.nkTupleClassTy		36
nim	nkTypeClassTy	ast.html#nkTypeClassTy	TNodeKind.nkTypeClassTy		36
nim	nkStaticTy	ast.html#nkStaticTy	TNodeKind.nkStaticTy		36
nim	nkRecList	ast.html#nkRecList	TNodeKind.nkRecList		36
nim	nkRecCase	ast.html#nkRecCase	TNodeKind.nkRecCase		36
nim	nkRecWhen	ast.html#nkRecWhen	TNodeKind.nkRecWhen		36
nim	nkRefTy	ast.html#nkRefTy	TNodeKind.nkRefTy		36
nim	nkPtrTy	ast.html#nkPtrTy	TNodeKind.nkPtrTy		36
nim	nkVarTy	ast.html#nkVarTy	TNodeKind.nkVarTy		36
nim	nkConstTy	ast.html#nkConstTy	TNodeKind.nkConstTy		36
nim	nkOutTy	ast.html#nkOutTy	TNodeKind.nkOutTy		36
nim	nkDistinctTy	ast.html#nkDistinctTy	TNodeKind.nkDistinctTy		36
nim	nkProcTy	ast.html#nkProcTy	TNodeKind.nkProcTy		36
nim	nkIteratorTy	ast.html#nkIteratorTy	TNodeKind.nkIteratorTy		36
nim	nkSinkAsgn	ast.html#nkSinkAsgn	TNodeKind.nkSinkAsgn		36
nim	nkEnumTy	ast.html#nkEnumTy	TNodeKind.nkEnumTy		36
nim	nkEnumFieldDef	ast.html#nkEnumFieldDef	TNodeKind.nkEnumFieldDef		36
nim	nkArgList	ast.html#nkArgList	TNodeKind.nkArgList		36
nim	nkPattern	ast.html#nkPattern	TNodeKind.nkPattern		36
nim	nkHiddenTryStmt	ast.html#nkHiddenTryStmt	TNodeKind.nkHiddenTryStmt		36
nim	nkClosure	ast.html#nkClosure	TNodeKind.nkClosure		36
nim	nkGotoState	ast.html#nkGotoState	TNodeKind.nkGotoState		36
nim	nkState	ast.html#nkState	TNodeKind.nkState		36
nim	nkBreakState	ast.html#nkBreakState	TNodeKind.nkBreakState		36
nim	nkFuncDef	ast.html#nkFuncDef	TNodeKind.nkFuncDef		36
nim	nkTupleConstr	ast.html#nkTupleConstr	TNodeKind.nkTupleConstr		36
nim	nkError	ast.html#nkError	TNodeKind.nkError		36
nim	nkModuleRef	ast.html#nkModuleRef	TNodeKind.nkModuleRef		36
nim	nkReplayAction	ast.html#nkReplayAction	TNodeKind.nkReplayAction		36
nim	nkNilRodNode	ast.html#nkNilRodNode	TNodeKind.nkNilRodNode		36
nim	TNodeKind	ast.html#TNodeKind	enum TNodeKind		36
nim	TNodeKinds	ast.html#TNodeKinds	type TNodeKinds		231
nim	sfUsed	ast.html#sfUsed	TSymFlag.sfUsed		234
nim	sfExported	ast.html#sfExported	TSymFlag.sfExported		234
nim	sfFromGeneric	ast.html#sfFromGeneric	TSymFlag.sfFromGeneric		234
nim	sfGlobal	ast.html#sfGlobal	TSymFlag.sfGlobal		234
nim	sfForward	ast.html#sfForward	TSymFlag.sfForward		234
nim	sfWasForwarded	ast.html#sfWasForwarded	TSymFlag.sfWasForwarded		234
nim	sfImportc	ast.html#sfImportc	TSymFlag.sfImportc		234
nim	sfExportc	ast.html#sfExportc	TSymFlag.sfExportc		234
nim	sfMangleCpp	ast.html#sfMangleCpp	TSymFlag.sfMangleCpp		234
nim	sfVolatile	ast.html#sfVolatile	TSymFlag.sfVolatile		234
nim	sfRegister	ast.html#sfRegister	TSymFlag.sfRegister		234
nim	sfPure	ast.html#sfPure	TSymFlag.sfPure		234
nim	sfNoSideEffect	ast.html#sfNoSideEffect	TSymFlag.sfNoSideEffect		234
nim	sfSideEffect	ast.html#sfSideEffect	TSymFlag.sfSideEffect		234
nim	sfMainModule	ast.html#sfMainModule	TSymFlag.sfMainModule		234
nim	sfSystemModule	ast.html#sfSystemModule	TSymFlag.sfSystemModule		234
nim	sfNoReturn	ast.html#sfNoReturn	TSymFlag.sfNoReturn		234
nim	sfAddrTaken	ast.html#sfAddrTaken	TSymFlag.sfAddrTaken		234
nim	sfCompilerProc	ast.html#sfCompilerProc	TSymFlag.sfCompilerProc		234
nim	sfEscapes	ast.html#sfEscapes	TSymFlag.sfEscapes		234
nim	sfDiscriminant	ast.html#sfDiscriminant	TSymFlag.sfDiscriminant		234
nim	sfRequiresInit	ast.html#sfRequiresInit	TSymFlag.sfRequiresInit		234
nim	sfDeprecated	ast.html#sfDeprecated	TSymFlag.sfDeprecated		234
nim	sfExplain	ast.html#sfExplain	TSymFlag.sfExplain		234
nim	sfError	ast.html#sfError	TSymFlag.sfError		234
nim	sfShadowed	ast.html#sfShadowed	TSymFlag.sfShadowed		234
nim	sfThread	ast.html#sfThread	TSymFlag.sfThread		234
nim	sfCppNonPod	ast.html#sfCppNonPod	TSymFlag.sfCppNonPod		234
nim	sfCompileTime	ast.html#sfCompileTime	TSymFlag.sfCompileTime		234
nim	sfConstructor	ast.html#sfConstructor	TSymFlag.sfConstructor		234
nim	sfDispatcher	ast.html#sfDispatcher	TSymFlag.sfDispatcher		234
nim	sfBorrow	ast.html#sfBorrow	TSymFlag.sfBorrow		234
nim	sfInfixCall	ast.html#sfInfixCall	TSymFlag.sfInfixCall		234
nim	sfNamedParamCall	ast.html#sfNamedParamCall	TSymFlag.sfNamedParamCall		234
nim	sfDiscardable	ast.html#sfDiscardable	TSymFlag.sfDiscardable		234
nim	sfOverriden	ast.html#sfOverriden	TSymFlag.sfOverriden		234
nim	sfCallsite	ast.html#sfCallsite	TSymFlag.sfCallsite		234
nim	sfGenSym	ast.html#sfGenSym	TSymFlag.sfGenSym		234
nim	sfNonReloadable	ast.html#sfNonReloadable	TSymFlag.sfNonReloadable		234
nim	sfGeneratedOp	ast.html#sfGeneratedOp	TSymFlag.sfGeneratedOp		234
nim	sfTemplateParam	ast.html#sfTemplateParam	TSymFlag.sfTemplateParam		234
nim	sfCursor	ast.html#sfCursor	TSymFlag.sfCursor		234
nim	sfInjectDestructors	ast.html#sfInjectDestructors	TSymFlag.sfInjectDestructors		234
nim	sfNeverRaises	ast.html#sfNeverRaises	TSymFlag.sfNeverRaises		234
nim	sfSystemRaisesDefect	ast.html#sfSystemRaisesDefect	TSymFlag.sfSystemRaisesDefect		234
nim	sfUsedInFinallyOrExcept	ast.html#sfUsedInFinallyOrExcept	TSymFlag.sfUsedInFinallyOrExcept		234
nim	sfSingleUsedTemp	ast.html#sfSingleUsedTemp	TSymFlag.sfSingleUsedTemp		234
nim	sfNoalias	ast.html#sfNoalias	TSymFlag.sfNoalias		234
nim	sfEffectsDelayed	ast.html#sfEffectsDelayed	TSymFlag.sfEffectsDelayed		234
nim	sfGeneratedType	ast.html#sfGeneratedType	TSymFlag.sfGeneratedType		234
nim	sfVirtual	ast.html#sfVirtual	TSymFlag.sfVirtual		234
nim	sfByCopy	ast.html#sfByCopy	TSymFlag.sfByCopy		234
nim	TSymFlag	ast.html#TSymFlag	enum TSymFlag		234
nim	TSymFlags	ast.html#TSymFlags	type TSymFlags		318
nim	sfNoInit	ast.html#sfNoInit	const sfNoInit		321
nim	sfAllUntyped	ast.html#sfAllUntyped	const sfAllUntyped		323
nim	sfDirty	ast.html#sfDirty	const sfDirty		326
nim	sfAnon	ast.html#sfAnon	const sfAnon		330
nim	sfNoForward	ast.html#sfNoForward	const sfNoForward		335
nim	sfReorder	ast.html#sfReorder	const sfReorder		337
nim	sfCompileToCpp	ast.html#sfCompileToCpp	const sfCompileToCpp		340
nim	sfCompileToObjc	ast.html#sfCompileToObjc	const sfCompileToObjc		341
nim	sfExperimental	ast.html#sfExperimental	const sfExperimental		342
nim	sfGoto	ast.html#sfGoto	const sfGoto		343
nim	sfWrittenTo	ast.html#sfWrittenTo	const sfWrittenTo		344
nim	sfBase	ast.html#sfBase	const sfBase		346
nim	sfCustomPragma	ast.html#sfCustomPragma	const sfCustomPragma		347
nim	sfTemplateRedefinition	ast.html#sfTemplateRedefinition	const sfTemplateRedefinition		348
nim	nkWhen	ast.html#nkWhen	const nkWhen		352
nim	nkWhenExpr	ast.html#nkWhenExpr	const nkWhenExpr		353
nim	nkEffectList	ast.html#nkEffectList	const nkEffectList		354
nim	exceptionEffects	ast.html#exceptionEffects	const exceptionEffects		356
nim	requiresEffects	ast.html#requiresEffects	const requiresEffects		357
nim	ensuresEffects	ast.html#ensuresEffects	const ensuresEffects		358
nim	tagEffects	ast.html#tagEffects	const tagEffects		359
nim	pragmasEffects	ast.html#pragmasEffects	const pragmasEffects		360
nim	forbiddenEffects	ast.html#forbiddenEffects	const forbiddenEffects		361
nim	effectListLen	ast.html#effectListLen	const effectListLen		362
nim	nkLastBlockStmts	ast.html#nkLastBlockStmts	const nkLastBlockStmts		363
nim	tyNone	ast.html#tyNone	TTypeKind.tyNone		367
nim	tyBool	ast.html#tyBool	TTypeKind.tyBool		367
nim	tyChar	ast.html#tyChar	TTypeKind.tyChar		367
nim	tyEmpty	ast.html#tyEmpty	TTypeKind.tyEmpty		367
nim	tyAlias	ast.html#tyAlias	TTypeKind.tyAlias		367
nim	tyNil	ast.html#tyNil	TTypeKind.tyNil		367
nim	tyUntyped	ast.html#tyUntyped	TTypeKind.tyUntyped		367
nim	tyTyped	ast.html#tyTyped	TTypeKind.tyTyped		367
nim	tyTypeDesc	ast.html#tyTypeDesc	TTypeKind.tyTypeDesc		367
nim	tyGenericInvocation	ast.html#tyGenericInvocation	TTypeKind.tyGenericInvocation		367
nim	tyGenericBody	ast.html#tyGenericBody	TTypeKind.tyGenericBody		367
nim	tyGenericInst	ast.html#tyGenericInst	TTypeKind.tyGenericInst		367
nim	tyGenericParam	ast.html#tyGenericParam	TTypeKind.tyGenericParam		367
nim	tyDistinct	ast.html#tyDistinct	TTypeKind.tyDistinct		367
nim	tyEnum	ast.html#tyEnum	TTypeKind.tyEnum		367
nim	tyOrdinal	ast.html#tyOrdinal	TTypeKind.tyOrdinal		367
nim	tyArray	ast.html#tyArray	TTypeKind.tyArray		367
nim	tyObject	ast.html#tyObject	TTypeKind.tyObject		367
nim	tyTuple	ast.html#tyTuple	TTypeKind.tyTuple		367
nim	tySet	ast.html#tySet	TTypeKind.tySet		367
nim	tyRange	ast.html#tyRange	TTypeKind.tyRange		367
nim	tyPtr	ast.html#tyPtr	TTypeKind.tyPtr		367
nim	tyRef	ast.html#tyRef	TTypeKind.tyRef		367
nim	tyVar	ast.html#tyVar	TTypeKind.tyVar		367
nim	tySequence	ast.html#tySequence	TTypeKind.tySequence		367
nim	tyProc	ast.html#tyProc	TTypeKind.tyProc		367
nim	tyPointer	ast.html#tyPointer	TTypeKind.tyPointer		367
nim	tyOpenArray	ast.html#tyOpenArray	TTypeKind.tyOpenArray		367
nim	tyString	ast.html#tyString	TTypeKind.tyString		367
nim	tyCstring	ast.html#tyCstring	TTypeKind.tyCstring		367
nim	tyForward	ast.html#tyForward	TTypeKind.tyForward		367
nim	tyInt	ast.html#tyInt	TTypeKind.tyInt		367
nim	tyInt8	ast.html#tyInt8	TTypeKind.tyInt8		367
nim	tyInt16	ast.html#tyInt16	TTypeKind.tyInt16		367
nim	tyInt32	ast.html#tyInt32	TTypeKind.tyInt32		367
nim	tyInt64	ast.html#tyInt64	TTypeKind.tyInt64		367
nim	tyFloat	ast.html#tyFloat	TTypeKind.tyFloat		367
nim	tyFloat32	ast.html#tyFloat32	TTypeKind.tyFloat32		367
nim	tyFloat64	ast.html#tyFloat64	TTypeKind.tyFloat64		367
nim	tyFloat128	ast.html#tyFloat128	TTypeKind.tyFloat128		367
nim	tyUInt	ast.html#tyUInt	TTypeKind.tyUInt		367
nim	tyUInt8	ast.html#tyUInt8	TTypeKind.tyUInt8		367
nim	tyUInt16	ast.html#tyUInt16	TTypeKind.tyUInt16		367
nim	tyUInt32	ast.html#tyUInt32	TTypeKind.tyUInt32		367
nim	tyUInt64	ast.html#tyUInt64	TTypeKind.tyUInt64		367
nim	tyOwned	ast.html#tyOwned	TTypeKind.tyOwned		367
nim	tySink	ast.html#tySink	TTypeKind.tySink		367
nim	tyLent	ast.html#tyLent	TTypeKind.tyLent		367
nim	tyVarargs	ast.html#tyVarargs	TTypeKind.tyVarargs		367
nim	tyUncheckedArray	ast.html#tyUncheckedArray	TTypeKind.tyUncheckedArray		367
nim	tyProxy	ast.html#tyProxy	TTypeKind.tyProxy		367
nim	tyBuiltInTypeClass	ast.html#tyBuiltInTypeClass	TTypeKind.tyBuiltInTypeClass		367
nim	tyUserTypeClass	ast.html#tyUserTypeClass	TTypeKind.tyUserTypeClass		367
nim	tyUserTypeClassInst	ast.html#tyUserTypeClassInst	TTypeKind.tyUserTypeClassInst		367
nim	tyCompositeTypeClass	ast.html#tyCompositeTypeClass	TTypeKind.tyCompositeTypeClass		367
nim	tyInferred	ast.html#tyInferred	TTypeKind.tyInferred		367
nim	tyAnd	ast.html#tyAnd	TTypeKind.tyAnd		367
nim	tyOr	ast.html#tyOr	TTypeKind.tyOr		367
nim	tyNot	ast.html#tyNot	TTypeKind.tyNot		367
nim	tyAnything	ast.html#tyAnything	TTypeKind.tyAnything		367
nim	tyStatic	ast.html#tyStatic	TTypeKind.tyStatic		367
nim	tyFromExpr	ast.html#tyFromExpr	TTypeKind.tyFromExpr		367
nim	tyConcept	ast.html#tyConcept	TTypeKind.tyConcept		367
nim	tyVoid	ast.html#tyVoid	TTypeKind.tyVoid		367
nim	tyIterable	ast.html#tyIterable	TTypeKind.tyIterable		367
nim	TTypeKind	ast.html#TTypeKind	enum TTypeKind		367
nim	tyPureObject	ast.html#tyPureObject	const tyPureObject		467
nim	GcTypeKinds	ast.html#GcTypeKinds	const GcTypeKinds		468
nim	tyError	ast.html#tyError	const tyError		469
nim	tyUnknown	ast.html#tyUnknown	const tyUnknown		470
nim	tyUnknownTypes	ast.html#tyUnknownTypes	const tyUnknownTypes		472
nim	tyTypeClasses	ast.html#tyTypeClasses	const tyTypeClasses		474
nim	tyMetaTypes	ast.html#tyMetaTypes	const tyMetaTypes		478
nim	tyUserTypeClasses	ast.html#tyUserTypeClasses	const tyUserTypeClasses		479
nim	abstractVarRange	ast.html#abstractVarRange	const abstractVarRange		481
nim	abstractInst	ast.html#abstractInst	const abstractInst		483
nim	TTypeKinds	ast.html#TTypeKinds	type TTypeKinds		487
nim	nfNone	ast.html#nfNone	TNodeFlag.nfNone		489
nim	nfBase2	ast.html#nfBase2	TNodeFlag.nfBase2		489
nim	nfBase8	ast.html#nfBase8	TNodeFlag.nfBase8		489
nim	nfBase16	ast.html#nfBase16	TNodeFlag.nfBase16		489
nim	nfAllConst	ast.html#nfAllConst	TNodeFlag.nfAllConst		489
nim	nfTransf	ast.html#nfTransf	TNodeFlag.nfTransf		489
nim	nfNoRewrite	ast.html#nfNoRewrite	TNodeFlag.nfNoRewrite		489
nim	nfSem	ast.html#nfSem	TNodeFlag.nfSem		489
nim	nfLL	ast.html#nfLL	TNodeFlag.nfLL		489
nim	nfDotField	ast.html#nfDotField	TNodeFlag.nfDotField		489
nim	nfDotSetter	ast.html#nfDotSetter	TNodeFlag.nfDotSetter		489
nim	nfExplicitCall	ast.html#nfExplicitCall	TNodeFlag.nfExplicitCall		489
nim	nfExprCall	ast.html#nfExprCall	TNodeFlag.nfExprCall		489
nim	nfIsRef	ast.html#nfIsRef	TNodeFlag.nfIsRef		489
nim	nfIsPtr	ast.html#nfIsPtr	TNodeFlag.nfIsPtr		489
nim	nfPreventCg	ast.html#nfPreventCg	TNodeFlag.nfPreventCg		489
nim	nfBlockArg	ast.html#nfBlockArg	TNodeFlag.nfBlockArg		489
nim	nfFromTemplate	ast.html#nfFromTemplate	TNodeFlag.nfFromTemplate		489
nim	nfDefaultParam	ast.html#nfDefaultParam	TNodeFlag.nfDefaultParam		489
nim	nfDefaultRefsParam	ast.html#nfDefaultRefsParam	TNodeFlag.nfDefaultRefsParam		489
nim	nfExecuteOnReload	ast.html#nfExecuteOnReload	TNodeFlag.nfExecuteOnReload		489
nim	nfLastRead	ast.html#nfLastRead	TNodeFlag.nfLastRead		489
nim	nfFirstWrite	ast.html#nfFirstWrite	TNodeFlag.nfFirstWrite		489
nim	nfHasComment	ast.html#nfHasComment	TNodeFlag.nfHasComment		489
nim	nfSkipFieldChecking	ast.html#nfSkipFieldChecking	TNodeFlag.nfSkipFieldChecking		489
nim	TNodeFlag	ast.html#TNodeFlag	enum TNodeFlag		489
nim	TNodeFlags	ast.html#TNodeFlags	type TNodeFlags		519
nim	tfVarargs	ast.html#tfVarargs	TTypeFlag.tfVarargs		520
nim	tfNoSideEffect	ast.html#tfNoSideEffect	TTypeFlag.tfNoSideEffect		520
nim	tfFinal	ast.html#tfFinal	TTypeFlag.tfFinal		520
nim	tfInheritable	ast.html#tfInheritable	TTypeFlag.tfInheritable		520
nim	tfHasOwned	ast.html#tfHasOwned	TTypeFlag.tfHasOwned		520
nim	tfEnumHasHoles	ast.html#tfEnumHasHoles	TTypeFlag.tfEnumHasHoles		520
nim	tfShallow	ast.html#tfShallow	TTypeFlag.tfShallow		520
nim	tfThread	ast.html#tfThread	TTypeFlag.tfThread		520
nim	tfFromGeneric	ast.html#tfFromGeneric	TTypeFlag.tfFromGeneric		520
nim	tfUnresolved	ast.html#tfUnresolved	TTypeFlag.tfUnresolved		520
nim	tfResolved	ast.html#tfResolved	TTypeFlag.tfResolved		520
nim	tfRetType	ast.html#tfRetType	TTypeFlag.tfRetType		520
nim	tfCapturesEnv	ast.html#tfCapturesEnv	TTypeFlag.tfCapturesEnv		520
nim	tfByCopy	ast.html#tfByCopy	TTypeFlag.tfByCopy		520
nim	tfByRef	ast.html#tfByRef	TTypeFlag.tfByRef		520
nim	tfIterator	ast.html#tfIterator	TTypeFlag.tfIterator		520
nim	tfPartial	ast.html#tfPartial	TTypeFlag.tfPartial		520
nim	tfNotNil	ast.html#tfNotNil	TTypeFlag.tfNotNil		520
nim	tfRequiresInit	ast.html#tfRequiresInit	TTypeFlag.tfRequiresInit		520
nim	tfNeedsFullInit	ast.html#tfNeedsFullInit	TTypeFlag.tfNeedsFullInit		520
nim	tfVarIsPtr	ast.html#tfVarIsPtr	TTypeFlag.tfVarIsPtr		520
nim	tfHasMeta	ast.html#tfHasMeta	TTypeFlag.tfHasMeta		520
nim	tfHasGCedMem	ast.html#tfHasGCedMem	TTypeFlag.tfHasGCedMem		520
nim	tfPacked	ast.html#tfPacked	TTypeFlag.tfPacked		520
nim	tfHasStatic	ast.html#tfHasStatic	TTypeFlag.tfHasStatic		520
nim	tfGenericTypeParam	ast.html#tfGenericTypeParam	TTypeFlag.tfGenericTypeParam		520
nim	tfImplicitTypeParam	ast.html#tfImplicitTypeParam	TTypeFlag.tfImplicitTypeParam		520
nim	tfInferrableStatic	ast.html#tfInferrableStatic	TTypeFlag.tfInferrableStatic		520
nim	tfConceptMatchedTypeSym	ast.html#tfConceptMatchedTypeSym	TTypeFlag.tfConceptMatchedTypeSym		520
nim	tfExplicit	ast.html#tfExplicit	TTypeFlag.tfExplicit		520
nim	tfWildcard	ast.html#tfWildcard	TTypeFlag.tfWildcard		520
nim	tfHasAsgn	ast.html#tfHasAsgn	TTypeFlag.tfHasAsgn		520
nim	tfBorrowDot	ast.html#tfBorrowDot	TTypeFlag.tfBorrowDot		520
nim	tfTriggersCompileTime	ast.html#tfTriggersCompileTime	TTypeFlag.tfTriggersCompileTime		520
nim	tfRefsAnonObj	ast.html#tfRefsAnonObj	TTypeFlag.tfRefsAnonObj		520
nim	tfCovariant	ast.html#tfCovariant	TTypeFlag.tfCovariant		520
nim	tfWeakCovariant	ast.html#tfWeakCovariant	TTypeFlag.tfWeakCovariant		520
nim	tfContravariant	ast.html#tfContravariant	TTypeFlag.tfContravariant		520
nim	tfCheckedForDestructor	ast.html#tfCheckedForDestructor	TTypeFlag.tfCheckedForDestructor		520
nim	tfAcyclic	ast.html#tfAcyclic	TTypeFlag.tfAcyclic		520
nim	tfIncompleteStruct	ast.html#tfIncompleteStruct	TTypeFlag.tfIncompleteStruct		520
nim	tfCompleteStruct	ast.html#tfCompleteStruct	TTypeFlag.tfCompleteStruct		520
nim	tfExplicitCallConv	ast.html#tfExplicitCallConv	TTypeFlag.tfExplicitCallConv		520
nim	tfIsConstructor	ast.html#tfIsConstructor	TTypeFlag.tfIsConstructor		520
nim	tfEffectSystemWorkaround	ast.html#tfEffectSystemWorkaround	TTypeFlag.tfEffectSystemWorkaround		520
nim	tfIsOutParam	ast.html#tfIsOutParam	TTypeFlag.tfIsOutParam		520
nim	tfSendable	ast.html#tfSendable	TTypeFlag.tfSendable		520
nim	TTypeFlag	ast.html#TTypeFlag	enum TTypeFlag		520
nim	TTypeFlags	ast.html#TTypeFlags	type TTypeFlags		592
nim	skUnknown	ast.html#skUnknown	TSymKind.skUnknown		594
nim	skConditional	ast.html#skConditional	TSymKind.skConditional		594
nim	skDynLib	ast.html#skDynLib	TSymKind.skDynLib		594
nim	skParam	ast.html#skParam	TSymKind.skParam		594
nim	skGenericParam	ast.html#skGenericParam	TSymKind.skGenericParam		594
nim	skTemp	ast.html#skTemp	TSymKind.skTemp		594
nim	skModule	ast.html#skModule	TSymKind.skModule		594
nim	skType	ast.html#skType	TSymKind.skType		594
nim	skVar	ast.html#skVar	TSymKind.skVar		594
nim	skLet	ast.html#skLet	TSymKind.skLet		594
nim	skConst	ast.html#skConst	TSymKind.skConst		594
nim	skResult	ast.html#skResult	TSymKind.skResult		594
nim	skProc	ast.html#skProc	TSymKind.skProc		594
nim	skFunc	ast.html#skFunc	TSymKind.skFunc		594
nim	skMethod	ast.html#skMethod	TSymKind.skMethod		594
nim	skIterator	ast.html#skIterator	TSymKind.skIterator		594
nim	skConverter	ast.html#skConverter	TSymKind.skConverter		594
nim	skMacro	ast.html#skMacro	TSymKind.skMacro		594
nim	skTemplate	ast.html#skTemplate	TSymKind.skTemplate		594
nim	skField	ast.html#skField	TSymKind.skField		594
nim	skEnumField	ast.html#skEnumField	TSymKind.skEnumField		594
nim	skForVar	ast.html#skForVar	TSymKind.skForVar		594
nim	skLabel	ast.html#skLabel	TSymKind.skLabel		594
nim	skStub	ast.html#skStub	TSymKind.skStub		594
nim	skPackage	ast.html#skPackage	TSymKind.skPackage		594
nim	TSymKind	ast.html#TSymKind	enum TSymKind		594
nim	TSymKinds	ast.html#TSymKinds	type TSymKinds		626
nim	routineKinds	ast.html#routineKinds	const routineKinds		629
nim	ExportableSymKinds	ast.html#ExportableSymKinds	const ExportableSymKinds		631
nim	tfUnion	ast.html#tfUnion	const tfUnion		633
nim	tfGcSafe	ast.html#tfGcSafe	const tfGcSafe		634
nim	tfObjHasKids	ast.html#tfObjHasKids	const tfObjHasKids		635
nim	tfReturnsNew	ast.html#tfReturnsNew	const tfReturnsNew		636
nim	skError	ast.html#skError	const skError		637
nim	eqTypeFlags	ast.html#eqTypeFlags	var eqTypeFlags		640
nim	mNone	ast.html#mNone	TMagic.mNone		646
nim	mDefined	ast.html#mDefined	TMagic.mDefined		646
nim	mDeclared	ast.html#mDeclared	TMagic.mDeclared		646
nim	mDeclaredInScope	ast.html#mDeclaredInScope	TMagic.mDeclaredInScope		646
nim	mCompiles	ast.html#mCompiles	TMagic.mCompiles		646
nim	mArrGet	ast.html#mArrGet	TMagic.mArrGet		646
nim	mArrPut	ast.html#mArrPut	TMagic.mArrPut		646
nim	mAsgn	ast.html#mAsgn	TMagic.mAsgn		646
nim	mLow	ast.html#mLow	TMagic.mLow		646
nim	mHigh	ast.html#mHigh	TMagic.mHigh		646
nim	mSizeOf	ast.html#mSizeOf	TMagic.mSizeOf		646
nim	mAlignOf	ast.html#mAlignOf	TMagic.mAlignOf		646
nim	mOffsetOf	ast.html#mOffsetOf	TMagic.mOffsetOf		646
nim	mTypeTrait	ast.html#mTypeTrait	TMagic.mTypeTrait		646
nim	mIs	ast.html#mIs	TMagic.mIs		646
nim	mOf	ast.html#mOf	TMagic.mOf		646
nim	mAddr	ast.html#mAddr	TMagic.mAddr		646
nim	mType	ast.html#mType	TMagic.mType		646
nim	mTypeOf	ast.html#mTypeOf	TMagic.mTypeOf		646
nim	mPlugin	ast.html#mPlugin	TMagic.mPlugin		646
nim	mEcho	ast.html#mEcho	TMagic.mEcho		646
nim	mShallowCopy	ast.html#mShallowCopy	TMagic.mShallowCopy		646
nim	mSlurp	ast.html#mSlurp	TMagic.mSlurp		646
nim	mStaticExec	ast.html#mStaticExec	TMagic.mStaticExec		646
nim	mStatic	ast.html#mStatic	TMagic.mStatic		646
nim	mParseExprToAst	ast.html#mParseExprToAst	TMagic.mParseExprToAst		646
nim	mParseStmtToAst	ast.html#mParseStmtToAst	TMagic.mParseStmtToAst		646
nim	mExpandToAst	ast.html#mExpandToAst	TMagic.mExpandToAst		646
nim	mQuoteAst	ast.html#mQuoteAst	TMagic.mQuoteAst		646
nim	mInc	ast.html#mInc	TMagic.mInc		646
nim	mDec	ast.html#mDec	TMagic.mDec		646
nim	mOrd	ast.html#mOrd	TMagic.mOrd		646
nim	mNew	ast.html#mNew	TMagic.mNew		646
nim	mNewFinalize	ast.html#mNewFinalize	TMagic.mNewFinalize		646
nim	mNewSeq	ast.html#mNewSeq	TMagic.mNewSeq		646
nim	mNewSeqOfCap	ast.html#mNewSeqOfCap	TMagic.mNewSeqOfCap		646
nim	mLengthOpenArray	ast.html#mLengthOpenArray	TMagic.mLengthOpenArray		646
nim	mLengthStr	ast.html#mLengthStr	TMagic.mLengthStr		646
nim	mLengthArray	ast.html#mLengthArray	TMagic.mLengthArray		646
nim	mLengthSeq	ast.html#mLengthSeq	TMagic.mLengthSeq		646
nim	mIncl	ast.html#mIncl	TMagic.mIncl		646
nim	mExcl	ast.html#mExcl	TMagic.mExcl		646
nim	mCard	ast.html#mCard	TMagic.mCard		646
nim	mChr	ast.html#mChr	TMagic.mChr		646
nim	mGCref	ast.html#mGCref	TMagic.mGCref		646
nim	mGCunref	ast.html#mGCunref	TMagic.mGCunref		646
nim	mAddI	ast.html#mAddI	TMagic.mAddI		646
nim	mSubI	ast.html#mSubI	TMagic.mSubI		646
nim	mMulI	ast.html#mMulI	TMagic.mMulI		646
nim	mDivI	ast.html#mDivI	TMagic.mDivI		646
nim	mModI	ast.html#mModI	TMagic.mModI		646
nim	mSucc	ast.html#mSucc	TMagic.mSucc		646
nim	mPred	ast.html#mPred	TMagic.mPred		646
nim	mAddF64	ast.html#mAddF64	TMagic.mAddF64		646
nim	mSubF64	ast.html#mSubF64	TMagic.mSubF64		646
nim	mMulF64	ast.html#mMulF64	TMagic.mMulF64		646
nim	mDivF64	ast.html#mDivF64	TMagic.mDivF64		646
nim	mShrI	ast.html#mShrI	TMagic.mShrI		646
nim	mShlI	ast.html#mShlI	TMagic.mShlI		646
nim	mAshrI	ast.html#mAshrI	TMagic.mAshrI		646
nim	mBitandI	ast.html#mBitandI	TMagic.mBitandI		646
nim	mBitorI	ast.html#mBitorI	TMagic.mBitorI		646
nim	mBitxorI	ast.html#mBitxorI	TMagic.mBitxorI		646
nim	mMinI	ast.html#mMinI	TMagic.mMinI		646
nim	mMaxI	ast.html#mMaxI	TMagic.mMaxI		646
nim	mAddU	ast.html#mAddU	TMagic.mAddU		646
nim	mSubU	ast.html#mSubU	TMagic.mSubU		646
nim	mMulU	ast.html#mMulU	TMagic.mMulU		646
nim	mDivU	ast.html#mDivU	TMagic.mDivU		646
nim	mModU	ast.html#mModU	TMagic.mModU		646
nim	mEqI	ast.html#mEqI	TMagic.mEqI		646
nim	mLeI	ast.html#mLeI	TMagic.mLeI		646
nim	mLtI	ast.html#mLtI	TMagic.mLtI		646
nim	mEqF64	ast.html#mEqF64	TMagic.mEqF64		646
nim	mLeF64	ast.html#mLeF64	TMagic.mLeF64		646
nim	mLtF64	ast.html#mLtF64	TMagic.mLtF64		646
nim	mLeU	ast.html#mLeU	TMagic.mLeU		646
nim	mLtU	ast.html#mLtU	TMagic.mLtU		646
nim	mEqEnum	ast.html#mEqEnum	TMagic.mEqEnum		646
nim	mLeEnum	ast.html#mLeEnum	TMagic.mLeEnum		646
nim	mLtEnum	ast.html#mLtEnum	TMagic.mLtEnum		646
nim	mEqCh	ast.html#mEqCh	TMagic.mEqCh		646
nim	mLeCh	ast.html#mLeCh	TMagic.mLeCh		646
nim	mLtCh	ast.html#mLtCh	TMagic.mLtCh		646
nim	mEqB	ast.html#mEqB	TMagic.mEqB		646
nim	mLeB	ast.html#mLeB	TMagic.mLeB		646
nim	mLtB	ast.html#mLtB	TMagic.mLtB		646
nim	mEqRef	ast.html#mEqRef	TMagic.mEqRef		646
nim	mLePtr	ast.html#mLePtr	TMagic.mLePtr		646
nim	mLtPtr	ast.html#mLtPtr	TMagic.mLtPtr		646
nim	mXor	ast.html#mXor	TMagic.mXor		646
nim	mEqCString	ast.html#mEqCString	TMagic.mEqCString		646
nim	mEqProc	ast.html#mEqProc	TMagic.mEqProc		646
nim	mUnaryMinusI	ast.html#mUnaryMinusI	TMagic.mUnaryMinusI		646
nim	mUnaryMinusI64	ast.html#mUnaryMinusI64	TMagic.mUnaryMinusI64		646
nim	mAbsI	ast.html#mAbsI	TMagic.mAbsI		646
nim	mNot	ast.html#mNot	TMagic.mNot		646
nim	mUnaryPlusI	ast.html#mUnaryPlusI	TMagic.mUnaryPlusI		646
nim	mBitnotI	ast.html#mBitnotI	TMagic.mBitnotI		646
nim	mUnaryPlusF64	ast.html#mUnaryPlusF64	TMagic.mUnaryPlusF64		646
nim	mUnaryMinusF64	ast.html#mUnaryMinusF64	TMagic.mUnaryMinusF64		646
nim	mCharToStr	ast.html#mCharToStr	TMagic.mCharToStr		646
nim	mBoolToStr	ast.html#mBoolToStr	TMagic.mBoolToStr		646
nim	mIntToStr	ast.html#mIntToStr	TMagic.mIntToStr		646
nim	mInt64ToStr	ast.html#mInt64ToStr	TMagic.mInt64ToStr		646
nim	mFloatToStr	ast.html#mFloatToStr	TMagic.mFloatToStr		646
nim	mCStrToStr	ast.html#mCStrToStr	TMagic.mCStrToStr		646
nim	mStrToStr	ast.html#mStrToStr	TMagic.mStrToStr		646
nim	mEnumToStr	ast.html#mEnumToStr	TMagic.mEnumToStr		646
nim	mAnd	ast.html#mAnd	TMagic.mAnd		646
nim	mOr	ast.html#mOr	TMagic.mOr		646
nim	mImplies	ast.html#mImplies	TMagic.mImplies		646
nim	mIff	ast.html#mIff	TMagic.mIff		646
nim	mExists	ast.html#mExists	TMagic.mExists		646
nim	mForall	ast.html#mForall	TMagic.mForall		646
nim	mOld	ast.html#mOld	TMagic.mOld		646
nim	mEqStr	ast.html#mEqStr	TMagic.mEqStr		646
nim	mLeStr	ast.html#mLeStr	TMagic.mLeStr		646
nim	mLtStr	ast.html#mLtStr	TMagic.mLtStr		646
nim	mEqSet	ast.html#mEqSet	TMagic.mEqSet		646
nim	mLeSet	ast.html#mLeSet	TMagic.mLeSet		646
nim	mLtSet	ast.html#mLtSet	TMagic.mLtSet		646
nim	mMulSet	ast.html#mMulSet	TMagic.mMulSet		646
nim	mPlusSet	ast.html#mPlusSet	TMagic.mPlusSet		646
nim	mMinusSet	ast.html#mMinusSet	TMagic.mMinusSet		646
nim	mConStrStr	ast.html#mConStrStr	TMagic.mConStrStr		646
nim	mSlice	ast.html#mSlice	TMagic.mSlice		646
nim	mDotDot	ast.html#mDotDot	TMagic.mDotDot		646
nim	mFields	ast.html#mFields	TMagic.mFields		646
nim	mFieldPairs	ast.html#mFieldPairs	TMagic.mFieldPairs		646
nim	mOmpParFor	ast.html#mOmpParFor	TMagic.mOmpParFor		646
nim	mAppendStrCh	ast.html#mAppendStrCh	TMagic.mAppendStrCh		646
nim	mAppendStrStr	ast.html#mAppendStrStr	TMagic.mAppendStrStr		646
nim	mAppendSeqElem	ast.html#mAppendSeqElem	TMagic.mAppendSeqElem		646
nim	mInSet	ast.html#mInSet	TMagic.mInSet		646
nim	mRepr	ast.html#mRepr	TMagic.mRepr		646
nim	mExit	ast.html#mExit	TMagic.mExit		646
nim	mSetLengthStr	ast.html#mSetLengthStr	TMagic.mSetLengthStr		646
nim	mSetLengthSeq	ast.html#mSetLengthSeq	TMagic.mSetLengthSeq		646
nim	mIsPartOf	ast.html#mIsPartOf	TMagic.mIsPartOf		646
nim	mAstToStr	ast.html#mAstToStr	TMagic.mAstToStr		646
nim	mParallel	ast.html#mParallel	TMagic.mParallel		646
nim	mSwap	ast.html#mSwap	TMagic.mSwap		646
nim	mIsNil	ast.html#mIsNil	TMagic.mIsNil		646
nim	mArrToSeq	ast.html#mArrToSeq	TMagic.mArrToSeq		646
nim	mOpenArrayToSeq	ast.html#mOpenArrayToSeq	TMagic.mOpenArrayToSeq		646
nim	mNewString	ast.html#mNewString	TMagic.mNewString		646
nim	mNewStringOfCap	ast.html#mNewStringOfCap	TMagic.mNewStringOfCap		646
nim	mParseBiggestFloat	ast.html#mParseBiggestFloat	TMagic.mParseBiggestFloat		646
nim	mMove	ast.html#mMove	TMagic.mMove		646
nim	mWasMoved	ast.html#mWasMoved	TMagic.mWasMoved		646
nim	mDup	ast.html#mDup	TMagic.mDup		646
nim	mDestroy	ast.html#mDestroy	TMagic.mDestroy		646
nim	mTrace	ast.html#mTrace	TMagic.mTrace		646
nim	mDefault	ast.html#mDefault	TMagic.mDefault		646
nim	mUnown	ast.html#mUnown	TMagic.mUnown		646
nim	mFinished	ast.html#mFinished	TMagic.mFinished		646
nim	mIsolate	ast.html#mIsolate	TMagic.mIsolate		646
nim	mAccessEnv	ast.html#mAccessEnv	TMagic.mAccessEnv		646
nim	mAccessTypeField	ast.html#mAccessTypeField	TMagic.mAccessTypeField		646
nim	mReset	ast.html#mReset	TMagic.mReset		646
nim	mArray	ast.html#mArray	TMagic.mArray		646
nim	mOpenArray	ast.html#mOpenArray	TMagic.mOpenArray		646
nim	mRange	ast.html#mRange	TMagic.mRange		646
nim	mSet	ast.html#mSet	TMagic.mSet		646
nim	mSeq	ast.html#mSeq	TMagic.mSeq		646
nim	mVarargs	ast.html#mVarargs	TMagic.mVarargs		646
nim	mRef	ast.html#mRef	TMagic.mRef		646
nim	mPtr	ast.html#mPtr	TMagic.mPtr		646
nim	mVar	ast.html#mVar	TMagic.mVar		646
nim	mDistinct	ast.html#mDistinct	TMagic.mDistinct		646
nim	mVoid	ast.html#mVoid	TMagic.mVoid		646
nim	mTuple	ast.html#mTuple	TMagic.mTuple		646
nim	mOrdinal	ast.html#mOrdinal	TMagic.mOrdinal		646
nim	mIterableType	ast.html#mIterableType	TMagic.mIterableType		646
nim	mInt	ast.html#mInt	TMagic.mInt		646
nim	mInt8	ast.html#mInt8	TMagic.mInt8		646
nim	mInt16	ast.html#mInt16	TMagic.mInt16		646
nim	mInt32	ast.html#mInt32	TMagic.mInt32		646
nim	mInt64	ast.html#mInt64	TMagic.mInt64		646
nim	mUInt	ast.html#mUInt	TMagic.mUInt		646
nim	mUInt8	ast.html#mUInt8	TMagic.mUInt8		646
nim	mUInt16	ast.html#mUInt16	TMagic.mUInt16		646
nim	mUInt32	ast.html#mUInt32	TMagic.mUInt32		646
nim	mUInt64	ast.html#mUInt64	TMagic.mUInt64		646
nim	mFloat	ast.html#mFloat	TMagic.mFloat		646
nim	mFloat32	ast.html#mFloat32	TMagic.mFloat32		646
nim	mFloat64	ast.html#mFloat64	TMagic.mFloat64		646
nim	mFloat128	ast.html#mFloat128	TMagic.mFloat128		646
nim	mBool	ast.html#mBool	TMagic.mBool		646
nim	mChar	ast.html#mChar	TMagic.mChar		646
nim	mString	ast.html#mString	TMagic.mString		646
nim	mCstring	ast.html#mCstring	TMagic.mCstring		646
nim	mPointer	ast.html#mPointer	TMagic.mPointer		646
nim	mNil	ast.html#mNil	TMagic.mNil		646
nim	mExpr	ast.html#mExpr	TMagic.mExpr		646
nim	mStmt	ast.html#mStmt	TMagic.mStmt		646
nim	mTypeDesc	ast.html#mTypeDesc	TMagic.mTypeDesc		646
nim	mVoidType	ast.html#mVoidType	TMagic.mVoidType		646
nim	mPNimrodNode	ast.html#mPNimrodNode	TMagic.mPNimrodNode		646
nim	mSpawn	ast.html#mSpawn	TMagic.mSpawn		646
nim	mDeepCopy	ast.html#mDeepCopy	TMagic.mDeepCopy		646
nim	mIsMainModule	ast.html#mIsMainModule	TMagic.mIsMainModule		646
nim	mCompileDate	ast.html#mCompileDate	TMagic.mCompileDate		646
nim	mCompileTime	ast.html#mCompileTime	TMagic.mCompileTime		646
nim	mProcCall	ast.html#mProcCall	TMagic.mProcCall		646
nim	mCpuEndian	ast.html#mCpuEndian	TMagic.mCpuEndian		646
nim	mHostOS	ast.html#mHostOS	TMagic.mHostOS		646
nim	mHostCPU	ast.html#mHostCPU	TMagic.mHostCPU		646
nim	mBuildOS	ast.html#mBuildOS	TMagic.mBuildOS		646
nim	mBuildCPU	ast.html#mBuildCPU	TMagic.mBuildCPU		646
nim	mAppType	ast.html#mAppType	TMagic.mAppType		646
nim	mCompileOption	ast.html#mCompileOption	TMagic.mCompileOption		646
nim	mCompileOptionArg	ast.html#mCompileOptionArg	TMagic.mCompileOptionArg		646
nim	mNLen	ast.html#mNLen	TMagic.mNLen		646
nim	mNChild	ast.html#mNChild	TMagic.mNChild		646
nim	mNSetChild	ast.html#mNSetChild	TMagic.mNSetChild		646
nim	mNAdd	ast.html#mNAdd	TMagic.mNAdd		646
nim	mNAddMultiple	ast.html#mNAddMultiple	TMagic.mNAddMultiple		646
nim	mNDel	ast.html#mNDel	TMagic.mNDel		646
nim	mNKind	ast.html#mNKind	TMagic.mNKind		646
nim	mNSymKind	ast.html#mNSymKind	TMagic.mNSymKind		646
nim	mNccValue	ast.html#mNccValue	TMagic.mNccValue		646
nim	mNccInc	ast.html#mNccInc	TMagic.mNccInc		646
nim	mNcsAdd	ast.html#mNcsAdd	TMagic.mNcsAdd		646
nim	mNcsIncl	ast.html#mNcsIncl	TMagic.mNcsIncl		646
nim	mNcsLen	ast.html#mNcsLen	TMagic.mNcsLen		646
nim	mNcsAt	ast.html#mNcsAt	TMagic.mNcsAt		646
nim	mNctPut	ast.html#mNctPut	TMagic.mNctPut		646
nim	mNctLen	ast.html#mNctLen	TMagic.mNctLen		646
nim	mNctGet	ast.html#mNctGet	TMagic.mNctGet		646
nim	mNctHasNext	ast.html#mNctHasNext	TMagic.mNctHasNext		646
nim	mNctNext	ast.html#mNctNext	TMagic.mNctNext		646
nim	mNIntVal	ast.html#mNIntVal	TMagic.mNIntVal		646
nim	mNFloatVal	ast.html#mNFloatVal	TMagic.mNFloatVal		646
nim	mNSymbol	ast.html#mNSymbol	TMagic.mNSymbol		646
nim	mNIdent	ast.html#mNIdent	TMagic.mNIdent		646
nim	mNGetType	ast.html#mNGetType	TMagic.mNGetType		646
nim	mNStrVal	ast.html#mNStrVal	TMagic.mNStrVal		646
nim	mNSetIntVal	ast.html#mNSetIntVal	TMagic.mNSetIntVal		646
nim	mNSetFloatVal	ast.html#mNSetFloatVal	TMagic.mNSetFloatVal		646
nim	mNSetSymbol	ast.html#mNSetSymbol	TMagic.mNSetSymbol		646
nim	mNSetIdent	ast.html#mNSetIdent	TMagic.mNSetIdent		646
nim	mNSetStrVal	ast.html#mNSetStrVal	TMagic.mNSetStrVal		646
nim	mNLineInfo	ast.html#mNLineInfo	TMagic.mNLineInfo		646
nim	mNNewNimNode	ast.html#mNNewNimNode	TMagic.mNNewNimNode		646
nim	mNCopyNimNode	ast.html#mNCopyNimNode	TMagic.mNCopyNimNode		646
nim	mNCopyNimTree	ast.html#mNCopyNimTree	TMagic.mNCopyNimTree		646
nim	mStrToIdent	ast.html#mStrToIdent	TMagic.mStrToIdent		646
nim	mNSigHash	ast.html#mNSigHash	TMagic.mNSigHash		646
nim	mNSizeOf	ast.html#mNSizeOf	TMagic.mNSizeOf		646
nim	mNBindSym	ast.html#mNBindSym	TMagic.mNBindSym		646
nim	mNCallSite	ast.html#mNCallSite	TMagic.mNCallSite		646
nim	mEqIdent	ast.html#mEqIdent	TMagic.mEqIdent		646
nim	mEqNimrodNode	ast.html#mEqNimrodNode	TMagic.mEqNimrodNode		646
nim	mSameNodeType	ast.html#mSameNodeType	TMagic.mSameNodeType		646
nim	mGetImpl	ast.html#mGetImpl	TMagic.mGetImpl		646
nim	mNGenSym	ast.html#mNGenSym	TMagic.mNGenSym		646
nim	mNHint	ast.html#mNHint	TMagic.mNHint		646
nim	mNWarning	ast.html#mNWarning	TMagic.mNWarning		646
nim	mNError	ast.html#mNError	TMagic.mNError		646
nim	mInstantiationInfo	ast.html#mInstantiationInfo	TMagic.mInstantiationInfo		646
nim	mGetTypeInfo	ast.html#mGetTypeInfo	TMagic.mGetTypeInfo		646
nim	mGetTypeInfoV2	ast.html#mGetTypeInfoV2	TMagic.mGetTypeInfoV2		646
nim	mNimvm	ast.html#mNimvm	TMagic.mNimvm		646
nim	mIntDefine	ast.html#mIntDefine	TMagic.mIntDefine		646
nim	mStrDefine	ast.html#mStrDefine	TMagic.mStrDefine		646
nim	mBoolDefine	ast.html#mBoolDefine	TMagic.mBoolDefine		646
nim	mGenericDefine	ast.html#mGenericDefine	TMagic.mGenericDefine		646
nim	mRunnableExamples	ast.html#mRunnableExamples	TMagic.mRunnableExamples		646
nim	mException	ast.html#mException	TMagic.mException		646
nim	mBuiltinType	ast.html#mBuiltinType	TMagic.mBuiltinType		646
nim	mSymOwner	ast.html#mSymOwner	TMagic.mSymOwner		646
nim	mUncheckedArray	ast.html#mUncheckedArray	TMagic.mUncheckedArray		646
nim	mGetImplTransf	ast.html#mGetImplTransf	TMagic.mGetImplTransf		646
nim	mSymIsInstantiationOf	ast.html#mSymIsInstantiationOf	TMagic.mSymIsInstantiationOf		646
nim	mNodeId	ast.html#mNodeId	TMagic.mNodeId		646
nim	mPrivateAccess	ast.html#mPrivateAccess	TMagic.mPrivateAccess		646
nim	mZeroDefault	ast.html#mZeroDefault	TMagic.mZeroDefault		646
nim	TMagic	ast.html#TMagic	enum TMagic		646
nim	ctfeWhitelist	ast.html#ctfeWhitelist	const ctfeWhitelist		726
nim	generatedMagics	ast.html#generatedMagics	const generatedMagics		755
nim	ItemId	ast.html#ItemId	object ItemId		759
nim	`$`	ast.html#$,ItemId	proc `$`(x: ItemId): string		763
nim	`==`	ast.html#==,ItemId,ItemId	proc `==`(a, b: ItemId): bool		766
nim	hash	ast.html#hash,ItemId	proc hash(x: ItemId): Hash		769
nim	TIdObj	ast.html#TIdObj	object TIdObj		776
nim	PIdObj	ast.html#PIdObj	type PIdObj		778
nim	PNode	ast.html#PNode	type PNode		780
nim	TNodeSeq	ast.html#TNodeSeq	type TNodeSeq		781
nim	PType	ast.html#PType	type PType		782
nim	PSym	ast.html#PSym	type PSym		783
nim	TNode	ast.html#TNode	object TNode		784
nim	TStrTable	ast.html#TStrTable	object TStrTable		806
nim	locNone	ast.html#locNone	TLocKind.locNone		811
nim	locTemp	ast.html#locTemp	TLocKind.locTemp		811
nim	locLocalVar	ast.html#locLocalVar	TLocKind.locLocalVar		811
nim	locGlobalVar	ast.html#locGlobalVar	TLocKind.locGlobalVar		811
nim	locParam	ast.html#locParam	TLocKind.locParam		811
nim	locField	ast.html#locField	TLocKind.locField		811
nim	locExpr	ast.html#locExpr	TLocKind.locExpr		811
nim	locProc	ast.html#locProc	TLocKind.locProc		811
nim	locData	ast.html#locData	TLocKind.locData		811
nim	locCall	ast.html#locCall	TLocKind.locCall		811
nim	locOther	ast.html#locOther	TLocKind.locOther		811
nim	TLocKind	ast.html#TLocKind	enum TLocKind		811
nim	lfIndirect	ast.html#lfIndirect	TLocFlag.lfIndirect		823
nim	lfFullExternalName	ast.html#lfFullExternalName	TLocFlag.lfFullExternalName		823
nim	lfNoDeepCopy	ast.html#lfNoDeepCopy	TLocFlag.lfNoDeepCopy		823
nim	lfNoDecl	ast.html#lfNoDecl	TLocFlag.lfNoDecl		823
nim	lfDynamicLib	ast.html#lfDynamicLib	TLocFlag.lfDynamicLib		823
nim	lfExportLib	ast.html#lfExportLib	TLocFlag.lfExportLib		823
nim	lfHeader	ast.html#lfHeader	TLocFlag.lfHeader		823
nim	lfImportCompilerProc	ast.html#lfImportCompilerProc	TLocFlag.lfImportCompilerProc		823
nim	lfSingleUse	ast.html#lfSingleUse	TLocFlag.lfSingleUse		823
nim	lfEnforceDeref	ast.html#lfEnforceDeref	TLocFlag.lfEnforceDeref		823
nim	lfPrepareForMutation	ast.html#lfPrepareForMutation	TLocFlag.lfPrepareForMutation		823
nim	TLocFlag	ast.html#TLocFlag	enum TLocFlag		823
nim	OnUnknown	ast.html#OnUnknown	TStorageLoc.OnUnknown		839
nim	OnStatic	ast.html#OnStatic	TStorageLoc.OnStatic		839
nim	OnStack	ast.html#OnStack	TStorageLoc.OnStack		839
nim	OnHeap	ast.html#OnHeap	TStorageLoc.OnHeap		839
nim	TStorageLoc	ast.html#TStorageLoc	enum TStorageLoc		839
nim	TLocFlags	ast.html#TLocFlags	type TLocFlags		845
nim	TLoc	ast.html#TLoc	object TLoc		846
nim	libHeader	ast.html#libHeader	TLibKind.libHeader		855
nim	libDynamic	ast.html#libDynamic	TLibKind.libDynamic		855
nim	TLibKind	ast.html#TLibKind	enum TLibKind		855
nim	TLib	ast.html#TLib	object TLib		858
nim	CompilesId	ast.html#CompilesId	type CompilesId		867
nim	TInstantiation	ast.html#TInstantiation	object TInstantiation		869
nim	PInstantiation	ast.html#PInstantiation	type PInstantiation		874
nim	TScope	ast.html#TScope	object TScope		876
nim	PScope	ast.html#PScope	type PScope		882
nim	PLib	ast.html#PLib	type PLib		884
nim	TSym	ast.html#TSym	object TSym		885
nim	TTypeSeq	ast.html#TTypeSeq	type TTypeSeq		941
nim	attachedWasMoved	ast.html#attachedWasMoved	TTypeAttachedOp.attachedWasMoved		943
nim	attachedDestructor	ast.html#attachedDestructor	TTypeAttachedOp.attachedDestructor		943
nim	attachedAsgn	ast.html#attachedAsgn	TTypeAttachedOp.attachedAsgn		943
nim	attachedSink	ast.html#attachedSink	TTypeAttachedOp.attachedSink		943
nim	attachedTrace	ast.html#attachedTrace	TTypeAttachedOp.attachedTrace		943
nim	attachedDeepCopy	ast.html#attachedDeepCopy	TTypeAttachedOp.attachedDeepCopy		943
nim	attachedDup	ast.html#attachedDup	TTypeAttachedOp.attachedDup		943
nim	TTypeAttachedOp	ast.html#TTypeAttachedOp	enum TTypeAttachedOp		943
nim	TType	ast.html#TType	object TType		952
nim	TPair	ast.html#TPair	object TPair		983
nim	TPairSeq	ast.html#TPairSeq	type TPairSeq		986
nim	TIdPair	ast.html#TIdPair	object TIdPair		988
nim	TIdPairSeq	ast.html#TIdPairSeq	type TIdPairSeq		992
nim	TIdTable	ast.html#TIdTable	object TIdTable		993
nim	TIdNodePair	ast.html#TIdNodePair	object TIdNodePair		997
nim	TIdNodePairSeq	ast.html#TIdNodePairSeq	type TIdNodePairSeq		1001
nim	TIdNodeTable	ast.html#TIdNodeTable	object TIdNodeTable		1002
nim	TNodePair	ast.html#TNodePair	object TNodePair		1006
nim	TNodePairSeq	ast.html#TNodePairSeq	type TNodePairSeq		1011
nim	TNodeTable	ast.html#TNodeTable	object TNodeTable		1012
nim	TObjectSeq	ast.html#TObjectSeq	type TObjectSeq		1017
nim	TObjectSet	ast.html#TObjectSet	object TObjectSet		1018
nim	impUnknown	ast.html#impUnknown	TImplication.impUnknown		1022
nim	impNo	ast.html#impNo	TImplication.impNo		1022
nim	impYes	ast.html#impYes	TImplication.impYes		1022
nim	TImplication	ast.html#TImplication	enum TImplication		1022
nim	setUseIc	ast.html#setUseIc,bool	proc setUseIc(useIc: bool)		1035
nim	comment	ast.html#comment,PNode	proc comment(n: PNode): string		1037
nim	comment=	ast.html#comment=,PNode,string	proc comment=(n: PNode; a: string)		1042
nim	OverloadableSyms	ast.html#OverloadableSyms	const OverloadableSyms		1062
nim	GenericTypes	ast.html#GenericTypes	const GenericTypes		1065
nim	StructuralEquivTypes	ast.html#StructuralEquivTypes	const StructuralEquivTypes		1068
nim	ConcreteTypes	ast.html#ConcreteTypes	const ConcreteTypes		1072
nim	IntegralTypes	ast.html#IntegralTypes	const IntegralTypes		1079
nim	ConstantDataTypes	ast.html#ConstantDataTypes	const ConstantDataTypes		1081
nim	NilableTypes	ast.html#NilableTypes	const NilableTypes		1083
nim	PtrLikeKinds	ast.html#PtrLikeKinds	const PtrLikeKinds		1085
nim	PersistentNodeFlags	ast.html#PersistentNodeFlags	const PersistentNodeFlags		1086
nim	namePos	ast.html#namePos	const namePos		1092
nim	patternPos	ast.html#patternPos	const patternPos		1093
nim	genericParamsPos	ast.html#genericParamsPos	const genericParamsPos		1094
nim	paramsPos	ast.html#paramsPos	const paramsPos		1095
nim	pragmasPos	ast.html#pragmasPos	const pragmasPos		1096
nim	miscPos	ast.html#miscPos	const miscPos		1097
nim	bodyPos	ast.html#bodyPos	const bodyPos		1098
nim	resultPos	ast.html#resultPos	const resultPos		1099
nim	dispatcherPos	ast.html#dispatcherPos	const dispatcherPos		1100
nim	nfAllFieldsSet	ast.html#nfAllFieldsSet	const nfAllFieldsSet		1102
nim	nkCallKinds	ast.html#nkCallKinds	const nkCallKinds		1104
nim	nkIdentKinds	ast.html#nkIdentKinds	const nkIdentKinds		1106
nim	nkPragmaCallKinds	ast.html#nkPragmaCallKinds	const nkPragmaCallKinds		1109
nim	nkLiterals	ast.html#nkLiterals	const nkLiterals		1110
nim	nkFloatLiterals	ast.html#nkFloatLiterals	const nkFloatLiterals		1111
nim	nkLambdaKinds	ast.html#nkLambdaKinds	const nkLambdaKinds		1112
nim	declarativeDefs	ast.html#declarativeDefs	const declarativeDefs		1113
nim	routineDefs	ast.html#routineDefs	const routineDefs		1114
nim	procDefs	ast.html#procDefs	const procDefs		1115
nim	callableDefs	ast.html#callableDefs	const callableDefs		1116
nim	nkSymChoices	ast.html#nkSymChoices	const nkSymChoices		1118
nim	nkStrKinds	ast.html#nkStrKinds	const nkStrKinds		1119
nim	skLocalVars	ast.html#skLocalVars	const skLocalVars		1121
nim	skProcKinds	ast.html#skProcKinds	const skProcKinds		1122
nim	defaultOffset	ast.html#defaultOffset	const defaultOffset		1127
nim	getPIdent	ast.html#getPIdent,PNode	proc getPIdent(a: PNode): PIdent		1129
nim	id	ast.html#id.t,PIdObj	template id(a: PIdObj): int		1141
nim	IdGenerator	ast.html#IdGenerator	type IdGenerator		1146
nim	PackageModuleId	ast.html#PackageModuleId	const PackageModuleId		1154
nim	idGeneratorFromModule	ast.html#idGeneratorFromModule,PSym	proc idGeneratorFromModule(m: PSym): IdGenerator		1156
nim	idGeneratorForPackage	ast.html#idGeneratorForPackage,int32	proc idGeneratorForPackage(nextIdWillBe: int32): IdGenerator		1160
nim	nextSymId	ast.html#nextSymId,IdGenerator	proc nextSymId(x: IdGenerator): ItemId		1163
nim	nextTypeId	ast.html#nextTypeId,IdGenerator	proc nextTypeId(x: IdGenerator): ItemId		1168
nim	ggDebug	ast.html#ggDebug	var ggDebug		1186
nim	isCallExpr	ast.html#isCallExpr,PNode	proc isCallExpr(n: PNode): bool		1188
nim	discardSons	ast.html#discardSons,PNode	proc discardSons(father: PNode)		1191
nim	len	ast.html#len,Indexable	proc len(n: Indexable): int		1195
nim	safeLen	ast.html#safeLen,PNode	proc safeLen(n: PNode): int		1198
nim	safeArrLen	ast.html#safeArrLen,PNode	proc safeArrLen(n: PNode): int		1203
nim	add	ast.html#add,Indexable,Indexable	proc add(father, son: Indexable)		1209
nim	addAllowNil	ast.html#addAllowNil,Indexable,Indexable	proc addAllowNil(father, son: Indexable)		1213
nim	`[]`	ast.html#[].t,Indexable,int	template `[]`(n: Indexable; i: int): Indexable		1216
nim	`[]=`	ast.html#[]=.t,Indexable,int,Indexable	template `[]=`(n: Indexable; i: int; x: Indexable)		1217
nim	`[]`	ast.html#[].t,Indexable,BackwardsIndex	template `[]`(n: Indexable; i: BackwardsIndex): Indexable		1219
nim	`[]=`	ast.html#[]=.t,Indexable,BackwardsIndex,Indexable	template `[]=`(n: Indexable; i: BackwardsIndex; x: Indexable)		1220
nim	getDeclPragma	ast.html#getDeclPragma,PNode	proc getDeclPragma(n: PNode): PNode		1222
nim	extractPragma	ast.html#extractPragma,PSym	proc extractPragma(s: PSym): PNode		1253
nim	skipPragmaExpr	ast.html#skipPragmaExpr,PNode	proc skipPragmaExpr(n: PNode): PNode		1264
nim	setInfoRecursive	ast.html#setInfoRecursive,PNode,TLineInfo	proc setInfoRecursive(n: PNode; info: TLineInfo)		1272
nim	newNode	ast.html#newNode,TNodeKind	proc newNode(kind: TNodeKind): PNode		1300
nim	newNodeI	ast.html#newNodeI,TNodeKind,TLineInfo	proc newNodeI(kind: TNodeKind; info: TLineInfo): PNode		1305
nim	newNodeI	ast.html#newNodeI,TNodeKind,TLineInfo,int	proc newNodeI(kind: TNodeKind; info: TLineInfo; children: int): PNode		1310
nim	newNodeIT	ast.html#newNodeIT,TNodeKind,TLineInfo,PType	proc newNodeIT(kind: TNodeKind; info: TLineInfo; typ: PType): PNode		1317
nim	newTree	ast.html#newTree,TNodeKind,varargs[PNode]	proc newTree(kind: TNodeKind; children: varargs[PNode]): PNode		1323
nim	newTreeI	ast.html#newTreeI,TNodeKind,TLineInfo,varargs[PNode]	proc newTreeI(kind: TNodeKind; info: TLineInfo; children: varargs[PNode]): PNode		1329
nim	newTreeIT	ast.html#newTreeIT,TNodeKind,TLineInfo,PType,varargs[PNode]	proc newTreeIT(kind: TNodeKind; info: TLineInfo; typ: PType; children: varargs[PNode]): PNode		1335
nim	previouslyInferred	ast.html#previouslyInferred.t,PType	template previouslyInferred(t: PType): PType		1341
nim	newSym	ast.html#newSym,TSymKind,PIdent,IdGenerator,PSym,TLineInfo,TOptions	proc newSym(symKind: TSymKind; name: PIdent; idgen: IdGenerator; owner: PSym;\n       info: TLineInfo; options: TOptions = {}): PSym		1353
nim	astdef	ast.html#astdef,PSym	proc astdef(s: PSym): PNode		1368
nim	isMetaType	ast.html#isMetaType,PType	proc isMetaType(t: PType): bool		1375
nim	isUnresolvedStatic	ast.html#isUnresolvedStatic,PType	proc isUnresolvedStatic(t: PType): bool		1380
nim	linkTo	ast.html#linkTo,PType,PSym	proc linkTo(t: PType; s: PSym): PType		1383
nim	linkTo	ast.html#linkTo,PSym,PType	proc linkTo(s: PSym; t: PType): PSym		1388
nim	fileIdx	ast.html#fileIdx.t,PSym	template fileIdx(c: PSym): FileIndex		1393
nim	filename	ast.html#filename.t,PSym	template filename(c: PSym): string		1397
nim	appendToModule	ast.html#appendToModule,PSym,PNode	proc appendToModule(m: PSym; n: PNode)		1401
nim	GrowthFactor	ast.html#GrowthFactor	const GrowthFactor		1412
nim	StartSize	ast.html#StartSize	const StartSize		1413
nim	copyStrTable	ast.html#copyStrTable,TStrTable,TStrTable	proc copyStrTable(dest: var TStrTable; src: TStrTable)		1415
nim	copyIdTable	ast.html#copyIdTable,TIdTable,TIdTable	proc copyIdTable(dest: var TIdTable; src: TIdTable)		1420
nim	copyObjectSet	ast.html#copyObjectSet,TObjectSet,TObjectSet	proc copyObjectSet(dest: var TObjectSet; src: TObjectSet)		1425
nim	withInfo	ast.html#withInfo,PNode,TLineInfo	proc withInfo(n: PNode; info: TLineInfo): PNode		1433
nim	newIdentNode	ast.html#newIdentNode,PIdent,TLineInfo	proc newIdentNode(ident: PIdent; info: TLineInfo): PNode		1437
nim	newSymNode	ast.html#newSymNode,PSym	proc newSymNode(sym: PSym): PNode		1442
nim	newSymNode	ast.html#newSymNode,PSym,TLineInfo	proc newSymNode(sym: PSym; info: TLineInfo): PNode		1448
nim	newIntNode	ast.html#newIntNode,TNodeKind,BiggestInt	proc newIntNode(kind: TNodeKind; intVal: BiggestInt): PNode		1454
nim	newIntNode	ast.html#newIntNode,TNodeKind,Int128	proc newIntNode(kind: TNodeKind; intVal: Int128): PNode		1458
nim	lastSon	ast.html#lastSon,Indexable	proc lastSon(n: Indexable): Indexable		1462
nim	skipTypes	ast.html#skipTypes,PType,TTypeKinds	proc skipTypes(t: PType; kinds: TTypeKinds): PType		1464
nim	newIntTypeNode	ast.html#newIntTypeNode,BiggestInt,PType	proc newIntTypeNode(intVal: BiggestInt; typ: PType): PNode		1472
nim	newIntTypeNode	ast.html#newIntTypeNode,Int128,PType	proc newIntTypeNode(intVal: Int128; typ: PType): PNode		1495
nim	newFloatNode	ast.html#newFloatNode,TNodeKind,BiggestFloat	proc newFloatNode(kind: TNodeKind; floatVal: BiggestFloat): PNode		1499
nim	newStrNode	ast.html#newStrNode,TNodeKind,string	proc newStrNode(kind: TNodeKind; strVal: string): PNode		1503
nim	newStrNode	ast.html#newStrNode,string,TLineInfo	proc newStrNode(strVal: string; info: TLineInfo): PNode		1507
nim	newProcNode	ast.html#newProcNode,TNodeKind,TLineInfo,PNode,PNode,PNode,PNode,PNode,PNode,PNode	proc newProcNode(kind: TNodeKind; info: TLineInfo; body: PNode;\n            params, name, pattern, genericParams, pragmas, exceptions: PNode): PNode		1511
nim	AttachedOpToStr	ast.html#AttachedOpToStr	const AttachedOpToStr		1520
nim	`$`	ast.html#$,PSym	proc `$`(s: PSym): string		1523
nim	newType	ast.html#newType,TTypeKind,ItemId,PSym	proc newType(kind: TTypeKind; id: ItemId; owner: PSym): PType		1529
nim	newSons	ast.html#newSons,Indexable,int	proc newSons(father: Indexable; length: int)		1546
nim	assignType	ast.html#assignType,PType,PType	proc assignType(dest, src: PType)		1549
nim	copyType	ast.html#copyType,PType,ItemId,PSym	proc copyType(t: PType; id: ItemId; owner: PSym): PType		1567
nim	exactReplica	ast.html#exactReplica,PType	proc exactReplica(t: PType): PType		1572
nim	copySym	ast.html#copySym,PSym,IdGenerator	proc copySym(s: PSym; idgen: IdGenerator): PSym		1575
nim	createModuleAlias	ast.html#createModuleAlias,PSym,IdGenerator,PIdent,TLineInfo,TOptions	proc createModuleAlias(s: PSym; idgen: IdGenerator; newIdent: PIdent;\n                  info: TLineInfo; options: TOptions): PSym		1591
nim	initStrTable	ast.html#initStrTable,TStrTable	proc initStrTable(x: var TStrTable)		1603
nim	newStrTable	ast.html#newStrTable	proc newStrTable(): TStrTable		1607
nim	initIdTable	ast.html#initIdTable,TIdTable	proc initIdTable(x: var TIdTable)		1610
nim	newIdTable	ast.html#newIdTable	proc newIdTable(): TIdTable		1614
nim	resetIdTable	ast.html#resetIdTable,TIdTable	proc resetIdTable(x: var TIdTable)		1617
nim	initObjectSet	ast.html#initObjectSet,TObjectSet	proc initObjectSet(x: var TObjectSet)		1623
nim	initIdNodeTable	ast.html#initIdNodeTable,TIdNodeTable	proc initIdNodeTable(x: var TIdNodeTable)		1627
nim	initNodeTable	ast.html#initNodeTable,TNodeTable	proc initNodeTable(x: var TNodeTable)		1631
nim	skipTypes	ast.html#skipTypes,PType,TTypeKinds,int	proc skipTypes(t: PType; kinds: TTypeKinds; maxIters: int): PType		1635
nim	skipTypesOrNil	ast.html#skipTypesOrNil,PType,TTypeKinds	proc skipTypesOrNil(t: PType; kinds: TTypeKinds): PType		1643
nim	isGCedMem	ast.html#isGCedMem,PType	proc isGCedMem(t: PType): bool		1650
nim	propagateToOwner	ast.html#propagateToOwner,PType,PType	proc propagateToOwner(owner, elem: PType; propagateHasAsgn = true)		1654
nim	rawAddSon	ast.html#rawAddSon,PType,PType	proc rawAddSon(father, son: PType; propagateHasAsgn = true)		1679
nim	rawAddSonNoPropagationOfTypeFlags	ast.html#rawAddSonNoPropagationOfTypeFlags,PType,PType	proc rawAddSonNoPropagationOfTypeFlags(father, son: PType)		1683
nim	addSonNilAllowed	ast.html#addSonNilAllowed,PNode,PNode	proc addSonNilAllowed(father, son: PNode)		1686
nim	delSon	ast.html#delSon,PNode,int	proc delSon(father: PNode; idx: int)		1689
nim	copyNode	ast.html#copyNode,PNode	proc copyNode(src: PNode): PNode		1694
nim	transitionSonsKind	ast.html#transitionSonsKind,PNode,range[]	proc transitionSonsKind(n: PNode; kind: range[nkComesFrom .. nkTupleConstr])		1723
nim	transitionIntKind	ast.html#transitionIntKind,PNode,range[]	proc transitionIntKind(n: PNode; kind: range[nkCharLit .. nkUInt64Lit])		1727
nim	transitionIntToFloatKind	ast.html#transitionIntToFloatKind,PNode,range[]	proc transitionIntToFloatKind(n: PNode; kind: range[nkFloatLit .. nkFloat128Lit])		1731
nim	transitionNoneToSym	ast.html#transitionNoneToSym,PNode	proc transitionNoneToSym(n: PNode)		1735
nim	transitionSymKindCommon	ast.html#transitionSymKindCommon.t,TSymKind	template transitionSymKindCommon(k: TSymKind)		1738
nim	transitionGenericParamToType	ast.html#transitionGenericParamToType,PSym	proc transitionGenericParamToType(s: PSym)		1749
nim	transitionRoutineSymKind	ast.html#transitionRoutineSymKind,PSym,range[]	proc transitionRoutineSymKind(s: PSym; kind: range[skProc .. skTemplate])		1752
nim	transitionToLet	ast.html#transitionToLet,PSym	proc transitionToLet(s: PSym)		1757
nim	shallowCopy	ast.html#shallowCopy,PNode	proc shallowCopy(src: PNode): PNode		1783
nim	copyTree	ast.html#copyTree,PNode	proc copyTree(src: PNode): PNode		1788
nim	copyTreeWithoutNode	ast.html#copyTreeWithoutNode,PNode,PNode	proc copyTreeWithoutNode(src, skippedNode: PNode): PNode		1795
nim	hasSonWith	ast.html#hasSonWith,PNode,TNodeKind	proc hasSonWith(n: PNode; kind: TNodeKind): bool		1802
nim	hasNilSon	ast.html#hasNilSon,PNode	proc hasNilSon(n: PNode): bool		1808
nim	containsNode	ast.html#containsNode,PNode,TNodeKinds	proc containsNode(n: PNode; kinds: TNodeKinds): bool		1816
nim	hasSubnodeWith	ast.html#hasSubnodeWith,PNode,TNodeKind	proc hasSubnodeWith(n: PNode; kind: TNodeKind): bool		1824
nim	getInt	ast.html#getInt,PNode	proc getInt(a: PNode): Int128		1833
nim	getInt64	ast.html#getInt64,PNode	proc getInt64(a: PNode): int64		1846
nim	getFloat	ast.html#getFloat,PNode	proc getFloat(a: PNode): BiggestFloat		1853
nim	getStr	ast.html#getStr,PNode	proc getStr(a: PNode): string		1864
nim	getStrOrChar	ast.html#getStrOrChar,PNode	proc getStrOrChar(a: PNode): string		1876
nim	isGenericParams	ast.html#isGenericParams,PNode	proc isGenericParams(n: PNode): bool		1886
nim	isGenericRoutine	ast.html#isGenericRoutine,PNode	proc isGenericRoutine(n: PNode): bool		1890
nim	isGenericRoutineStrict	ast.html#isGenericRoutineStrict,PSym	proc isGenericRoutineStrict(s: PSym): bool		1893
nim	isGenericRoutine	ast.html#isGenericRoutine,PSym	proc isGenericRoutine(s: PSym): bool		1899
nim	skipGenericOwner	ast.html#skipGenericOwner,PSym	proc skipGenericOwner(s: PSym): PSym		1913
nim	originatingModule	ast.html#originatingModule,PSym	proc originatingModule(s: PSym): PSym		1922
nim	isRoutine	ast.html#isRoutine,PSym	proc isRoutine(s: PSym): bool		1926
nim	isCompileTimeProc	ast.html#isCompileTimeProc,PSym	proc isCompileTimeProc(s: PSym): bool		1929
nim	isRunnableExamples	ast.html#isRunnableExamples,PNode	proc isRunnableExamples(n: PNode): bool		1933
nim	hasPattern	ast.html#hasPattern,PSym	proc hasPattern(s: PSym): bool		1938
nim	items	ast.html#items.i,PNode	iterator items(n: PNode): PNode		1941
nim	pairs	ast.html#pairs.i,PNode	iterator pairs(n: PNode): tuple[i: int, n: PNode]		1944
nim	isAtom	ast.html#isAtom,PNode	proc isAtom(n: PNode): bool		1947
nim	isEmptyType	ast.html#isEmptyType,PType	proc isEmptyType(t: PType): bool		1950
nim	makeStmtList	ast.html#makeStmtList,PNode	proc makeStmtList(n: PNode): PNode		1954
nim	skipStmtList	ast.html#skipStmtList,PNode	proc skipStmtList(n: PNode): PNode		1961
nim	toVar	ast.html#toVar,PType,TTypeKind,IdGenerator	proc toVar(typ: PType; kind: TTypeKind; idgen: IdGenerator): PType		1969
nim	toRef	ast.html#toRef,PType,IdGenerator	proc toRef(typ: PType; idgen: IdGenerator): PType		1977
nim	toObject	ast.html#toObject,PType	proc toObject(typ: PType): PType		1985
nim	toObjectFromRefPtrGeneric	ast.html#toObjectFromRefPtrGeneric,PType	proc toObjectFromRefPtrGeneric(typ: PType): PType		1993
nim	isImportedException	ast.html#isImportedException,PType,ConfigRef	proc isImportedException(t: PType; conf: ConfigRef): bool		2013
nim	isInfixAs	ast.html#isInfixAs,PNode	proc isInfixAs(n: PNode): bool		2024
nim	skipColon	ast.html#skipColon,PNode	proc skipColon(n: PNode): PNode		2027
nim	findUnresolvedStatic	ast.html#findUnresolvedStatic,PNode	proc findUnresolvedStatic(n: PNode): PNode		2032
nim	hasDestructor	ast.html#hasDestructor.t,PType	template hasDestructor(t: PType): bool		2051
nim	incompleteType	ast.html#incompleteType.t,PType	template incompleteType(t: PType): bool		2053
nim	typeCompleted	ast.html#typeCompleted.t,PSym	template typeCompleted(s: PSym)		2056
nim	detailedInfo	ast.html#detailedInfo.t,PSym	template detailedInfo(sym: PSym): string		2059
nim	isInlineIterator	ast.html#isInlineIterator,PType	proc isInlineIterator(typ: PType): bool		2062
nim	isIterator	ast.html#isIterator,PType	proc isIterator(typ: PType): bool		2065
nim	isClosureIterator	ast.html#isClosureIterator,PType	proc isClosureIterator(typ: PType): bool		2068
nim	isClosure	ast.html#isClosure,PType	proc isClosure(typ: PType): bool		2071
nim	isSinkParam	ast.html#isSinkParam,PSym	proc isSinkParam(s: PSym): bool		2074
nim	isSinkType	ast.html#isSinkType,PType	proc isSinkType(t: PType): bool		2077
nim	newProcType	ast.html#newProcType,TLineInfo,ItemId,PSym	proc newProcType(info: TLineInfo; id: ItemId; owner: PSym): PType		2080
nim	addParam	ast.html#addParam,PType,PSym	proc addParam(procType: PType; param: PSym)		2089
nim	canRaiseConservative	ast.html#canRaiseConservative,PNode	proc canRaiseConservative(fn: PNode): bool		2097
nim	canRaise	ast.html#canRaise,PNode	proc canRaise(fn: PNode): bool		2103
nim	toHumanStr	ast.html#toHumanStr,TSymKind	proc toHumanStr(kind: TSymKind): string		2124
nim	toHumanStr	ast.html#toHumanStr,TTypeKind	proc toHumanStr(kind: TTypeKind): string		2128
nim	skipAddr	ast.html#skipAddr,PNode	proc skipAddr(n: PNode): PNode		2132
nim	isNewStyleConcept	ast.html#isNewStyleConcept,PNode	proc isNewStyleConcept(n: PNode): bool		2135
nim	isOutParam	ast.html#isOutParam,PType	proc isOutParam(t: PType): bool		2139
nim	nodesToIgnoreSet	ast.html#nodesToIgnoreSet	const nodesToIgnoreSet		2142
nimgrp	skiptypes	ast.html#skipTypes-procs-all	proc		1464
nimgrp	newinttypenode	ast.html#newIntTypeNode-procs-all	proc		1472
nimgrp	newnodei	ast.html#newNodeI-procs-all	proc		1305
nimgrp	newsymnode	ast.html#newSymNode-procs-all	proc		1442
nimgrp	newstrnode	ast.html#newStrNode-procs-all	proc		1503
nimgrp	isgenericroutine	ast.html#isGenericRoutine-procs-all	proc		1890
nimgrp	$	ast.html#$-procs-all	proc		763
nimgrp	newintnode	ast.html#newIntNode-procs-all	proc		1454
nimgrp	linkto	ast.html#linkTo-procs-all	proc		1383
nimgrp	tohumanstr	ast.html#toHumanStr-procs-all	proc		2124
nimgrp	[]=	ast.html#[]=-templates-all	template		1217
nimgrp	[]	ast.html#[]-templates-all	template		1216
