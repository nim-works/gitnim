nimTitle	vm	vm.html	module compiler/vm		0
nim	setResult	vm.html#setResult,VmArgs,BiggestInt	proc setResult(a: VmArgs; v: BiggestInt)		19
nim	setResult	vm.html#setResult,VmArgs,BiggestFloat	proc setResult(a: VmArgs; v: BiggestFloat)		20
nim	setResult	vm.html#setResult,VmArgs,bool	proc setResult(a: VmArgs; v: bool)		21
nim	setResult	vm.html#setResult,VmArgs,string	proc setResult(a: VmArgs; v: string)		25
nim	setResult	vm.html#setResult,VmArgs,PNode	proc setResult(a: VmArgs; n: PNode)		30
nim	setResult	vm.html#setResult,VmArgs,AbsoluteDir	proc setResult(a: VmArgs; v: AbsoluteDir)		34
nim	setResult	vm.html#setResult,VmArgs,seq[string]	proc setResult(a: VmArgs; v: seq[string])		36
nim	numArgs	vm.html#numArgs,VmArgs	proc numArgs(a: VmArgs): int		51
nim	getInt	vm.html#getInt,VmArgs,Natural	proc getInt(a: VmArgs; i: Natural): BiggestInt		54
nim	getBool	vm.html#getBool,VmArgs,Natural	proc getBool(a: VmArgs; i: Natural): bool		55
nim	getFloat	vm.html#getFloat,VmArgs,Natural	proc getFloat(a: VmArgs; i: Natural): BiggestFloat		56
nim	getNode	vm.html#getNode,VmArgs,Natural	proc getNode(a: VmArgs; i: Natural): PNode		57
nim	getString	vm.html#getString,VmArgs,Natural	proc getString(a: VmArgs; i: Natural): string		58
nim	getVar	vm.html#getVar,VmArgs,Natural	proc getVar(a: VmArgs; i: Natural): PNode		59
nim	getNodeAddr	vm.html#getNodeAddr,VmArgs,Natural	proc getNodeAddr(a: VmArgs; i: Natural): PNode		67
nim	execProc	vm.html#execProc,PCtx,PSym,openArray[PNode]	proc execProc(c: PCtx; sym: PSym; args: openArray[PNode]): PNode		2248
nim	evalStmt	vm.html#evalStmt,PCtx,PNode	proc evalStmt(c: PCtx; n: PNode)		2274
nim	evalExpr	vm.html#evalExpr,PCtx,PNode	proc evalExpr(c: PCtx; n: PNode): PNode		2282
nim	getGlobalValue	vm.html#getGlobalValue,PCtx,PSym	proc getGlobalValue(c: PCtx; s: PSym): PNode		2291
nim	setGlobalValue	vm.html#setGlobalValue,PCtx,PSym,PNode	proc setGlobalValue(c: PCtx; s: PSym; val: PNode)		2295
nim	registerAdditionalOps	vm.html#registerAdditionalOps,PCtx	proc registerAdditionalOps(c: PCtx)		185
nim	setupGlobalCtx	vm.html#setupGlobalCtx,PSym,ModuleGraph,IdGenerator	proc setupGlobalCtx(module: PSym; graph: ModuleGraph; idgen: IdGenerator)		2302
nim	evalPass	vm.html#evalPass	const evalPass		2331
nim	evalConstExpr	vm.html#evalConstExpr,PSym,IdGenerator,ModuleGraph,PNode	proc evalConstExpr(module: PSym; idgen: IdGenerator; g: ModuleGraph; e: PNode): PNode		2353
nim	evalStaticExpr	vm.html#evalStaticExpr,PSym,IdGenerator,ModuleGraph,PNode,PSym	proc evalStaticExpr(module: PSym; idgen: IdGenerator; g: ModuleGraph; e: PNode;\n               prc: PSym): PNode		2356
nim	evalStaticStmt	vm.html#evalStaticStmt,PSym,IdGenerator,ModuleGraph,PNode,PSym	proc evalStaticStmt(module: PSym; idgen: IdGenerator; g: ModuleGraph; e: PNode;\n               prc: PSym)		2359
nim	setupCompileTimeVar	vm.html#setupCompileTimeVar,PSym,IdGenerator,ModuleGraph,PNode	proc setupCompileTimeVar(module: PSym; idgen: IdGenerator; g: ModuleGraph; n: PNode)		2362
nim	genericParamsInMacroCall	vm.html#genericParamsInMacroCall.i,PSym,PNode	iterator genericParamsInMacroCall(macroSym: PSym; call: PNode): (PSym, PNode)		2401
nim	evalMacroCall	vm.html#evalMacroCall,PSym,IdGenerator,ModuleGraph,ref.int,PNode,PNode,PSym	proc evalMacroCall(module: PSym; idgen: IdGenerator; g: ModuleGraph;\n              templInstCounter: ref int; n, nOrig: PNode; sym: PSym): PNode		2417
nimgrp	setresult	vm.html#setResult-procs-all	proc		19
