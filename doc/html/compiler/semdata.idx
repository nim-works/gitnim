nimTitle	semdata	semdata.html	module compiler/semdata		0
nim	TOptionEntry	semdata.html#TOptionEntry	object TOptionEntry		24
nim	POptionEntry	semdata.html#POptionEntry	type POptionEntry		33
nim	PProcCon	semdata.html#PProcCon	type PProcCon		34
nim	TProcCon	semdata.html#TProcCon	object TProcCon		35
nim	TMatchedConcept	semdata.html#TMatchedConcept	object TMatchedConcept		48
nim	TInstantiationPair	semdata.html#TInstantiationPair	object TInstantiationPair		53
nim	efLValue	semdata.html#efLValue	TExprFlag.efLValue		57
nim	efWantIterator	semdata.html#efWantIterator	TExprFlag.efWantIterator		57
nim	efWantIterable	semdata.html#efWantIterable	TExprFlag.efWantIterable		57
nim	efInTypeof	semdata.html#efInTypeof	TExprFlag.efInTypeof		57
nim	efNeedStatic	semdata.html#efNeedStatic	TExprFlag.efNeedStatic		57
nim	efPreferStatic	semdata.html#efPreferStatic	TExprFlag.efPreferStatic		57
nim	efPreferNilResult	semdata.html#efPreferNilResult	TExprFlag.efPreferNilResult		57
nim	efWantStmt	semdata.html#efWantStmt	TExprFlag.efWantStmt		57
nim	efAllowStmt	semdata.html#efAllowStmt	TExprFlag.efAllowStmt		57
nim	efDetermineType	semdata.html#efDetermineType	TExprFlag.efDetermineType		57
nim	efExplain	semdata.html#efExplain	TExprFlag.efExplain		57
nim	efWantValue	semdata.html#efWantValue	TExprFlag.efWantValue		57
nim	efOperand	semdata.html#efOperand	TExprFlag.efOperand		57
nim	efNoSemCheck	semdata.html#efNoSemCheck	TExprFlag.efNoSemCheck		57
nim	efNoEvaluateGeneric	semdata.html#efNoEvaluateGeneric	TExprFlag.efNoEvaluateGeneric		57
nim	efInCall	semdata.html#efInCall	TExprFlag.efInCall		57
nim	efFromHlo	semdata.html#efFromHlo	TExprFlag.efFromHlo		57
nim	efNoSem2Check	semdata.html#efNoSem2Check	TExprFlag.efNoSem2Check		57
nim	efNoUndeclared	semdata.html#efNoUndeclared	TExprFlag.efNoUndeclared		57
nim	efIsDotCall	semdata.html#efIsDotCall	TExprFlag.efIsDotCall		57
nim	efCannotBeDotCall	semdata.html#efCannotBeDotCall	TExprFlag.efCannotBeDotCall		57
nim	efNoDiagnostics	semdata.html#efNoDiagnostics	TExprFlag.efNoDiagnostics		57
nim	efTypeAllowed	semdata.html#efTypeAllowed	TExprFlag.efTypeAllowed		57
nim	efWantNoDefaults	semdata.html#efWantNoDefaults	TExprFlag.efWantNoDefaults		57
nim	TExprFlag	semdata.html#TExprFlag	enum TExprFlag		57
nim	TExprFlags	semdata.html#TExprFlags	type TExprFlags		80
nim	importAll	semdata.html#importAll	ImportMode.importAll		82
nim	importSet	semdata.html#importSet	ImportMode.importSet		82
nim	importExcept	semdata.html#importExcept	ImportMode.importExcept		82
nim	ImportMode	semdata.html#ImportMode	enum ImportMode		82
nim	ImportedModule	semdata.html#ImportedModule	object ImportedModule		84
nim	PContext	semdata.html#PContext	type PContext		93
nim	TContext	semdata.html#TContext	object TContext		94
nim	config	semdata.html#config.t,PContext	template config(c: PContext): ConfigRef		170
nim	getIntLitType	semdata.html#getIntLitType,PContext,PNode	proc getIntLitType(c: PContext; literal: PNode): PType		172
nim	setIntLitType	semdata.html#setIntLitType,PContext,PNode	proc setIntLitType(c: PContext; result: PNode)		187
nim	makeInstPair	semdata.html#makeInstPair,PSym,PInstantiation	proc makeInstPair(s: PSym; inst: PInstantiation): TInstantiationPair		216
nim	filename	semdata.html#filename,PContext	proc filename(c: PContext): string		220
nim	scopeDepth	semdata.html#scopeDepth,PContext	proc scopeDepth(c: PContext): int		224
nim	getCurrOwner	semdata.html#getCurrOwner,PContext	proc getCurrOwner(c: PContext): PSym		228
nim	pushOwner	semdata.html#pushOwner,PContext,PSym	proc pushOwner(c: PContext; owner: PSym)		235
nim	popOwner	semdata.html#popOwner,PContext	proc popOwner(c: PContext)		238
nim	lastOptionEntry	semdata.html#lastOptionEntry,PContext	proc lastOptionEntry(c: PContext): POptionEntry		242
nim	popProcCon	semdata.html#popProcCon,PContext	proc popProcCon(c: PContext)		245
nim	put	semdata.html#put,PProcCon,PSym,PSym	proc put(p: PProcCon; key, val: PSym)		247
nim	get	semdata.html#get,PProcCon,PSym	proc get(p: PProcCon; key: PSym): PSym		254
nim	getGenSym	semdata.html#getGenSym,PContext,PSym	proc getGenSym(c: PContext; s: PSym): PSym		258
nim	considerGenSyms	semdata.html#considerGenSyms,PContext,PNode	proc considerGenSyms(c: PContext; n: PNode)		269
nim	newOptionEntry	semdata.html#newOptionEntry,ConfigRef	proc newOptionEntry(conf: ConfigRef): POptionEntry		280
nim	pushOptionEntry	semdata.html#pushOptionEntry,PContext	proc pushOptionEntry(c: PContext): POptionEntry		288
nim	popOptionEntry	semdata.html#popOptionEntry,PContext	proc popOptionEntry(c: PContext)		299
nim	newContext	semdata.html#newContext,ModuleGraph,PSym	proc newContext(graph: ModuleGraph; module: PSym): PContext		306
nim	packedRepr	semdata.html#packedRepr.t	template packedRepr(c): untyped		330
nim	encoder	semdata.html#encoder.t	template encoder(c): untyped		331
nim	addIncludeFileDep	semdata.html#addIncludeFileDep,PContext,FileIndex	proc addIncludeFileDep(c: PContext; f: FileIndex)		333
nim	addImportFileDep	semdata.html#addImportFileDep,PContext,FileIndex	proc addImportFileDep(c: PContext; f: FileIndex)		337
nim	addPragmaComputation	semdata.html#addPragmaComputation,PContext,PNode	proc addPragmaComputation(c: PContext; n: PNode)		341
nim	addConverter	semdata.html#addConverter,PContext,LazySym	proc addConverter(c: PContext; conv: LazySym)		351
nim	addConverterDef	semdata.html#addConverterDef,PContext,LazySym	proc addConverterDef(c: PContext; conv: LazySym)		356
nim	addPureEnum	semdata.html#addPureEnum,PContext,LazySym	proc addPureEnum(c: PContext; e: LazySym)		361
nim	addPattern	semdata.html#addPattern,PContext,LazySym	proc addPattern(c: PContext; p: LazySym)		367
nim	exportSym	semdata.html#exportSym,PContext,PSym	proc exportSym(c: PContext; s: PSym)		374
nim	reexportSym	semdata.html#reexportSym,PContext,PSym	proc reexportSym(c: PContext; s: PSym)		379
nim	newLib	semdata.html#newLib,TLibKind	proc newLib(kind: TLibKind): PLib		384
nim	addToLib	semdata.html#addToLib,PLib,PSym	proc addToLib(lib: PLib; sym: PSym)		388
nim	newTypeS	semdata.html#newTypeS,TTypeKind,PContext	proc newTypeS(kind: TTypeKind; c: PContext): PType		393
nim	makePtrType	semdata.html#makePtrType,PSym,PType,IdGenerator	proc makePtrType(owner: PSym; baseType: PType; idgen: IdGenerator): PType		396
nim	makePtrType	semdata.html#makePtrType,PContext,PType	proc makePtrType(c: PContext; baseType: PType): PType		400
nim	makeTypeWithModifier	semdata.html#makeTypeWithModifier,PContext,TTypeKind,PType	proc makeTypeWithModifier(c: PContext; modifier: TTypeKind; baseType: PType): PType		403
nim	makeVarType	semdata.html#makeVarType,PContext,PType	proc makeVarType(c: PContext; baseType: PType; kind = tyVar): PType		414
nim	makeVarType	semdata.html#makeVarType,PSym,PType,IdGenerator	proc makeVarType(owner: PSym; baseType: PType; idgen: IdGenerator; kind = tyVar): PType		421
nim	makeTypeSymNode	semdata.html#makeTypeSymNode,PContext,PType,TLineInfo	proc makeTypeSymNode(c: PContext; typ: PType; info: TLineInfo): PNode		428
nim	makeTypeFromExpr	semdata.html#makeTypeFromExpr,PContext,PNode	proc makeTypeFromExpr(c: PContext; n: PNode): PType		437
nim	newTypeWithSons	semdata.html#newTypeWithSons,PSym,TTypeKind,seq[PType],IdGenerator	proc newTypeWithSons(owner: PSym; kind: TTypeKind; sons: seq[PType];\n                idgen: IdGenerator): PType		442
nim	newTypeWithSons	semdata.html#newTypeWithSons,PContext,TTypeKind,seq[PType]	proc newTypeWithSons(c: PContext; kind: TTypeKind; sons: seq[PType]): PType		447
nim	makeStaticExpr	semdata.html#makeStaticExpr,PContext,PNode	proc makeStaticExpr(c: PContext; n: PNode): PNode		452
nim	makeAndType	semdata.html#makeAndType,PContext,PType,PType	proc makeAndType(c: PContext; t1, t2: PType): PType		458
nim	makeOrType	semdata.html#makeOrType,PContext,PType,PType	proc makeOrType(c: PContext; t1, t2: PType): PType		466
nim	makeNotType	semdata.html#makeNotType,PContext,PType	proc makeNotType(c: PContext; t1: PType): PType		483
nim	makeRangeWithStaticExpr	semdata.html#makeRangeWithStaticExpr,PContext,PNode	proc makeRangeWithStaticExpr(c: PContext; n: PNode): PType		494
nim	rangeHasUnresolvedStatic	semdata.html#rangeHasUnresolvedStatic.t,PType	template rangeHasUnresolvedStatic(t: PType): bool		503
nim	errorType	semdata.html#errorType,PContext	proc errorType(c: PContext): PType		506
nim	errorNode	semdata.html#errorNode,PContext,PNode	proc errorNode(c: PContext; n: PNode): PNode		511
nim	localErrorNode	semdata.html#localErrorNode.t,PContext,PNode,TLineInfo,TMsgKind,string	template localErrorNode(c: PContext; n: PNode; info: TLineInfo; msg: TMsgKind;\n               arg: string): PNode		516
nim	localErrorNode	semdata.html#localErrorNode.t,PContext,PNode,TLineInfo,string	template localErrorNode(c: PContext; n: PNode; info: TLineInfo; arg: string): PNode		520
nim	localErrorNode	semdata.html#localErrorNode.t,PContext,PNode,TMsgKind,string	template localErrorNode(c: PContext; n: PNode; msg: TMsgKind; arg: string): PNode		524
nim	localErrorNode	semdata.html#localErrorNode.t,PContext,PNode,string	template localErrorNode(c: PContext; n: PNode; arg: string): PNode		529
nim	fillTypeS	semdata.html#fillTypeS,PType,TTypeKind,PContext	proc fillTypeS(dest: PType; kind: TTypeKind; c: PContext)		534
nim	makeRangeType	semdata.html#makeRangeType,PContext,BiggestInt,BiggestInt,TLineInfo,PType	proc makeRangeType(c: PContext; first, last: BiggestInt; info: TLineInfo;\n              intType: PType = nil): PType		539
nim	markIndirect	semdata.html#markIndirect,PContext,PSym	proc markIndirect(c: PContext; s: PSym)		549
nim	illFormedAst	semdata.html#illFormedAst,PNode,ConfigRef	proc illFormedAst(n: PNode; conf: ConfigRef)		554
nim	illFormedAstLocal	semdata.html#illFormedAstLocal,PNode,ConfigRef	proc illFormedAstLocal(n: PNode; conf: ConfigRef)		557
nim	checkSonsLen	semdata.html#checkSonsLen,PNode,int,ConfigRef	proc checkSonsLen(n: PNode; length: int; conf: ConfigRef)		560
nim	checkMinSonsLen	semdata.html#checkMinSonsLen,PNode,int,ConfigRef	proc checkMinSonsLen(n: PNode; length: int; conf: ConfigRef)		563
nim	isTopLevel	semdata.html#isTopLevel,PContext	proc isTopLevel(c: PContext): bool		566
nim	isTopLevelInsideDeclaration	semdata.html#isTopLevelInsideDeclaration,PContext,PSym	proc isTopLevelInsideDeclaration(c: PContext; sym: PSym): bool		569
nim	pushCaseContext	semdata.html#pushCaseContext,PContext,PNode	proc pushCaseContext(c: PContext; caseNode: PNode)		573
nim	popCaseContext	semdata.html#popCaseContext,PContext	proc popCaseContext(c: PContext)		576
nim	setCaseContextIdx	semdata.html#setCaseContextIdx,PContext,int	proc setCaseContextIdx(c: PContext; idx: int)		579
nim	addExport	semdata.html#addExport.t,PContext,PSym	template addExport(c: PContext; s: PSym)		582
nim	storeRodNode	semdata.html#storeRodNode,PContext,PNode	proc storeRodNode(c: PContext; n: PNode)		586
nim	addToGenericProcCache	semdata.html#addToGenericProcCache,PContext,PSym,PInstantiation	proc addToGenericProcCache(c: PContext; s: PSym; inst: PInstantiation)		590
nim	addToGenericCache	semdata.html#addToGenericCache,PContext,PSym,PType	proc addToGenericCache(c: PContext; s: PSym; inst: PType)		595
nim	sealRodFile	semdata.html#sealRodFile,PContext	proc sealRodFile(c: PContext)		600
nim	rememberExpansion	semdata.html#rememberExpansion,PContext,TLineInfo,PSym	proc rememberExpansion(c: PContext; info: TLineInfo; expandedSym: PSym)		608
nimgrp	makeptrtype	semdata.html#makePtrType-procs-all	proc		396
nimgrp	makevartype	semdata.html#makeVarType-procs-all	proc		414
nimgrp	newtypewithsons	semdata.html#newTypeWithSons-procs-all	proc		442
nimgrp	localerrornode	semdata.html#localErrorNode-templates-all	template		516
