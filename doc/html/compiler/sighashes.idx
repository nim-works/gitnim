nimTitle	sighashes	sighashes.html	module sighashes		0
nim	CoProc	sighashes.html#CoProc	ConsiderFlag.CoProc		38
nim	CoType	sighashes.html#CoType	ConsiderFlag.CoType		38
nim	CoOwnerSig	sighashes.html#CoOwnerSig	ConsiderFlag.CoOwnerSig		38
nim	CoIgnoreRange	sighashes.html#CoIgnoreRange	ConsiderFlag.CoIgnoreRange		38
nim	CoConsiderOwned	sighashes.html#CoConsiderOwned	ConsiderFlag.CoConsiderOwned		38
nim	CoDistinct	sighashes.html#CoDistinct	ConsiderFlag.CoDistinct		38
nim	CoHashTypeInsideNode	sighashes.html#CoHashTypeInsideNode	ConsiderFlag.CoHashTypeInsideNode		38
nim	ConsiderFlag	sighashes.html#ConsiderFlag	enum ConsiderFlag		38
nim	hashType	sighashes.html#hashType,PType,ConfigRef,set[ConsiderFlag]	proc hashType(t: PType; conf: ConfigRef; flags: set[ConsiderFlag] = {CoType}): SigHash		262
nim	hashNonProc	sighashes.html#hashNonProc,PSym	proc hashNonProc(s: PSym): SigHash		291
nim	hashOwner	sighashes.html#hashOwner,PSym	proc hashOwner(s: PSym): SigHash		307
nim	sigHash	sighashes.html#sigHash,PSym,ConfigRef	proc sigHash(s: PSym; conf: ConfigRef): SigHash		320
nim	symBodyDigest	sighashes.html#symBodyDigest,ModuleGraph,PSym	proc symBodyDigest(graph: ModuleGraph; sym: PSym): SigHash		326
nim	idOrSig	sighashes.html#idOrSig,PSym,string,CountTable[SigHash],ConfigRef	proc idOrSig(s: PSym; currentModule: string; sigCollisions: var CountTable[SigHash];\n        conf: ConfigRef): Rope		395
