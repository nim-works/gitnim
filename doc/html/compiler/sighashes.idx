nimTitle	sighashes	sighashes.html	module compiler/sighashes		0
nim	CoProc	sighashes.html#CoProc	ConsiderFlag.CoProc		36
nim	CoType	sighashes.html#CoType	ConsiderFlag.CoType		36
nim	CoOwnerSig	sighashes.html#CoOwnerSig	ConsiderFlag.CoOwnerSig		36
nim	CoIgnoreRange	sighashes.html#CoIgnoreRange	ConsiderFlag.CoIgnoreRange		36
nim	CoConsiderOwned	sighashes.html#CoConsiderOwned	ConsiderFlag.CoConsiderOwned		36
nim	CoDistinct	sighashes.html#CoDistinct	ConsiderFlag.CoDistinct		36
nim	CoHashTypeInsideNode	sighashes.html#CoHashTypeInsideNode	ConsiderFlag.CoHashTypeInsideNode		36
nim	ConsiderFlag	sighashes.html#ConsiderFlag	enum ConsiderFlag		36
nim	hashType	sighashes.html#hashType,PType,set[ConsiderFlag]	proc hashType(t: PType; flags: set[ConsiderFlag] = {CoType}): SigHash		260
nim	hashProc	sighashes.html#hashProc,PSym	proc hashProc(s: PSym): SigHash		269
nim	hashNonProc	sighashes.html#hashNonProc,PSym	proc hashNonProc(s: PSym): SigHash		289
nim	hashOwner	sighashes.html#hashOwner,PSym	proc hashOwner(s: PSym): SigHash		305
nim	sigHash	sighashes.html#sigHash,PSym	proc sigHash(s: PSym): SigHash		318
nim	symBodyDigest	sighashes.html#symBodyDigest,ModuleGraph,PSym	proc symBodyDigest(graph: ModuleGraph; sym: PSym): SigHash		324
nim	idOrSig	sighashes.html#idOrSig,PSym,string,CountTable[SigHash]	proc idOrSig(s: PSym; currentModule: string; sigCollisions: var CountTable[SigHash]): Rope		393
