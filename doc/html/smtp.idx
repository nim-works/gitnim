nimTitle	smtp	smtp.html	module src/smtp		0
nim	Message	smtp.html#Message	object Message		57
nim	ReplyError	smtp.html#ReplyError	object ReplyError		64
nim	Smtp	smtp.html#Smtp	type Smtp		72
nim	AsyncSmtp	smtp.html#AsyncSmtp	type AsyncSmtp		73
nim	debugSend	smtp.html#debugSend,AsyncSmtp,string	proc debugSend(smtp: AsyncSmtp; cmd: string): owned(Future[void])		80
nim	debugSend	smtp.html#debugSend,Smtp,string	proc debugSend(smtp: Smtp; cmd: string)		80
nim	debugRecv	smtp.html#debugRecv,AsyncSmtp	proc debugRecv(smtp: AsyncSmtp): Future[string]		95
nim	debugRecv	smtp.html#debugRecv,Smtp	proc debugRecv(smtp: Smtp): string		95
nim	createMessage	smtp.html#createMessage,string,string,seq[string],seq[string],openArray[tuple[string,string]]	proc createMessage(mSubject, mBody: string; mTo, mCc: seq[string];\n              otherHeaders: openArray[tuple[name, value: string]]): Message		129
nim	createMessage	smtp.html#createMessage,string,string,seq[string],seq[string]	proc createMessage(mSubject, mBody: string; mTo, mCc: seq[string] = @[]): Message		148
nim	`$`	smtp.html#$,Message	proc `$`(msg: Message): string		164
nim	newSmtp	smtp.html#newSmtp,SslContext	proc newSmtp(useSsl = false; debug = false; sslContext: SslContext = nil): Smtp		179
nim	newAsyncSmtp	smtp.html#newAsyncSmtp,SslContext	proc newAsyncSmtp(useSsl = false; debug = false; sslContext: SslContext = nil): AsyncSmtp		194
nim	checkReply	smtp.html#checkReply,AsyncSmtp,string	proc checkReply(smtp: AsyncSmtp; reply: string): owned(Future[void])		217
nim	checkReply	smtp.html#checkReply,Smtp,string	proc checkReply(smtp: Smtp; reply: string)		217
nim	helo	smtp.html#helo,AsyncSmtp,string	proc helo(smtp: AsyncSmtp; helo: string = "HELO"): owned(Future[void])		231
nim	helo	smtp.html#helo,Smtp,string	proc helo(smtp: Smtp; helo: string = "HELO")		231
nim	lhlo	smtp.html#lhlo,AsyncSmtp	proc lhlo(smtp: AsyncSmtp): owned(Future[void])		236
nim	lhlo	smtp.html#lhlo,Smtp	proc lhlo(smtp: Smtp)		236
nim	ehlo	smtp.html#ehlo,AsyncSmtp	proc ehlo(smtp: AsyncSmtp): Future[bool]		251
nim	ehlo	smtp.html#ehlo,Smtp	proc ehlo(smtp: Smtp): bool		251
nim	connect	smtp.html#connect,AsyncSmtp,string,Port,bool	proc connect(smtp: AsyncSmtp; address: string; port: Port; helo: bool = true): owned(\n    Future[void])		256
nim	connect	smtp.html#connect,Smtp,string,Port,bool	proc connect(smtp: Smtp; address: string; port: Port; helo: bool = true)		257
nim	dial	smtp.html#dial,string,Port,SslContext,bool	proc dial(address: string; port: Port; useSsl = false; debug = false;\n     sslContext: SslContext = nil; helo: bool = true): Smtp		273
nim	dialAsync	smtp.html#dialAsync,string,Port,SslContext,bool	proc dialAsync(address: string; port: Port; useSsl = false; debug = false;\n          sslContext: SslContext = nil; helo: bool = true): Future[AsyncSmtp]		277
nim	startTls	smtp.html#startTls,AsyncSmtp,SslContext	proc startTls(smtp: AsyncSmtp; sslContext: SslContext = nil): owned(Future[void])		281
nim	startTls	smtp.html#startTls,Smtp,SslContext	proc startTls(smtp: Smtp; sslContext: SslContext = nil)		281
nim	auth	smtp.html#auth,AsyncSmtp,string,string	proc auth(smtp: AsyncSmtp; username, password: string): owned(Future[void])		297
nim	auth	smtp.html#auth,Smtp,string,string	proc auth(smtp: Smtp; username, password: string)		297
nim	sendMail	smtp.html#sendMail,AsyncSmtp,string,seq[string],string	proc sendMail(smtp: AsyncSmtp; fromAddr: string; toAddrs: seq[string]; msg: string): owned(\n    Future[void])		311
nim	sendMail	smtp.html#sendMail,Smtp,string,seq[string],string	proc sendMail(smtp: Smtp; fromAddr: string; toAddrs: seq[string]; msg: string)		312
nim	close	smtp.html#close,AsyncSmtp	proc close(smtp: AsyncSmtp): owned(Future[void])		335
nim	close	smtp.html#close,Smtp	proc close(smtp: Smtp)		335
nimgrp	auth	smtp.html#auth-procs-all	proc		297
nimgrp	close	smtp.html#close-procs-all	proc		335
nimgrp	helo	smtp.html#helo-procs-all	proc		231
nimgrp	lhlo	smtp.html#lhlo-procs-all	proc		236
nimgrp	checkreply	smtp.html#checkReply-procs-all	proc		217
nimgrp	connect	smtp.html#connect-procs-all	proc		256
nimgrp	createmessage	smtp.html#createMessage-procs-all	proc		129
nimgrp	debugsend	smtp.html#debugSend-procs-all	proc		80
nimgrp	ehlo	smtp.html#ehlo-procs-all	proc		251
nimgrp	sendmail	smtp.html#sendMail-procs-all	proc		311
nimgrp	starttls	smtp.html#startTls-procs-all	proc		281
nimgrp	debugrecv	smtp.html#debugRecv-procs-all	proc		95
