AtomType	sysatomics.html#AtomType	sysatomics: AtomType	
AtomMemModel	sysatomics.html#AtomMemModel	sysatomics: AtomMemModel	
ATOMIC_RELAXED	sysatomics.html#ATOMIC_RELAXED	sysatomics: ATOMIC_RELAXED	
ATOMIC_CONSUME	sysatomics.html#ATOMIC_CONSUME	sysatomics: ATOMIC_CONSUME	
ATOMIC_ACQUIRE	sysatomics.html#ATOMIC_ACQUIRE	sysatomics: ATOMIC_ACQUIRE	
ATOMIC_RELEASE	sysatomics.html#ATOMIC_RELEASE	sysatomics: ATOMIC_RELEASE	
ATOMIC_ACQ_REL	sysatomics.html#ATOMIC_ACQ_REL	sysatomics: ATOMIC_ACQ_REL	
ATOMIC_SEQ_CST	sysatomics.html#ATOMIC_SEQ_CST	sysatomics: ATOMIC_SEQ_CST	
atomicLoadN	sysatomics.html#atomicLoadN,ptr.T,AtomMemModel	sysatomics: atomicLoadN[T: AtomType](p: ptr T; mem: AtomMemModel): T	
atomicLoad	sysatomics.html#atomicLoad,ptr.T,ptr.T,AtomMemModel	sysatomics: atomicLoad[T: AtomType](p, ret: ptr T; mem: AtomMemModel)	
atomicStoreN	sysatomics.html#atomicStoreN,ptr.T,T,AtomMemModel	sysatomics: atomicStoreN[T: AtomType](p: ptr T; val: T; mem: AtomMemModel)	
atomicStore	sysatomics.html#atomicStore,ptr.T,ptr.T,AtomMemModel	sysatomics: atomicStore[T: AtomType](p, val: ptr T; mem: AtomMemModel)	
atomicExchangeN	sysatomics.html#atomicExchangeN,ptr.T,T,AtomMemModel	sysatomics: atomicExchangeN[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicExchange	sysatomics.html#atomicExchange,ptr.T,ptr.T,ptr.T,AtomMemModel	sysatomics: atomicExchange[T: AtomType](p, val, ret: ptr T; mem: AtomMemModel)	
atomicCompareExchangeN	sysatomics.html#atomicCompareExchangeN,ptr.T,ptr.T,T,bool,AtomMemModel,AtomMemModel	sysatomics: atomicCompareExchangeN[T: AtomType](p, expected: ptr T; desired: T; weak: bool;\n                                    success_memmodel: AtomMemModel;\n                                    failure_memmodel: AtomMemModel): bool	
atomicCompareExchange	sysatomics.html#atomicCompareExchange,ptr.T,ptr.T,ptr.T,bool,AtomMemModel,AtomMemModel	sysatomics: atomicCompareExchange[T: AtomType](p, expected, desired: ptr T; weak: bool;\n                                   success_memmodel: AtomMemModel;\n                                   failure_memmodel: AtomMemModel): bool	
atomicAddFetch	sysatomics.html#atomicAddFetch,ptr.T,T,AtomMemModel	sysatomics: atomicAddFetch[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicSubFetch	sysatomics.html#atomicSubFetch,ptr.T,T,AtomMemModel	sysatomics: atomicSubFetch[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicOrFetch	sysatomics.html#atomicOrFetch,ptr.T,T,AtomMemModel	sysatomics: atomicOrFetch[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicAndFetch	sysatomics.html#atomicAndFetch,ptr.T,T,AtomMemModel	sysatomics: atomicAndFetch[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicXorFetch	sysatomics.html#atomicXorFetch,ptr.T,T,AtomMemModel	sysatomics: atomicXorFetch[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicNandFetch	sysatomics.html#atomicNandFetch,ptr.T,T,AtomMemModel	sysatomics: atomicNandFetch[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicFetchAdd	sysatomics.html#atomicFetchAdd,ptr.T,T,AtomMemModel	sysatomics: atomicFetchAdd[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicFetchSub	sysatomics.html#atomicFetchSub,ptr.T,T,AtomMemModel	sysatomics: atomicFetchSub[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicFetchOr	sysatomics.html#atomicFetchOr,ptr.T,T,AtomMemModel	sysatomics: atomicFetchOr[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicFetchAnd	sysatomics.html#atomicFetchAnd,ptr.T,T,AtomMemModel	sysatomics: atomicFetchAnd[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicFetchXor	sysatomics.html#atomicFetchXor,ptr.T,T,AtomMemModel	sysatomics: atomicFetchXor[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicFetchNand	sysatomics.html#atomicFetchNand,ptr.T,T,AtomMemModel	sysatomics: atomicFetchNand[T: AtomType](p: ptr T; val: T; mem: AtomMemModel): T	
atomicTestAndSet	sysatomics.html#atomicTestAndSet,pointer,AtomMemModel	sysatomics: atomicTestAndSet(p: pointer; mem: AtomMemModel): bool	
atomicClear	sysatomics.html#atomicClear,pointer,AtomMemModel	sysatomics: atomicClear(p: pointer; mem: AtomMemModel)	
atomicThreadFence	sysatomics.html#atomicThreadFence,AtomMemModel	sysatomics: atomicThreadFence(mem: AtomMemModel)	
atomicSignalFence	sysatomics.html#atomicSignalFence,AtomMemModel	sysatomics: atomicSignalFence(mem: AtomMemModel)	
atomicAlwaysLockFree	sysatomics.html#atomicAlwaysLockFree,int,pointer	sysatomics: atomicAlwaysLockFree(size: int; p: pointer): bool	
atomicIsLockFree	sysatomics.html#atomicIsLockFree,int,pointer	sysatomics: atomicIsLockFree(size: int; p: pointer): bool	
fence	sysatomics.html#fence.t	sysatomics: fence()	
atomicInc	sysatomics.html#atomicInc,int,int	sysatomics: atomicInc(memLoc: var int; x: int = 1): int	
atomicDec	sysatomics.html#atomicDec,int,int	sysatomics: atomicDec(memLoc: var int; x: int = 1): int	
cas	sysatomics.html#cas,ptr.T,T,T	sysatomics: cas[T: bool | int | ptr](p: ptr T; oldValue, newValue: T): bool	
cpuRelax	sysatomics.html#cpuRelax	sysatomics: cpuRelax()	
