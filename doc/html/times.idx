mJan	times.html#mJan	Month.mJan	
mFeb	times.html#mFeb	Month.mFeb	
mMar	times.html#mMar	Month.mMar	
mApr	times.html#mApr	Month.mApr	
mMay	times.html#mMay	Month.mMay	
mJun	times.html#mJun	Month.mJun	
mJul	times.html#mJul	Month.mJul	
mAug	times.html#mAug	Month.mAug	
mSep	times.html#mSep	Month.mSep	
mOct	times.html#mOct	Month.mOct	
mNov	times.html#mNov	Month.mNov	
mDec	times.html#mDec	Month.mDec	
Month	times.html#Month	times: Month	
dMon	times.html#dMon	WeekDay.dMon	
dTue	times.html#dTue	WeekDay.dTue	
dWed	times.html#dWed	WeekDay.dWed	
dThu	times.html#dThu	WeekDay.dThu	
dFri	times.html#dFri	WeekDay.dFri	
dSat	times.html#dSat	WeekDay.dSat	
dSun	times.html#dSun	WeekDay.dSun	
WeekDay	times.html#WeekDay	times: WeekDay	
MonthdayRange	times.html#MonthdayRange	times: MonthdayRange	
HourRange	times.html#HourRange	times: HourRange	
MinuteRange	times.html#MinuteRange	times: MinuteRange	
SecondRange	times.html#SecondRange	times: SecondRange	
YeardayRange	times.html#YeardayRange	times: YeardayRange	
NanosecondRange	times.html#NanosecondRange	times: NanosecondRange	
Time	times.html#Time	times: Time	
DateTime	times.html#DateTime	times: DateTime	
Duration	times.html#Duration	times: Duration	
Nanoseconds	times.html#Nanoseconds	TimeUnit.Nanoseconds	
Microseconds	times.html#Microseconds	TimeUnit.Microseconds	
Milliseconds	times.html#Milliseconds	TimeUnit.Milliseconds	
Seconds	times.html#Seconds	TimeUnit.Seconds	
Minutes	times.html#Minutes	TimeUnit.Minutes	
Hours	times.html#Hours	TimeUnit.Hours	
Days	times.html#Days	TimeUnit.Days	
Weeks	times.html#Weeks	TimeUnit.Weeks	
Months	times.html#Months	TimeUnit.Months	
Years	times.html#Years	TimeUnit.Years	
TimeUnit	times.html#TimeUnit	times: TimeUnit	
FixedTimeUnit	times.html#FixedTimeUnit	times: FixedTimeUnit	
TimeInterval	times.html#TimeInterval	times: TimeInterval	
Timezone	times.html#Timezone	times: Timezone	
ZonedTime	times.html#ZonedTime	times: ZonedTime	
DurationParts	times.html#DurationParts	times: DurationParts	
TimeIntervalParts	times.html#TimeIntervalParts	times: TimeIntervalParts	
convert	times.html#convert,FixedTimeUnit,FixedTimeUnit,T	times: convert[T: SomeInteger](unitFrom, unitTo: FixedTimeUnit; quantity: T): T	
isLeapYear	times.html#isLeapYear,int	times: isLeapYear(year: int): bool	
getDaysInMonth	times.html#getDaysInMonth,Month,int	times: getDaysInMonth(month: Month; year: int): int	
getDayOfYear	times.html#getDayOfYear,MonthdayRange,Month,int	times: getDayOfYear(monthday: MonthdayRange; month: Month; year: int): YeardayRange	
getDayOfWeek	times.html#getDayOfWeek,MonthdayRange,Month,int	times: getDayOfWeek(monthday: MonthdayRange; month: Month; year: int): WeekDay	
getDaysInYear	times.html#getDaysInYear,int	times: getDaysInYear(year: int): int	
DurationZero	times.html#DurationZero	times: DurationZero	
initDuration	times.html#initDuration,int64,int64,int64,int64,int64,int64,int64,int64	times: initDuration(nanoseconds, microseconds, milliseconds, seconds, minutes, hours,\n             days, weeks: int64 = 0): Duration	
inWeeks	times.html#inWeeks,Duration	times: inWeeks(dur: Duration): int64	
inDays	times.html#inDays,Duration	times: inDays(dur: Duration): int64	
inHours	times.html#inHours,Duration	times: inHours(dur: Duration): int64	
inMinutes	times.html#inMinutes,Duration	times: inMinutes(dur: Duration): int64	
inSeconds	times.html#inSeconds,Duration	times: inSeconds(dur: Duration): int64	
inMilliseconds	times.html#inMilliseconds,Duration	times: inMilliseconds(dur: Duration): int64	
inMicroseconds	times.html#inMicroseconds,Duration	times: inMicroseconds(dur: Duration): int64	
inNanoseconds	times.html#inNanoseconds,Duration	times: inNanoseconds(dur: Duration): int64	
toParts	times.html#toParts,Duration	times: toParts(dur: Duration): DurationParts	
`$`	times.html#$,Duration	times: `$`(dur: Duration): string	
`+`	times.html#+,Duration,Duration	times: `+`(a, b: Duration): Duration	
`-`	times.html#-,Duration,Duration	times: `-`(a, b: Duration): Duration	
`-`	times.html#-,Duration	times: `-`(a: Duration): Duration	
`&lt;`	times.html#<,Duration,Duration	times: `&lt;`(a, b: Duration): bool	
`&lt;=`	times.html#<=,Duration,Duration	times: `&lt;=`(a, b: Duration): bool	
`==`	times.html#==,Duration,Duration	times: `==`(a, b: Duration): bool	
`*`	times.html#*,int64,Duration	times: `*`(a: int64; b: Duration): Duration	
`*`	times.html#*,Duration,int64	times: `*`(a: Duration; b: int64): Duration	
`+=`	times.html#+=,Duration,Duration	times: `+=`(d1: var Duration; d2: Duration)	
`-=`	times.html#-=,Duration,Duration	times: `-=`(dt: var Duration; ti: Duration)	
`*=`	times.html#*=,Duration,int	times: `*=`(a: var Duration; b: int)	
`div`	times.html#div,Duration,int64	times: `div`(a: Duration; b: int64): Duration	
high	times.html#high,typedesc[Duration]	times: high(typ: typedesc[Duration]): Duration	
low	times.html#low,typedesc[Duration]	times: low(typ: typedesc[Duration]): Duration	
abs	times.html#abs,Duration	times: abs(a: Duration): Duration	
initTime	times.html#initTime,int64,NanosecondRange	times: initTime(unix: int64; nanosecond: NanosecondRange): Time	
nanosecond	times.html#nanosecond,Time	times: nanosecond(time: Time): NanosecondRange	
fromUnix	times.html#fromUnix,int64	times: fromUnix(unix: int64): Time	
toUnix	times.html#toUnix,Time	times: toUnix(t: Time): int64	
fromUnixFloat	times.html#fromUnixFloat,float	times: fromUnixFloat(seconds: float): Time	
toUnixFloat	times.html#toUnixFloat,Time	times: toUnixFloat(t: Time): float	
fromWinTime	times.html#fromWinTime,int64	times: fromWinTime(win: int64): Time	
toWinTime	times.html#toWinTime,Time	times: toWinTime(t: Time): int64	
getTime	times.html#getTime	times: getTime(): Time	
`-`	times.html#-,Time,Time	times: `-`(a, b: Time): Duration	
`+`	times.html#+,Time,Duration	times: `+`(a: Time; b: Duration): Time	
`-`	times.html#-,Time,Duration	times: `-`(a: Time; b: Duration): Time	
`&lt;`	times.html#<,Time,Time	times: `&lt;`(a, b: Time): bool	
`&lt;=`	times.html#<=,Time,Time	times: `&lt;=`(a, b: Time): bool	
`==`	times.html#==,Time,Time	times: `==`(a, b: Time): bool	
`+=`	times.html#+=,Time,Duration	times: `+=`(t: var Time; b: Duration)	
`-=`	times.html#-=,Time,Duration	times: `-=`(t: var Time; b: Duration)	
high	times.html#high,typedesc[Time]	times: high(typ: typedesc[Time]): Time	
low	times.html#low,typedesc[Time]	times: low(typ: typedesc[Time]): Time	
nanosecond	times.html#nanosecond,DateTime	times: nanosecond(dt: DateTime): NanosecondRange	
second	times.html#second,DateTime	times: second(dt: DateTime): SecondRange	
minute	times.html#minute,DateTime	times: minute(dt: DateTime): MinuteRange	
hour	times.html#hour,DateTime	times: hour(dt: DateTime): HourRange	
monthday	times.html#monthday,DateTime	times: monthday(dt: DateTime): MonthdayRange	
month	times.html#month,DateTime	times: month(dt: DateTime): Month	
year	times.html#year,DateTime	times: year(dt: DateTime): int	
weekday	times.html#weekday,DateTime	times: weekday(dt: DateTime): WeekDay	
yearday	times.html#yearday,DateTime	times: yearday(dt: DateTime): YeardayRange	
isDst	times.html#isDst,DateTime	times: isDst(dt: DateTime): bool	
timezone	times.html#timezone,DateTime	times: timezone(dt: DateTime): Timezone	
utcOffset	times.html#utcOffset,DateTime	times: utcOffset(dt: DateTime): int	
isInitialized	times.html#isInitialized,DateTime	times: isInitialized(dt: DateTime): bool	
isLeapDay	times.html#isLeapDay,DateTime	times: isLeapDay(dt: DateTime): bool	
toTime	times.html#toTime,DateTime	times: toTime(dt: DateTime): Time	
newTimezone	times.html#newTimezone,string,proc(Time),proc(Time)	times: newTimezone(name: string; zonedTimeFromTimeImpl: proc (time: Time): ZonedTime {.\n    tags: [], raises: [], gcsafe, locks: 0.}; zonedTimeFromAdjTimeImpl: proc (\n    adjTime: Time): ZonedTime {.tags: [], raises: [], gcsafe, locks: 0.}): owned\n    Timezone	
name	times.html#name,Timezone	times: name(zone: Timezone): string	
zonedTimeFromTime	times.html#zonedTimeFromTime,Timezone,Time	times: zonedTimeFromTime(zone: Timezone; time: Time): ZonedTime	
zonedTimeFromAdjTime	times.html#zonedTimeFromAdjTime,Timezone,Time	times: zonedTimeFromAdjTime(zone: Timezone; adjTime: Time): ZonedTime	
`$`	times.html#$,Timezone	times: `$`(zone: Timezone): string	
`==`	times.html#==,Timezone,Timezone	times: `==`(zone1, zone2: Timezone): bool	
inZone	times.html#inZone,Time,Timezone	times: inZone(time: Time; zone: Timezone): DateTime	
inZone	times.html#inZone,DateTime,Timezone	times: inZone(dt: DateTime; zone: Timezone): DateTime	
utc	times.html#utc	times: utc(): Timezone	
local	times.html#local	times: local(): Timezone	
utc	times.html#utc,DateTime	times: utc(dt: DateTime): DateTime	
local	times.html#local,DateTime	times: local(dt: DateTime): DateTime	
utc	times.html#utc,Time	times: utc(t: Time): DateTime	
local	times.html#local,Time	times: local(t: Time): DateTime	
now	times.html#now	times: now(): DateTime	
initDateTime	times.html#initDateTime,MonthdayRange,Month,int,HourRange,MinuteRange,SecondRange,NanosecondRange,Timezone	times: initDateTime(monthday: MonthdayRange; month: Month; year: int; hour: HourRange;\n             minute: MinuteRange; second: SecondRange;\n             nanosecond: NanosecondRange; zone: Timezone = local()): DateTime	
initDateTime	times.html#initDateTime,MonthdayRange,Month,int,HourRange,MinuteRange,SecondRange,Timezone	times: initDateTime(monthday: MonthdayRange; month: Month; year: int; hour: HourRange;\n             minute: MinuteRange; second: SecondRange; zone: Timezone = local()): DateTime	
`+`	times.html#+,DateTime,Duration	times: `+`(dt: DateTime; dur: Duration): DateTime	
`-`	times.html#-,DateTime,Duration	times: `-`(dt: DateTime; dur: Duration): DateTime	
`-`	times.html#-,DateTime,DateTime	times: `-`(dt1, dt2: DateTime): Duration	
`&lt;`	times.html#<,DateTime,DateTime	times: `&lt;`(a, b: DateTime): bool	
`&lt;=`	times.html#<=,DateTime,DateTime	times: `&lt;=`(a, b: DateTime): bool	
`==`	times.html#==,DateTime,DateTime	times: `==`(a, b: DateTime): bool	
`+=`	times.html#+=,DateTime,Duration	times: `+=`(a: var DateTime; b: Duration)	
`-=`	times.html#-=,DateTime,Duration	times: `-=`(a: var DateTime; b: Duration)	
getDateStr	times.html#getDateStr	times: getDateStr(dt = now()): string	
getClockStr	times.html#getClockStr	times: getClockStr(dt = now()): string	
DateTimeLocale	times.html#DateTimeLocale	times: DateTimeLocale	
TimeFormat	times.html#TimeFormat	times: TimeFormat	
TimeParseError	times.html#TimeParseError	times: TimeParseError	
TimeFormatParseError	times.html#TimeFormatParseError	times: TimeFormatParseError	
DefaultLocale	times.html#DefaultLocale	times: DefaultLocale	
`$`	times.html#$,TimeFormat	times: `$`(f: TimeFormat): string	
initTimeFormat	times.html#initTimeFormat,string	times: initTimeFormat(format: string): TimeFormat	
format	times.html#format,DateTime,TimeFormat,DateTimeLocale	times: format(dt: DateTime; f: TimeFormat; loc: DateTimeLocale = DefaultLocale): string	
format	times.html#format,DateTime,string,DateTimeLocale	times: format(dt: DateTime; f: string; loc: DateTimeLocale = DefaultLocale): string	
format	times.html#format,DateTime,static[string]	times: format(dt: DateTime; f: static[string]): string	
formatValue	times.html#formatValue,string,DateTime,string	times: formatValue(result: var string; value: DateTime; specifier: string)	
format	times.html#format,Time,string,Timezone	times: format(time: Time; f: string; zone: Timezone = local()): string	
format	times.html#format,Time,static[string],Timezone	times: format(time: Time; f: static[string]; zone: Timezone = local()): string	
formatValue	times.html#formatValue.t,string,Time,string	times: formatValue(result: var string; value: Time; specifier: string)	
parse	times.html#parse,string,TimeFormat,Timezone,DateTimeLocale	times: parse(input: string; f: TimeFormat; zone: Timezone = local();\n      loc: DateTimeLocale = DefaultLocale): DateTime	
parse	times.html#parse,string,string,Timezone,DateTimeLocale	times: parse(input, f: string; tz: Timezone = local();\n      loc: DateTimeLocale = DefaultLocale): DateTime	
parse	times.html#parse,string,static[string],Timezone,DateTimeLocale	times: parse(input: string; f: static[string]; zone: Timezone = local();\n      loc: DateTimeLocale = DefaultLocale): DateTime	
parseTime	times.html#parseTime,string,string,Timezone	times: parseTime(input, f: string; zone: Timezone): Time	
parseTime	times.html#parseTime,string,static[string],Timezone	times: parseTime(input: string; f: static[string]; zone: Timezone): Time	
`$`	times.html#$,DateTime	times: `$`(dt: DateTime): string	
`$`	times.html#$,Time	times: `$`(time: Time): string	
initTimeInterval	times.html#initTimeInterval,int,int,int,int,int,int,int,int,int,int	times: initTimeInterval(nanoseconds, microseconds, milliseconds, seconds, minutes,\n                 hours, days, weeks, months, years: int = 0): TimeInterval	
`+`	times.html#+,TimeInterval,TimeInterval	times: `+`(ti1, ti2: TimeInterval): TimeInterval	
`-`	times.html#-,TimeInterval	times: `-`(ti: TimeInterval): TimeInterval	
`-`	times.html#-,TimeInterval,TimeInterval	times: `-`(ti1, ti2: TimeInterval): TimeInterval	
`+=`	times.html#+=,TimeInterval,TimeInterval	times: `+=`(a: var TimeInterval; b: TimeInterval)	
`-=`	times.html#-=,TimeInterval,TimeInterval	times: `-=`(a: var TimeInterval; b: TimeInterval)	
between	times.html#between,DateTime,DateTime	times: between(startDt, endDt: DateTime): TimeInterval	
toParts	times.html#toParts,TimeInterval	times: toParts(ti: TimeInterval): TimeIntervalParts	
`$`	times.html#$,TimeInterval	times: `$`(ti: TimeInterval): string	
nanoseconds	times.html#nanoseconds,int	times: nanoseconds(nanos: int): TimeInterval	
microseconds	times.html#microseconds,int	times: microseconds(micros: int): TimeInterval	
milliseconds	times.html#milliseconds,int	times: milliseconds(ms: int): TimeInterval	
seconds	times.html#seconds,int	times: seconds(s: int): TimeInterval	
minutes	times.html#minutes,int	times: minutes(m: int): TimeInterval	
hours	times.html#hours,int	times: hours(h: int): TimeInterval	
days	times.html#days,int	times: days(d: int): TimeInterval	
weeks	times.html#weeks,int	times: weeks(w: int): TimeInterval	
months	times.html#months,int	times: months(m: int): TimeInterval	
years	times.html#years,int	times: years(y: int): TimeInterval	
`+`	times.html#+,DateTime,TimeInterval	times: `+`(dt: DateTime; interval: TimeInterval): DateTime	
`-`	times.html#-,DateTime,TimeInterval	times: `-`(dt: DateTime; interval: TimeInterval): DateTime	
`+`	times.html#+,Time,TimeInterval	times: `+`(time: Time; interval: TimeInterval): Time	
`-`	times.html#-,Time,TimeInterval	times: `-`(time: Time; interval: TimeInterval): Time	
`+=`	times.html#+=,DateTime,TimeInterval	times: `+=`(a: var DateTime; b: TimeInterval)	
`-=`	times.html#-=,DateTime,TimeInterval	times: `-=`(a: var DateTime; b: TimeInterval)	
`+=`	times.html#+=,Time,TimeInterval	times: `+=`(t: var Time; b: TimeInterval)	
`-=`	times.html#-=,Time,TimeInterval	times: `-=`(t: var Time; b: TimeInterval)	
epochTime	times.html#epochTime	times: epochTime(): float	
cpuTime	times.html#cpuTime	times: cpuTime(): float	
nanosecond=	times.html#nanosecond=,DateTime,NanosecondRange	times: nanosecond=(dt: var DateTime; value: NanosecondRange)	
second=	times.html#second=,DateTime,SecondRange	times: second=(dt: var DateTime; value: SecondRange)	
minute=	times.html#minute=,DateTime,MinuteRange	times: minute=(dt: var DateTime; value: MinuteRange)	
hour=	times.html#hour=,DateTime,HourRange	times: hour=(dt: var DateTime; value: HourRange)	
monthdayZero=	times.html#monthdayZero=,DateTime,int	times: monthdayZero=(dt: var DateTime; value: int)	
monthZero=	times.html#monthZero=,DateTime,int	times: monthZero=(dt: var DateTime; value: int)	
year=	times.html#year=,DateTime,int	times: year=(dt: var DateTime; value: int)	
weekday=	times.html#weekday=,DateTime,WeekDay	times: weekday=(dt: var DateTime; value: WeekDay)	
yearday=	times.html#yearday=,DateTime,YeardayRange	times: yearday=(dt: var DateTime; value: YeardayRange)	
isDst=	times.html#isDst=,DateTime,bool	times: isDst=(dt: var DateTime; value: bool)	
timezone=	times.html#timezone=,DateTime,Timezone	times: timezone=(dt: var DateTime; value: Timezone)	
utcOffset=	times.html#utcOffset=,DateTime,int	times: utcOffset=(dt: var DateTime; value: int)	
Examples	times.html#examples	 Examples	
Parsing and Formatting Dates	times.html#parsing-and-formatting-dates	 Parsing and Formatting Dates	
Duration vs TimeInterval	times.html#duration-vs-timeinterval	 Duration vs TimeInterval	
Duration	times.html#duration-vs-timeinterval-duration	  Duration	
TimeInterval	times.html#duration-vs-timeinterval-timeinterval	  TimeInterval	
How long is a day?	times.html#duration-vs-timeinterval-how-long-is-a-dayqmark	  How long is a day?	
See also	times.html#see-also	 See also	
