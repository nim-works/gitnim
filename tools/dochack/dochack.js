/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI721420302 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078606 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217741.base = NTI33555176;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555176;
var NNI973078612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI973078606, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI973078612.node = NNI973078612;
var NNI721420302 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI721420302.node = NNI721420302;

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);
var ConstSet9 = setConstr([65, 90], [97, 122]);

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}
var objectID_1207959716 = [0];

function setTheme(theme_570425350) {
    document.documentElement.setAttribute("data-theme", theme_570425350);
    window.localStorage.setItem("theme", theme_570425350);

  
}

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990048(result_301990050, result_301990050_Idx, x_301990051, start_301990052, n_301990053) {
    var Temporary1;

    var old_301990054 = (result_301990050[result_301990050_Idx]).length;
    if (result_301990050[result_301990050_Idx].length < (Temporary1 = chckRange(addInt(old_301990054, n_301990053), 0, 2147483647), Temporary1)) { for (var i = result_301990050[result_301990050_Idx].length; i < Temporary1; ++i) result_301990050[result_301990050_Idx].push(0); }
         else {result_301990050[result_301990050_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990068 = 0;
      var i_570426300 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570426300 < n_301990053)) break Label4;
            iHEX60gensym4_301990068 = i_570426300;
            result_301990050[result_301990050_Idx][chckIndx(addInt(old_301990054, iHEX60gensym4_301990068), 0, (result_301990050[result_301990050_Idx]).length - 1)] = x_301990051.charCodeAt(chckIndx(addInt(start_301990052, iHEX60gensym4_301990068), 0, (x_301990051).length - 1));
            i_570426300 = addInt(i_570426300, 1);
          }
      };
    };

  
}

function addChars_301990044(result_301990046, result_301990046_Idx, x_301990047) {
    addChars_301990048(result_301990046, result_301990046_Idx, x_301990047, 0, ((x_301990047) == null ? 0 : (x_301990047).length));

  
}

function addInt_301990069(result_301990070, result_301990070_Idx, x_301990071) {
    addChars_301990044(result_301990070, result_301990070_Idx, ((x_301990071) + ""));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addInt_301990069(result_301990088, result_301990088_Idx, x_301990089);

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990087(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556695) || [],[32,46,46,32] || [],HEX24_385875976(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function onDOMLoaded(e_570425371) {
            
function HEX3Aanonymous_570425395(event_570425396) {
                event_570425396.target.parentNode.style.display = "none";
                event_570425396.target.parentNode.nextSibling.style.display = "inline";

              
            }

    document.getElementById("theme-select").value = window.localStorage.getItem("theme");
    Label1: {
      var pragmaDots_570425394 = null;
      var colontmp__570426291 = [];
      colontmp__570426291 = document.getElementsByClassName("pragmadots");
      var i_570426293 = 0;
      var L_570426294 = (colontmp__570426291).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426293 < L_570426294)) break Label3;
            pragmaDots_570425394 = colontmp__570426291[chckIndx(i_570426293, 0, (colontmp__570426291).length - 1)];
            pragmaDots_570425394.onclick = HEX3Aanonymous_570425395;
            i_570426293 = addInt(i_570426293, 1);
            if (!(((colontmp__570426291).length == L_570426294))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function isWhitespace_570425665(x_570425666) {
  var result_570425667 = false;

    result_570425667 = (((x_570425666.nodeName == "#text") && !/\S/.test(x_570425666.textContent)) || (x_570425666.nodeName == "#comment"));

  return result_570425667;

}

function toToc_570425668(x_570425669, father_570425670) {
                var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
      var Temporary15;

    if ((x_570425669.nodeName == "UL")) {
    var f_570425678 = {heading: null, kids: [], sortId: (father_570425670.kids).length, doSort: false};
    var i_570425679 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_570425679 < x_570425669.childNodes.length)) break Label2;
          var nxt_570425680 = addInt(i_570425679, 1);
          Label3: {
              Label4: while (true) {
                if (!(nxt_570425680 < x_570425669.childNodes.length)) Temporary5 = false; else {                  Temporary5 = isWhitespace_570425665(x_570425669.childNodes[nxt_570425680]);                }              if (!Temporary5) break Label4;
                nxt_570425680 = addInt(nxt_570425680, 1);
              }
          };
            if (!(nxt_570425680 < x_570425669.childNodes.length)) Temporary8 = false; else {              Temporary8 = (x_570425669.childNodes[i_570425679].nodeName == "LI");            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = (x_570425669.childNodes[i_570425679].childNodes.length == 1);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = (x_570425669.childNodes[nxt_570425680].nodeName == "UL");            }          if (Temporary6) {
          var e_570425693 = {heading: x_570425669.childNodes[i_570425679].childNodes[0], kids: [], sortId: (f_570425678.kids).length, doSort: false};
          var it_570425694 = x_570425669.childNodes[nxt_570425680];
          Label9: {
            var j_570425699 = 0;
            var colontmp__570426307 = 0;
            colontmp__570426307 = it_570425694.childNodes.length;
            var i_570426308 = 0;
            Label10: {
                Label11: while (true) {
                if (!(i_570426308 < colontmp__570426307)) break Label11;
                  j_570425699 = i_570426308;
                  toToc_570425668(it_570425694.childNodes[j_570425699], e_570425693);
                  i_570426308 = addInt(i_570426308, 1);
                }
            };
          };
          f_570425678.kids.push(e_570425693);;
          i_570425679 = addInt(nxt_570425680, 1);
          }
          else {
            toToc_570425668(x_570425669.childNodes[i_570425679], f_570425678);
            i_570425679 = addInt(i_570425679, 1);
          }
          
        }
    };
    father_570425670.kids.push(f_570425678);;
    }
    else {
    if (isWhitespace_570425665(x_570425669)) {
    }
    else {
    if ((x_570425669.nodeName == "LI")) {
    var idx_570425717 = [];
    Label12: {
      var i_570425722 = 0;
      var colontmp__570426311 = 0;
      colontmp__570426311 = x_570425669.childNodes.length;
      var i_570426312 = 0;
      Label13: {
          Label14: while (true) {
          if (!(i_570426312 < colontmp__570426311)) break Label14;
            i_570425722 = i_570426312;
            if (!(isWhitespace_570425665(x_570425669.childNodes[i_570425722]))) {
            idx_570425717.push(i_570425722);;
            }
            
            i_570426312 = addInt(i_570426312, 1);
          }
      };
    };
      if (!((idx_570425717).length == 2)) Temporary15 = false; else {        Temporary15 = (x_570425669.childNodes[idx_570425717[chckIndx(1, 0, (idx_570425717).length - 1)]].nodeName == "UL");      }    if (Temporary15) {
    var e_570425738 = {heading: x_570425669.childNodes[idx_570425717[chckIndx(0, 0, (idx_570425717).length - 1)]], kids: [], sortId: (father_570425670.kids).length, doSort: false};
    var it_570425739 = x_570425669.childNodes[idx_570425717[chckIndx(1, 0, (idx_570425717).length - 1)]];
    Label16: {
      var j_570425744 = 0;
      var colontmp__570426315 = 0;
      colontmp__570426315 = it_570425739.childNodes.length;
      var i_570426316 = 0;
      Label17: {
          Label18: while (true) {
          if (!(i_570426316 < colontmp__570426315)) break Label18;
            j_570425744 = i_570426316;
            toToc_570425668(it_570425739.childNodes[j_570425744], e_570425738);
            i_570426316 = addInt(i_570426316, 1);
          }
      };
    };
    father_570425670.kids.push(e_570425738);;
    }
    else {
      Label19: {
        var i_570425753 = 0;
        var colontmp__570426319 = 0;
        colontmp__570426319 = x_570425669.childNodes.length;
        var i_570426320 = 0;
        Label20: {
            Label21: while (true) {
            if (!(i_570426320 < colontmp__570426319)) break Label21;
              i_570425753 = i_570426320;
              toToc_570425668(x_570425669.childNodes[i_570425753], father_570425670);
              i_570426320 = addInt(i_570426320, 1);
            }
        };
      };
    }
    
    }
    else {
    father_570425670.kids.push({heading: x_570425669, kids: [], sortId: (father_570425670.kids).length, doSort: false});;
    }
    }}

  
}

function extractItems_570425502(x_570425503, heading_570425504, items_570425505, items_570425505_Idx) {
  BeforeRet: {
    if ((x_570425503 == null)) {
    break BeforeRet;
    }
    
    if ((!((x_570425503.heading == null)) && (x_570425503.heading.textContent == heading_570425504))) {
    Label1: {
      var i_570425522 = 0;
      var colontmp__570426323 = 0;
      colontmp__570426323 = (x_570425503.kids).length;
      var i_570426324 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426324 < colontmp__570426323)) break Label3;
            i_570425522 = i_570426324;
            items_570425505[items_570425505_Idx].push(x_570425503.kids[chckIndx(i_570425522, 0, (x_570425503.kids).length - 1)].heading);;
            i_570426324 = addInt(i_570426324, 1);
          }
      };
    };
    }
    else {
      Label4: {
        var k_570425548 = null;
        var i_570426328 = 0;
        var L_570426329 = (x_570425503.kids).length;
        Label5: {
            Label6: while (true) {
            if (!(i_570426328 < L_570426329)) break Label6;
              k_570425548 = x_570425503.kids[chckIndx(i_570426328, 0, (x_570425503.kids).length - 1)];
              extractItems_570425502(k_570425548, heading_570425504, items_570425505, items_570425505_Idx);
              i_570426328 = addInt(i_570426328, 1);
              if (!(((x_570425503.kids).length == L_570426329))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };

  
}

function tree_570425433(tag_570425434, kids_570425435) {
  var result_570425436 = null;

    result_570425436 = document.createElement(tag_570425434);
    Label1: {
      var k_570425450 = null;
      var i_570426341 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426341 < (kids_570425435).length)) break Label3;
            k_570425450 = kids_570425435[chckIndx(i_570426341, 0, (kids_570425435).length - 1)];
            result_570425436.appendChild(k_570425450);
            i_570426341 = addInt(i_570426341, 1);
          }
      };
    };

  return result_570425436;

}

function text_570425458(s_570425459) {
  var result_570425460 = null;

    result_570425460 = document.createTextNode(s_570425459);

  return result_570425460;

}

function uncovered_570425819(x_570425820) {
    var Temporary1;

  var result_570425821 = null;

  BeforeRet: {
    if ((((x_570425820.kids).length == 0) && !((x_570425820.heading == null)))) {
    if (!(x_570425820.heading.hasOwnProperty('__karaxMarker__'))) {
    Temporary1 = x_570425820;
    }
    else {
    Temporary1 = null;
    }
    
    result_570425821 = Temporary1;
    break BeforeRet;
    }
    
    result_570425821 = {heading: x_570425820.heading, kids: [], sortId: x_570425820.sortId, doSort: x_570425820.doSort};
    Label2: {
      var k_570425836 = null;
      var i_570426348 = 0;
      var L_570426349 = (x_570425820.kids).length;
      Label3: {
          Label4: while (true) {
          if (!(i_570426348 < L_570426349)) break Label4;
            k_570425836 = x_570425820.kids[chckIndx(i_570426348, 0, (x_570425820.kids).length - 1)];
            var y_570425837 = uncovered_570425819(k_570425836);
            if (!((y_570425837 == null))) {
            result_570425821.kids.push(y_570425837);;
            }
            
            i_570426348 = addInt(i_570426348, 1);
            if (!(((x_570425820.kids).length == L_570426349))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((result_570425821.kids).length == 0)) {
    result_570425821 = null;
    }
    
  };

  return result_570425821;

}

function mergeTocs_570425849(orig_570425850, news_570425851) {
  var result_570425852 = null;

    result_570425852 = uncovered_570425819(orig_570425850);
    if ((result_570425852 == null)) {
    result_570425852 = news_570425851;
    }
    else {
      Label1: {
        var i_570425864 = 0;
        var colontmp__570426344 = 0;
        colontmp__570426344 = (news_570425851.kids).length;
        var i_570426345 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_570426345 < colontmp__570426344)) break Label3;
              i_570425864 = i_570426345;
              result_570425852.kids.push(news_570425851.kids[chckIndx(i_570425864, 0, (news_570425851.kids).length - 1)]);;
              i_570426345 = addInt(i_570426345, 1);
            }
        };
      };
    }
    

  return result_570425852;

}

function buildToc_570425869(orig_570425870, types_570425871, procs_570425872) {
  var result_570425873 = null;

    var newStuff_570425878 = {heading: null, kids: [], doSort: true, sortId: 0};
    Label1: {
      var t_570425882 = null;
      var i_570426336 = 0;
      var L_570426337 = (types_570425871).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426336 < L_570426337)) break Label3;
            t_570425882 = types_570425871[chckIndx(i_570426336, 0, (types_570425871).length - 1)];
            var c_570425887 = {heading: t_570425882.cloneNode(true), kids: [], doSort: true, sortId: 0};
            t_570425882.__karaxMarker__ = true;
            Label4: {
              var p_570425891 = null;
              var i_570426333 = 0;
              var L_570426334 = (procs_570425872).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_570426333 < L_570426334)) break Label6;
                    p_570425891 = procs_570425872[chckIndx(i_570426333, 0, (procs_570425872).length - 1)];
                    if (!(p_570425891.hasOwnProperty('__karaxMarker__'))) {
                    var xx_570425892 = p_570425891.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_570425892).length == 1) && (xx_570425892[chckIndx(0, 0, (xx_570425892).length - 1)].textContent == t_570425882.textContent))) {
                    var q_570425897 = tree_570425433("A", [text_570425458(p_570425891.title)]);
                    q_570425897.setAttribute("href", p_570425891.getAttribute("href"));
                    c_570425887.kids.push({heading: q_570425897, kids: [], sortId: 0, doSort: false});;
                    p_570425891.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    i_570426333 = addInt(i_570426333, 1);
                    if (!(((procs_570425872).length == L_570426334))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            newStuff_570425878.kids.push(c_570425887);;
            i_570426336 = addInt(i_570426336, 1);
            if (!(((types_570425871).length == L_570426337))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570425873 = mergeTocs_570425849(orig_570425870, newStuff_570425878);

  return result_570425873;

}

function add_570425451(parent_570425452, kid_570425453) {
    if (((parent_570425452.nodeName == "TR") && ((kid_570425453.nodeName == "TD") || (kid_570425453.nodeName == "TH")))) {
    var k_570425454 = document.createElement("TD");
    k_570425454.appendChild(kid_570425453);
    parent_570425452.appendChild(k_570425454);
    }
    else {
    parent_570425452.appendChild(kid_570425453);
    }
    

  
}

function setClass_570425455(e_570425456, value_570425457) {
    e_570425456.setAttribute("class", value_570425457);

  
}

function toHtml_570425567(x_570425568, isRoot_570425569) {
    
function HEX3Aanonymous_570425587(a_570425588, b_570425589) {
      var result_570425590 = 0;

      BeforeRet: {
        if ((!((a_570425588.heading == null)) && !((b_570425589.heading == null)))) {
        var x_570425599 = a_570425588.heading.textContent;
        var y_570425600 = b_570425589.heading.textContent;
        if ((x_570425599 < y_570425600)) {
        result_570425590 = -1;
        break BeforeRet;
        }
        
        if ((y_570425600 < x_570425599)) {
        result_570425590 = 1;
        break BeforeRet;
        }
        
        result_570425590 = 0;
        break BeforeRet;
        }
        else {
          result_570425590 = subInt(a_570425588.sortId, b_570425589.sortId);
          break BeforeRet;
        }
        
      };

      return result_570425590;

    }

  var result_570425570 = null;

  BeforeRet: {
    if ((x_570425568 == null)) {
    result_570425570 = null;
    break BeforeRet;
    }
    
    if (((x_570425568.kids).length == 0)) {
    if ((x_570425568.heading == null)) {
    result_570425570 = null;
    break BeforeRet;
    }
    
    result_570425570 = x_570425568.heading.cloneNode(true);
    break BeforeRet;
    }
    
    result_570425570 = tree_570425433("DIV", []);
    if ((!((x_570425568.heading == null)) && !(x_570425568.heading.hasOwnProperty('__karaxMarker__')))) {
    add_570425451(result_570425570, x_570425568.heading.cloneNode(true));
    }
    
    var ul_570425586 = tree_570425433("UL", []);
    if (isRoot_570425569) {
    setClass_570425455(ul_570425586, "simple simple-toc");
    }
    else {
    setClass_570425455(ul_570425586, "simple");
    }
    
    if (x_570425568.doSort) {
    x_570425568.kids.sort(HEX3Aanonymous_570425587);
    }
    
    Label1: {
      var k_570425612 = null;
      var i_570426352 = 0;
      var L_570426353 = (x_570425568.kids).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426352 < L_570426353)) break Label3;
            k_570425612 = x_570425568.kids[chckIndx(i_570426352, 0, (x_570425568.kids).length - 1)];
            var y_570425613 = toHtml_570425567(k_570425612, false);
            if (!((y_570425613 == null))) {
            add_570425451(ul_570425586, tree_570425433("LI", [y_570425613]));
            }
            
            i_570426352 = addInt(i_570426352, 1);
            if (!(((x_570425568.kids).length == L_570426353))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((ul_570425586.childNodes.length == 0))) {
    add_570425451(result_570425570, ul_570425586);
    }
    
    if ((result_570425570.childNodes.length == 0)) {
    result_570425570 = null;
    }
    
  };

  return result_570425570;

}

function replaceById_570425461(id_570425462, newTree_570425463) {
    var x_570425464 = document.getElementById(id_570425462);
    x_570425464.parentNode.replaceChild(newTree_570425463, x_570425464);
    newTree_570425463.id = id_570425462;

  
}

function togglevis_570425920(d_570425921) {
    if ((d_570425921.style.display == "none")) {
    d_570425921.style.display = "inline";
    }
    else {
      d_570425921.style.display = "none";
    }
    

  
}

function groupBy(value_570425923) {
    var toc_570425924 = document.getElementById("toc-list");
    if ((alternative_570425919[0] == null)) {
    var tt_570425932 = {heading: null, kids: [], sortId: 0, doSort: false};
    toToc_570425668(toc_570425924, tt_570425932);
    tt_570425932 = tt_570425932.kids[chckIndx(0, 0, (tt_570425932.kids).length - 1)];
    var types_570425937 = [[]];
    var procs_570425942 = [[]];
    extractItems_570425502(tt_570425932, "Types", types_570425937, 0);
    extractItems_570425502(tt_570425932, "Procs", procs_570425942, 0);
    extractItems_570425502(tt_570425932, "Converters", procs_570425942, 0);
    extractItems_570425502(tt_570425932, "Methods", procs_570425942, 0);
    extractItems_570425502(tt_570425932, "Templates", procs_570425942, 0);
    extractItems_570425502(tt_570425932, "Macros", procs_570425942, 0);
    extractItems_570425502(tt_570425932, "Iterators", procs_570425942, 0);
    var ntoc_570425943 = buildToc_570425869(tt_570425932, types_570425937[0], procs_570425942[0]);
    var x_570425944 = toHtml_570425567(ntoc_570425943, true);
    alternative_570425919[0] = tree_570425433("DIV", [x_570425944]);
    }
    
    if ((value_570425923 == "type")) {
    replaceById_570425461("tocRoot", alternative_570425919[0]);
    }
    else {
    replaceById_570425461("tocRoot", tree_570425433("DIV", []));
    }
    
    togglevis_570425920(document.getElementById("toc-list"));

  
}

function HEX5BHEX5D_738198807(s_738198810, x_738198811) {
  var result_738198812 = [];

    var a_738198814 = x_738198811.a;
    var L_738198816 = addInt(subInt(subInt((s_738198810).length, x_738198811.b), a_738198814), 1);
    result_738198812 = nimCopy(null, mnewString(chckRange(L_738198816, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_738198821 = 0;
      var i_570426362 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426362 < L_738198816)) break Label3;
            i_738198821 = i_570426362;
            result_738198812[chckIndx(i_738198821, 0, (result_738198812).length - 1)] = s_738198810[chckIndx(addInt(i_738198821, a_738198814), 0, (s_738198810).length - 1)];
            i_570426362 = addInt(i_570426362, 1);
          }
      };
    };

  return result_738198812;

}

function HEX2EHEX2E_973078624(a_973078627, b_973078628) {
  var result_973078631 = ({a: 0, b: 0});

    result_973078631 = nimCopy(result_973078631, {a: a_973078627, b: b_973078628}, NTI973078612);

  return result_973078631;

}
async function loadIndex_570426089() {
  var result_570426091 = null;

  BeforeRet: {
    var indexURL_570426097 = document.getElementById("indexLink").getAttribute("href");
    var rootURL_570426123 = HEX5BHEX5D_738198807(cstrToNimstr(indexURL_570426097), HEX2EHEX2E_973078624(0, 14));
    var resp_570426135 = (await (await fetch(indexURL_570426097)).text());
    var indexElem_570426136 = document.createElement("div");
    indexElem_570426136.innerHTML = resp_570426135;
    Label1: {
      var href_570426158 = null;
      var colontmp__570426356 = [];
      colontmp__570426356 = indexElem_570426136.getElementsByClassName("reference");
      var i_570426358 = 0;
      var L_570426359 = (colontmp__570426356).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426358 < L_570426359)) break Label3;
            href_570426158 = colontmp__570426356[chckIndx(i_570426358, 0, (colontmp__570426356).length - 1)];
            href_570426158.setAttribute("href", toJSStr((rootURL_570426123 || []).concat(cstrToNimstr(href_570426158.getAttribute("href")) || [])));
            db_570425954[0].push(href_570426158);;
            contents_570425955[0].push(href_570426158.getAttribute("data-doc-search-tag"));;
            i_570426358 = addInt(i_570426358, 1);
            if (!(((colontmp__570426356).length == L_570426359))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570426091 = undefined;
    break BeforeRet;
  };

  return result_570426091;

}

function then_570426232(future_570426235, onSuccess_570426236, onReject_570426237) {
  var result_570426238 = null;

  BeforeRet: {
    var ret_570426248 = null;
    ret_570426248 = future_570426235.then(onSuccess_570426236, onReject_570426237)
    result_570426238 = ret_570426248;
    break BeforeRet;
  };

  return result_570426238;

}

function nsuToLowerAsciiChar(c_738197588) {
  var result_738197589 = 0;

    if ((ConstSet2[c_738197588] != undefined)) {
    result_738197589 = (c_738197588 ^ 32);
    }
    else {
      result_738197589 = c_738197588;
    }
    

  return result_738197589;

}

function fuzzyMatch_721420304(pattern_721420305, str_721420306) {
              var Temporary4;
              var Temporary5;
                var Temporary6;
      var Temporary7;
        var Temporary8;

  var result_721420309 = {Field0: 0, Field1: false};

    var scoreState_721420310 = -100;
    var headerMatched_721420311 = false;
    var unmatchedLeadingCharCount_721420312 = 0;
    var consecutiveMatchCount_721420313 = 0;
    var strIndex_721420314 = 0;
    var patIndex_721420315 = 0;
    var score_721420316 = 0;
    Label1: {
        Label2: while (true) {
        if (!((strIndex_721420314 < ((str_721420306) == null ? 0 : (str_721420306).length)) && (patIndex_721420315 < ((pattern_721420305) == null ? 0 : (pattern_721420305).length)))) break Label2;
          Label3: {
            var patternChar_721420319 = nsuToLowerAsciiChar(pattern_721420305.charCodeAt(chckIndx(patIndex_721420315, 0, (pattern_721420305).length - 1)));
            var strChar_721420320 = nsuToLowerAsciiChar(str_721420306.charCodeAt(chckIndx(strIndex_721420314, 0, (str_721420306).length - 1)));
            if ((ConstSet3[patternChar_721420319] != undefined)) {
            patIndex_721420315 = addInt(patIndex_721420315, 1);
            break Label3;
            }
            
            if ((ConstSet4[strChar_721420320] != undefined)) {
            strIndex_721420314 = addInt(strIndex_721420314, 1);
            break Label3;
            }
            
            if ((!(headerMatched_721420311) && (strChar_721420320 == 58))) {
            headerMatched_721420311 = true;
            scoreState_721420310 = -100;
            score_721420316 = ((Math.floor((0.5 * score_721420316))) | 0);
            patIndex_721420315 = 0;
            strIndex_721420314 = addInt(strIndex_721420314, 1);
            break Label3;
            }
            
            if ((strChar_721420320 == patternChar_721420319)) {
            switch (scoreState_721420310) {
            case -100:
            case 20:
              scoreState_721420310 = 10;
              break;
            case 0:
              scoreState_721420310 = 5;
              score_721420316 = addInt(score_721420316, scoreState_721420310);
              break;
            case 10:
            case 5:
              consecutiveMatchCount_721420313 = addInt(consecutiveMatchCount_721420313, 1);
              scoreState_721420310 = 5;
              score_721420316 = addInt(score_721420316, mulInt(5, consecutiveMatchCount_721420313));
              if ((scoreState_721420310 == 10)) {
              score_721420316 = addInt(score_721420316, 10);
              }
              
              var onBoundary_721420372 = (patIndex_721420315 == ((pattern_721420305) == null ? -1 : (pattern_721420305).length - 1));
              if ((!(onBoundary_721420372) && (strIndex_721420314 < ((str_721420306) == null ? -1 : (str_721420306).length - 1)))) {
              var nextPatternChar_721420373 = nsuToLowerAsciiChar(pattern_721420305.charCodeAt(chckIndx(addInt(patIndex_721420315, 1), 0, (pattern_721420305).length - 1)));
              var nextStrChar_721420374 = nsuToLowerAsciiChar(str_721420306.charCodeAt(chckIndx(addInt(strIndex_721420314, 1), 0, (str_721420306).length - 1)));
              if (!!((ConstSet5[nextStrChar_721420374] != undefined))) Temporary4 = false; else {                Temporary4 = !((nextStrChar_721420374 == nextPatternChar_721420373));              }              onBoundary_721420372 = Temporary4;
              }
              
              if (onBoundary_721420372) {
              scoreState_721420310 = 20;
              score_721420316 = addInt(score_721420316, scoreState_721420310);
              }
              
              break;
            case -1:
            case -3:
              if (!((ConstSet6[str_721420306.charCodeAt(chckIndx(subInt(strIndex_721420314, 1), 0, (str_721420306).length - 1))] != undefined))) Temporary5 = true; else {                if (!(ConstSet7[str_721420306.charCodeAt(chckIndx(subInt(strIndex_721420314, 1), 0, (str_721420306).length - 1))] != undefined)) Temporary6 = false; else {                  Temporary6 = (ConstSet8[str_721420306.charCodeAt(chckIndx(strIndex_721420314, 0, (str_721420306).length - 1))] != undefined);                }                Temporary5 = Temporary6;              }              var isLeadingChar_721420398 = Temporary5;
              if (isLeadingChar_721420398) {
              scoreState_721420310 = 10;
              }
              else {
                scoreState_721420310 = 0;
                score_721420316 = addInt(score_721420316, scoreState_721420310);
              }
              
              break;
            }
            patIndex_721420315 = addInt(patIndex_721420315, 1);
            }
            else {
              switch (scoreState_721420310) {
              case -100:
                scoreState_721420310 = -3;
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                break;
              case 5:
                scoreState_721420310 = -1;
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                consecutiveMatchCount_721420313 = 0;
                break;
              case -3:
                if ((unmatchedLeadingCharCount_721420312 < 3)) {
                scoreState_721420310 = -3;
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                }
                
                unmatchedLeadingCharCount_721420312 = addInt(unmatchedLeadingCharCount_721420312, 1);
                break;
              default: 
                scoreState_721420310 = -1;
                score_721420316 = addInt(score_721420316, scoreState_721420310);
                break;
              }
            }
            
            strIndex_721420314 = addInt(strIndex_721420314, 1);
          };
        }
    };
      if (!(patIndex_721420315 == ((pattern_721420305) == null ? 0 : (pattern_721420305).length))) Temporary7 = false; else {        if ((strIndex_721420314 == ((str_721420306) == null ? 0 : (str_721420306).length))) Temporary8 = true; else {          Temporary8 = !((ConstSet9[str_721420306.charCodeAt(chckIndx(strIndex_721420314, 0, (str_721420306).length - 1))] != undefined));        }        Temporary7 = Temporary8;      }    if (Temporary7) {
    score_721420316 = addInt(score_721420316, 10);
    }
    
    var colontmp__570426376 = nimMax(0, score_721420316);
    var colontmp__570426377 = (0 < score_721420316);
    result_721420309 = nimCopy(result_721420309, {Field0: colontmp__570426376, Field1: colontmp__570426377}, NTI721420302);

  return result_721420309;

}

function escapeCString_570425956(x_570425957, x_570425957_Idx) {
    var s_570425958 = [];
    Label1: {
      var c_570425959 = 0;
      var iHEX60gensym6_570426380 = 0;
      var nHEX60gensym6_570426381 = ((x_570425957[x_570425957_Idx]) == null ? 0 : (x_570425957[x_570425957_Idx]).length);
      Label2: {
          Label3: while (true) {
          if (!(iHEX60gensym6_570426380 < nHEX60gensym6_570426381)) break Label3;
            c_570425959 = x_570425957[x_570425957_Idx].charCodeAt(chckIndx(iHEX60gensym6_570426380, 0, (x_570425957[x_570425957_Idx]).length - 1));
            switch (c_570425959) {
            case 60:
              s_570425958.push.apply(s_570425958, [38,108,116,59]);;
              break;
            case 62:
              s_570425958.push.apply(s_570425958, [38,103,116,59]);;
              break;
            default: 
              addChar(s_570425958, c_570425959);;
              break;
            }
            iHEX60gensym6_570426380 = addInt(iHEX60gensym6_570426380, 1);
          }
      };
    };
    x_570425957[x_570425957_Idx] = toJSStr(s_570425958);

  
}

function dosearch_570425960(value_570425961) {
    
function HEX3Aanonymous_570425987(a_570425992, b_570425993) {
      var result_570425998 = 0;

        result_570425998 = subInt(b_570425993["Field1"], a_570425992["Field1"]);

      return result_570425998;

    }

  var result_570425962 = null;

  BeforeRet: {
    if (((db_570425954[0]).length == 0)) {
    break BeforeRet;
    }
    
    var ul_570425966 = tree_570425433("UL", []);
    result_570425962 = tree_570425433("DIV", []);
    setClass_570425455(result_570425962, "search_results");
    var matches_570425971 = [];
    Label1: {
      var i_570425979 = 0;
      var colontmp__570426366 = 0;
      colontmp__570426366 = (db_570425954[0]).length;
      var i_570426367 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426367 < colontmp__570426366)) break Label3;
            i_570425979 = i_570426367;
            Label4: {
              var c_570425980 = contents_570425955[0][chckIndx(i_570425979, 0, (contents_570425955[0]).length - 1)];
              if (((c_570425980 == "Examples") || (c_570425980 == "PEG construction"))) {
              break Label4;
              }
              
              var colontmp__570426373 = fuzzyMatch_721420304(value_570425961, c_570425980);
              var score_570425981 = colontmp__570426373["Field0"];
              var matched_570425982 = colontmp__570426373["Field1"];
              if (matched_570425982) {
              matches_570425971.push({Field0: db_570425954[0][chckIndx(i_570425979, 0, (db_570425954[0]).length - 1)], Field1: score_570425981});;
              }
              
            };
            i_570426367 = addInt(i_570426367, 1);
          }
      };
    };
    matches_570425971.sort(HEX3Aanonymous_570425987);
    Label5: {
      var i_570426015 = 0;
      var colontmp__570426370 = 0;
      colontmp__570426370 = nimMin((matches_570425971).length, 29);
      var i_570426371 = 0;
      Label6: {
          Label7: while (true) {
          if (!(i_570426371 < colontmp__570426370)) break Label7;
            i_570426015 = i_570426371;
            matches_570425971[chckIndx(i_570426015, 0, (matches_570425971).length - 1)]["Field0"].innerHTML = matches_570425971[chckIndx(i_570426015, 0, (matches_570425971).length - 1)]["Field0"].getAttribute("data-doc-search-tag");
            escapeCString_570425956(matches_570425971[chckIndx(i_570426015, 0, (matches_570425971).length - 1)]["Field0"], "innerHTML");
            add_570425451(ul_570425966, tree_570425433("LI", [matches_570425971[chckIndx(i_570426015, 0, (matches_570425971).length - 1)]["Field0"]]));
            i_570426371 = addInt(i_570426371, 1);
          }
      };
    };
    if ((ul_570425966.childNodes.length == 0)) {
    add_570425451(result_570425962, tree_570425433("B", [text_570425458("no search results")]));
    }
    else {
      add_570425451(result_570425962, tree_570425433("B", [text_570425458("search results")]));
      add_570425451(result_570425962, ul_570425966);
    }
    
  };

  return result_570425962;

}

function search() {
    
function wrapper_570426217() {
        var elem_570426218 = document.getElementById("searchInput");
        var value_570426219 = elem_570426218.value;
        if (!((((value_570426219) == null ? 0 : (value_570426219).length) == 0))) {
        if ((oldtoc_570426212[0] == null)) {
        oldtoc_570426212[0] = document.getElementById("tocRoot");
        }
        
        var results_570426223 = dosearch_570425960(value_570426219);
        replaceById_570425461("tocRoot", results_570426223);
        }
        else {
        if (!((oldtoc_570426212[0] == null))) {
        replaceById_570425461("tocRoot", oldtoc_570426212[0]);
        }
        }

      
    }

    if ((loadIndexFut_570426215[0] == null)) {
    loadIndexFut_570426215[0] = loadIndex_570426089();
    var _ = then_570426232(loadIndexFut_570426215[0], wrapper_570426217, null);
    }
    
    if (!((timer_570426213[0] == null))) {
    clearTimeout(timer_570426213[0]);
    }
    
    timer_570426213[0] = setTimeout(wrapper_570426217, 400);

  
}

function copyToClipboard() {
    
    function updatePreTags() {

      const allPreTags = document.querySelectorAll("pre")
    
      allPreTags.forEach((e) => {
      
          const div = document.createElement("div")
          div.classList.add("copyToClipBoard")
    
          const preTag = document.createElement("pre")
          preTag.innerHTML = e.innerHTML
    
          const button = document.createElement("button")
          button.value = e.textContent.replace('...', '') 
          button.classList.add("copyToClipBoardBtn")
          button.style.cursor = "pointer"
    
          div.appendChild(preTag)
          div.appendChild(button)
    
          e.outerHTML = div.outerHTML
      
      })
    }


    function copyTextToClipboard(e) {
        const clipBoardContent = e.target.value
        navigator.clipboard.writeText(clipBoardContent).then(function() {
            e.target.style.setProperty("--clipboard-image", "var(--clipboard-image-selected)")
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    window.addEventListener("click", (e) => {
        if (e.target.classList.contains("copyToClipBoardBtn")) {
            copyTextToClipboard(e)
          }
    })

    window.addEventListener("mouseover", (e) => {
        if (e.target.nodeName === "PRE") {
            e.target.nextElementSibling.style.setProperty("--clipboard-image", "var(--clipboard-image-normal)")
        }
    })
    
    window.addEventListener("DOMContentLoaded", updatePreTags)

    

  
}
var Temporary1;
var t_570425369 = window.localStorage.getItem("theme");
if ((t_570425369 == null)) {
Temporary1 = "auto";
}
else {
Temporary1 = t_570425369;
}

setTheme(Temporary1);
var alternative_570425919 = [null];
var db_570425954 = [[]];
var contents_570425955 = [[]];
var oldtoc_570426212 = [null];
var timer_570426213 = [null];
var loadIndexFut_570426215 = [null];
copyToClipboard();
window.addEventListener("DOMContentLoaded", onDOMLoaded, false);
